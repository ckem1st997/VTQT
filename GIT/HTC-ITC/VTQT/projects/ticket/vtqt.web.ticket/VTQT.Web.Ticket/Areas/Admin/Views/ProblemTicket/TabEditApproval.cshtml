@model ApprovalTicketSearchModel

@{
    Layout = null;
}

<script>
    var approval = {
        grd: {
            el: '#approval_grd',
            $el: {},
            init: function() { },
            api: {},
            tmp: {
                activate: function(activate) { }
            },
            data: function() { }
        },
        btnAddAddApproval: {
            el: '#btnAddApproval',
            $el: {},
            init: function() { }
        },
        btnEditApproval: {
            el: '#btnEditApproval',
            $el: {},
            init: function() { }
        },
        btnRemove: {
            el: '#btnRemoveApproval',
            $el: {},
            init: function() { }
        },
        init: function() { },
        activates: function(activate, ids) { }
    }

    var approvalGrd = approval.grd;
    var btnAddApproval = approval.btnAddAddApproval;
    var btnRemoveApproval = approval.btnRemove;
    var btnEditApproval = approval.btnEditApproval;

    approvalGrd.data = function() {
        var searchModel = {
            TicketId: '@Model.TicketId'
        };

        return searchModel;
    };
</script>

<div class="row" style="overflow: hidden">
    <script id="toolbar-approval" type="text/x-kendo-template">
        <div class="toolbar" style="line-height: 28px; font-size: 12px; font-weight: 600; font-family: TahomaCustom, Arial, sans-serif !important; color: \\#23527c">
            <span style="padding-left: 20px">Danh sách phê duyệt</span>
        </div>
        <div class="toolbar" style="display: inline-block; margin-right: 0; margin-left: auto">
            <a id="btnAddApproval" class="btn btn-default btn-sm" href="javascript:void(0)" style="min-width: 80px"><i class="flaticon2-plus green"></i> Thêm phê duyệt</a>
            <a id="btnEditApproval" href="javascript:void(0)" class="btn btn-default btn-sm"><i class="flaticon2-pen yellow"></i> Chỉnh sửa</a>
            <a id="btnRemoveApproval" class="btn btn-default btn-sm" href="javascript:void(0)" style="min-width: 80px"><i class="flaticon-delete red"></i> Xóa (Đã chọn)</a>
        </div>
    </script>
    @(Html.Kendo().Grid<ApprovalTicketModel>()
    .Name("approval_grd")
    .HtmlAttributes(new {style = "border: 1px solid lightgray" })
    .Columns(columns =>
    {
    columns.Select().Locked().Width(30);
    columns.ForeignKey(x => x.Approver, (System.Collections.IEnumerable)ViewData["approvers"] ?? new List<SelectListItem>(), "Value", "Text").Width(350);
    columns.ForeignKey(x => x.Progress, (System.Collections.IEnumerable)ViewData["progress"] ?? new List<SelectListItem>(), "Value", "Text").Width(350);
    columns.Bound(x => x.ReasonDetail).Width(350);
    })
    .ToolBar(toolbar => { toolbar.ClientTemplateId("toolbar-approval"); })
    .DataSource(dataSource => dataSource
    .Ajax()
    .PageSize(int.MaxValue)
    .ServerOperation(false)
    .Read(read => read.Action("GetApprovalTicket", "ProblemTicket").Data("approvalGrd.data"))
    )
    .NoRecords()
    .Scrollable(scr => scr.Enabled(true))
    .Pageable(pageable => pageable.Enabled(false))
    .Selectable(selectable => selectable.Type(GridSelectionType.Row).Mode(GridSelectionMode.Multiple))
    .Navigatable())
</div>

<script>
    approval.init = function() {
        approvalGrd.init();
        btnAddApproval.init();
        btnRemoveApproval.init();
        btnEditApproval.init();
    };

    approvalGrd.init = function() {
        approvalGrd.$el = $(approvalGrd.el);
        approvalGrd.api = approvalGrd.$el.data('kendoGrid');
    };

    approval.activates = function(activate, ids) {
        ids = ids || approvalGrd.api.selectedIds();
        if (ids.length > 0) {

        } else {
            notify({ text: '@T("Notifies.NoItemsSelected").JavaScriptStringEncode()', type: 'info' });
        }
    };

    btnAddApproval.init = function() {
        btnAddApproval.$el = $(btnAddApproval.el);
        btnAddApproval.$el.click(function(e) {

            app.window.form.open({
                url: '@Url.Action("AddApproval")', options: { width: '500px' }, callback: function() {
                    var approval = window.frmAddApproval.$el.serializeObject();
                    var approvalModel = {};
                    approvalModel.ReasonDetail = approval.ReasonDetail;
                    approvalModel.Confirm = approval.Confirm;
                    approvalModel.TicketId = '@Model.TicketId';
                    approvalModel.Approver = approval.Approver;
                    approvalModel.Progress = approval.Progress;

                    $.ajax({
                        url: '@Url.Action("AddApproval")',
                        data: { addApproval: approvalModel },
                        dataType: 'json',
                        type: 'POST',
                        success: function(res) {
                            if (res.success) {
                                approvalGrd.api.reload();
                            }
                        }
                    });
                    //Close form add item
                    window.frmAddApproval.winForm.close();
                }
            });

        });
    };

    btnEditApproval.init = function() {
        btnEditApproval.$el = $(btnEditApproval.el);
        btnEditApproval.$el.click(function(e) {

            var id = approvalGrd.api.selectedIds()[0];
            if (id) {
                app.window.form.open({
                    url: '@Url.Action("EditApproval")/' + '?id=' + id, options: { width: '500px' }, callback: function() {
                        var approval = window.frmEditApproval.$el.serializeObject();
                        var approvalTicketModel = {};
                        approvalTicketModel.Id = id;
                        approvalTicketModel.ReasonDetail = approval.ReasonDetail;
                        approvalTicketModel.Confirm = approval.Confirm;
                        approvalTicketModel.TicketId = '@Model.TicketId';
                        approvalTicketModel.Approver = approval.Approver;
                        approvalTicketModel.Progress = approval.Progress;

                        $.ajax({
                            url: '@Url.Action("EditApproval")',
                            data: { editApproval: approvalTicketModel },
                            dataType: 'json',
                            type: 'POST',
                            success: function(res) {
                                if (res.success) {
                                    approvalGrd.api.reload();
                                }
                            }
                        });
                        //Close form add item
                        window.frmEditApproval.winForm.close();
                    }
                });
            } else {
                notify({ text: '@T("Notifies.NoItemsSelected").JavaScriptStringEncode()', type: 'info' });
            }

        });
    };

    btnRemoveApproval.init = function () {
        btnRemoveApproval.$el = $(btnRemoveApproval.el);
        btnRemoveApproval.$el.click(function (e) {
            var ids = approvalGrd.api.selectedIds();
            if (ids.length > 0) {
                app.window.deletes.open({ url: '@Url.Action("DeleteApproval")', ids: ids, options: { width: '450px' }, callback: function () { approvalGrd.api.reload(); } });
                } else {
                    notify({ text: '@T("Notifies.NoItemsSelected").JavaScriptStringEncode()', type: 'info' });
                }
        });
    };

    approvalGrd.tmp.activate = function(activate) {
        return activate ? '<i class="fa fa-check green"></i>' : '<i class="fa fa-times" style="color: red"></i>';
    };

    $(function() {
        approval.init();
    });
</script>

