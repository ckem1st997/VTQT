@model FtthModel

<script>
    var master = {
        urlEdit: '@Url.Action("Edit")',
        urlBackList: '@Url.Action("Index")',
        el: '.page-data',
        $el: {},
        tab: {
            el: '#tabIndex',
            $el: {},
            init: function () { },
            change: function () { }
        },
        file: {
            el: '#FilesUpload',
            $el: {},
            init: function () { },
            change: function () { },
            data: []
        },
        form: {
            el: '#form-data',
            $el: {},
            init: function () { }
        },
        btnAddCSReceive: {
            el: '#btnAddCSReceive',
            $el: {},
            init: function () { }
        },
        btnAddCsReport: {
            el: '#btnAddCsReport',
            $el: {},
            init: function () { }
        },
        btnAddTechnologyReceive: {
            el: '#btnAddTechnologyReceive',
            $el: {},
            init: function () { }
        },
        btnAddTechnologySucess: {
            el: '#btnAddTechnologySucess',
            $el: {},
            init: function () { }
        },
        btnEdit: {
            el: '#btnEdit',
            $el: {},
            init: function () { }
        },
        btnAssign: {
            el: '#btnAssign',
            $el: {},
            init: function () { }
        },
        btnBackList: {
            el: '#btnBackList',
            $el: {},
            init: function () { }
        },
        btnComment: {
            el: '#btnComment',
            $el: {},
            init: function () { }
        },
        init: function () { }
    };
    var form = master.form;
    var btnBackList = master.btnBackList;
    var btnEdit = master.btnEdit;
    var btnAssign = master.btnAssign;
    var tab = master.tab;
    var file = master.file;
    var btnComment = master.btnComment;
    var btnAddCSReceive = master.btnAddCSReceive;
    var btnAddTechnologySucess = master.btnAddTechnologySucess;
    var btnAddTechnologyReceive = master.btnAddTechnologyReceive;
    var btnAddCsReport = master.btnAddCsReport;

</script>

<style>
    div.k-grid-content.k-auto-scrollable {
        height: auto !important;
    }
</style>

<!-- #region Page Header -->
<div class="page-bar">
    <ul class="page-breadcrumb"></ul>
    <div class="page-toolbar">
        <div class="pull-right" style="display:flex">
            <div class="btn-toolbar" role="toolbar" aria-label="Right group">
                <a href="javascript:void(0)" class="btn btn-primary btn-sm" id="btnBackList"><i class="fa fa-arrow-left" aria-hidden="true"></i>Quay lại danh sách</a>
                <a href="javascript:void(0)" class="btn btn-warning btn-sm" id="btnEdit"><i class="fa fa-pencil" aria-hidden="true"></i>Chỉnh sửa</a>
                <button type="button" class="btn purple btn-sm dropdown-toggle" data-toggle="dropdown">
                    <i class="flaticon-more"></i> @T("Common.OtherActionsList") <i class="fa fa-angle-down"></i>
                </button>
                <ul class="dropdown-menu pull-right" role="menu">
                    <li>
                        <a id="btnAddCSReceive" data-action="csreceive" href="javascript:void(0)"><i class="fa fa-users"></i> @T("Common.CSReceive")</a>
                    </li>
                    <li>
                        <a id="btnAddTechnologyReceive" data-action="technologyreceive" href="javascript:void(0)"><i class="fa fa-users"></i> @T("Common.TechnologyReceive")</a>
                    </li>
                    <li>
                        <a id="btnAddTechnologySucess" data-action="technologysucess" href="javascript:void(0)"><i class="fa fa-users"></i> @T("Common.TechnologySucess")</a>
                    </li>
                    <li>
                        <a id="btnAddCsReport" data-action="ssreport" href="javascript:void(0)"><i class="fa fa-users"></i> @T("Common.CsReport")</a>
                    </li>
                </ul>
                @*<a data-action="exportrecall" href="javascript:void(0)" class="btn btn-success btn-sm"><i class="fa fa-users"></i>@T("Common.ExportData.DoneCR")</a>*@
            </div>
        </div>
    </div>
</div>
<!-- #endregion -->

<div class="page-data" style="padding-top: 10px; overflow-y: auto">
    <div class="form fixed-layout-form">
        <form id="form-data" class="form-horizontal" data-form-type="ajax">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-8">
                        <div class="row" style="margin-bottom: 30px">
                            <fieldset class="fieldset-no-border">
                                <legend style="color: #23527c; border-bottom: none; text-transform: uppercase">THÔNG TIN CHUNG</legend>
                                @Html.HiddenFor(m => m.ProjectId)
                                @Html.HiddenFor(m => m.Id)

                                <div class="row" style="margin-bottom: 5px">
                                    <div class="col-md-6" style="padding: 0">
                                        <div class="form-group form-group-sm">
                                            @Html.XBaseLabelFor(m => m.Code, true, new { @class = "control-label col-md-5", @style = "padding-left: 40px" }, true)
                                            <div class="col-md-5">
                                                @Html.TextBoxFor(m => m.Code, new { @class = "form-control", @style = "width: 100%", @readonly = true })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group form-group-sm" style="margin-bottom: 10px">
                                    @Html.XBaseLabelFor(m => m.Subject, true, new { @class = "control-label col-md-2", @style = "padding-left: 40px; width: 20.8%" }, true)
                                    <div class="col-md-9" style="width: 71%">
                                        @Html.TextAreaFor(m => m.Subject, new { @class = "form-control", @style = "width: 100%", @rows = "1", @readonly = true })
                                    </div>
                                </div>

                                <div class="form-group form-group-sm" style="margin-bottom: 10px">
                                    @Html.XBaseLabelFor(m => m.CID, true, new { @class = "control-label col-md-2", @style = "padding-left: 40px; width: 20.8%" })
                                    <div class="col-md-9" style="width: 71%">
                                        @Html.TextAreaFor(m => m.CID, new { @class = "form-control", @style = "width: 100%", @rows = "1", @readonly = true })
                                    </div>
                                </div>

                                <div class="form-group form-group-sm" style="margin-bottom: 10px">
                                    @Html.XBaseLabelFor(m => m.ComplaintContent, true, new { @class = "control-label col-md-2", @style = "padding-left: 40px; width: 20.8%" })
                                    <div class="col-md-9" style="width: 71%">
                                        @Html.TextAreaFor(m => m.ComplaintContent, new { @class = "form-control", @style = "width: 100%", @rows = "1", @readonly = true })
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                        <div class="row" style="width: 91.5%; overflow: hidden">
                            <fieldset class="fieldset-no-border" style="margin-bottom: 5px">
                                <legend style="color: #23527c; border-bottom: none; text-transform: uppercase; padding-left: 20px; padding-bottom: 15px">THÔNG TIN CHI TIẾT</legend>
                                @(Html.XBase().TabStrip()
                                .Name("tabIndex")
                                .HtmlAttributes(new { style = "padding-left: 30px" })
                                .Items(async x =>
                                {

                                    x.Add().Text("NOC")
                                       .Name("tbNoc")
                                       .LinkHtmlAttributes(new { data_tab_name = "Noc" })
                                       .Content(Html.PartialAsync("TabNocDetail", Model.ParitcularFtthModel).Result.RenderHtmlContent()).Selected(true);

                                    await EngineContext.Current.Resolve<IEventPublisher>().PublishAsync(new TabStripCreated(x, "tabIndex", this.Html));
                                }))
                            </fieldset>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="row">
                            <fieldset class="fieldset-no-border" style="margin-bottom: 5px">
                                <legend style="color: #23527c; border-bottom: none; text-transform: uppercase; padding-left: 40px">TIẾN ĐỘ</legend>
                                <div class="row" style="margin-bottom: 5px">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.CreatedBy, true, new { @class = "control-label col-md-5", @style = "padding-left: 80px" })
                                        <div class="col-md-6">
                                            @Html.DropDownListFor(m => m.CreatedBy, Model.AvailableUsers, "Người tạo", new { @class = "form-control", @style = "width: 100%", disabled = "disabled" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom: 5px">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.StartDate, true, new { @class = "control-label col-md-5", @style = "padding-left: 80px" },true)
                                        <div class="col-md-6">
                                            @Html.EditorFor(m => m.StartDate, new { pickTime = true, htmlAttributes = new { style = "width: 100%", @disabled = "disabled", @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom: 5px">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.FinishDate, true, new { @class = "control-label col-md-5", @style = "padding-left: 80px" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(m => m.FinishDate, new { pickTime = true, htmlAttributes = new { style = "width: 100%", @disabled = "disabled", @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom: 5px">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.SlaStartTime, true, new { @class = "control-label col-md-5", @style = "padding-left: 80px" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(m => m.SlaStartTime, new { pickTime = true, htmlAttributes = new { style = "width: 100%", @disabled = "disabled", @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom: 5px">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.CreatedDate, true, new { @class = "control-label col-md-5", @style = "padding-left: 80px" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(m => m.CreatedDate, new { pickTime = true, htmlAttributes = new { style = "width: 100%", @disabled = "disabled", @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                        <div class="row" style="margin-top: 20px">
                            <fieldset class="fieldset-no-border">
                                <legend style="color: #23527c; border-bottom: none; text-transform: uppercase; padding-left: 40px">ĐÍNH KÈM</legend>
                                <div class="col-md-10" style="margin-top: 20px">
                                    <ul class="list-group-flush list-files-data" style="margin-left: 40px">
                                        @{
                                            if (Model.Files?.ToList()?.Count > 0)
                                            {
                                                foreach (var f in Model.Files)
                                                {
                                                    @Html.Raw($"<li class='list-group-item-light'><a href='javascript:void(0)' style='text-decoration:none' onclick='downloadFile(this)' data-url='{f.Path}' data-file-name='{f.FileName}'>{f.FileName}</a> - {Math.Round(f.Size / 1024, 2)} KB</li>");
                                                }
                                            }
                                        }
                                    </ul>
                                </div>
                            </fieldset>
                        </div>
                        <div class="row" style="margin-top: 20px">
                            <div class="col-md-11">
                                <fieldset class="fieldset-no-border">
                                    <legend style="color: #23527c; border-bottom: none; text-transform: uppercase; padding-left: 40px">TRAO ĐỔI</legend>
                                    <div class="col-md-10" style="margin-left: 70px; width: 91%">
                                        <ul class="list-group-flush" id="comment-list" style="padding: 10px">
                                            @{
                                                if (Model.Comments?.Count > 0)
                                                {
                                                    foreach (var cmt in Model.Comments)
                                                    {
                                                        @Html.Raw($"<li class='list-group-item-light'><a href='javascript:void(0)' style='text-decoration: none'>{cmt.UserName}</a> add a comment - {cmt.StrCreatedDate} <br/> {cmt.Content}</li>");
                                                    }
                                                }
                                            }
                                        </ul>
                                        <textarea id="comment-content" style="width: 100%"></textarea>
                                        <div class="comment-action" style="position: relative; margin-top: 5px">
                                            <a href="javascript:void(0)" id="btnComment" class="btn btn-success btn-sm" style="float: right">Comment</a>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    master.init = function() {
        master.$el = $(master.el);
        form.init();
        btnBackList.init();
        btnEdit.init();
        btnAssign.init();
        tab.init();
        file.init();
        btnComment.init();
        btnAddCSReceive.init();
        btnAddTechnologyReceive.init();
        btnAddTechnologySucess.init();
        btnAddCsReport.init();
    };

    tab.init = function() {
        tab.change();
    };

    tab.change = function() {
        tab.$el = $(tab.el);
        tab.$el.on('shown.bs.tab',
            function() {
                app.plugins.uniform.handles();
                app.grid.handlers.resize();
            });
    };

    file.init = function () {
        file.change();
    };

    file.change = function () {
        file.$el = $(file.el);
        if (file.$el[0])
            file.data = file.$el[0].files;
        file.$el.change(function () {
            if (file.data) {
                $('.list-files-data').empty();
                $.each(file.data,
                    function (i, f) {
                        $('.list-files-data').append(`<li class="list-group-item-light">${f.name} - ${Math.round(f.size / 1024)} KB</li>`)
                    });
            }
        });
    };

    form.init = function() {
        form.$el = $(form.el);

        form.$el.initFormValidation();
    };

    btnBackList.init = function() {
        btnBackList.$el = $(btnBackList.el);

        btnBackList.$el.click(function(e) {
            $.pjax({ url: master.urlBackList });
        });
    };

    btnComment.init = function () {
        btnComment.$el = $(btnComment.el);

        btnComment.$el.click(function (e) {
            if ($('#comment-content').val() && $('#comment-content').val().trim().length > 0){
                $.ajax({
                    type: "POST",
                    data: { userId: '@Model.UserLogin', content: $('#comment-content').val(), ftthId: '@Model.Id' },
                    dataType: "json",
                    url: '@Url.Action("GetUserComment")',
                    success: function (res) {
                        if (res.success) {
                            $('#comment-list').prepend(`<li class="list-group-item-light"><a href="javascript:void(0)" style="text-decoration: none">${res.data.UserName}</a> add a comment - ${res.data.StrCreatedDate} <br/> ${res.data.Content}</li>`)
                            $('#comment-content').val("");
                        }
                    }
                });
            }
        });
    };

    btnEdit.init = function() {
        btnEdit.$el = $(btnEdit.el);

        btnEdit.$el.click(function (e) {
            $.pjax({ url: master.urlEdit + '/' + '@Model.Id' });
        });
    };

    //add CsReceive
    btnAddCSReceive.init = function() {
         btnAddCSReceive.$el = $(btnAddCSReceive.el);
         btnAddCSReceive.$el.click(function (e) {
                app.window.form.open({
                    url: '@Url.Action("AddCSReceive")' + '?id=@Model.Id', options: {width: '500px'}, callback: function (){
                        var cs = window.frmAddCSReceive.$el.serializeObject();
                        var ftthModel = {};
                        ftthModel.Id = '@Model.Id';
                        ftthModel.StartDate = cs.StartDate;
                        ftthModel.CreatedBy = cs.CreatedBy;
                        ftthModel.Code = cs.Code;
                        ftthModel.Subject = cs.Subject;
                        ftthModel.FinishDate= cs.FinishDate;
                        ftthModel.SlaStartTime = cs.SlaStartTime;
                        ftthModel.ComplaintContent = cs.ComplaintContent;
                        ftthModel.CID = cs.CID;
                        ftthModel.CreatedDate = cs.CreatedDate;
                        ftthModel.ProjectCode = cs.ProjectCode;

                        $.ajax({
                            url: '@Url.Action("AddCSReceive")',
                            data: { ftth: ftthModel },
                            dataType: 'json',
                            type: 'POST',
                            success: function (res) {
                                if (res.success) {
                                    window.location.reload(true);
                                }
                            }
                        });
                    
                        //Close form add item
                        window.frmAddCSReceive.winForm.close();
                    }
                });
         });
    };

    //add TechnologyReceive
    btnAddTechnologyReceive.init = function() {
         btnAddTechnologyReceive.$el = $(btnAddTechnologyReceive.el);
         btnAddTechnologyReceive.$el.click(function (e) {
                app.window.form.open({
                    url: '@Url.Action("AddTechnologyReceive")' + '?id=@Model.Id', options: {width: '500px'}, callback: function (){
                        var cs = window.frmAddTechnologyReceive.$el.serializeObject();
                        var ftthModel = {};
                        ftthModel.Id = '@Model.Id';
                        ftthModel.StartDate = cs.StartDate;
                        ftthModel.CreatedBy = cs.CreatedBy;
                        ftthModel.Code = cs.Code;
                        ftthModel.Subject = cs.Subject;
                        ftthModel.FinishDate= cs.FinishDate;
                        ftthModel.SlaStartTime = cs.SlaStartTime;
                        ftthModel.ComplaintContent = cs.ComplaintContent;
                        ftthModel.CID = cs.CID;
                        ftthModel.CreatedDate = cs.CreatedDate;
                        ftthModel.ProjectCode = cs.ProjectCode;

                        $.ajax({
                            url: '@Url.Action("AddTechnologyReceive")',
                            data: { ftth: ftthModel },
                            dataType: 'json',
                            type: 'POST',
                            success: function (res) {
                                if (res.success) {
                                    window.location.reload(true);
                                }
                            }
                        });
                    
                        //Close form add item
                        window.frmAddTechnologyReceive.winForm.close();
                    }
                });
         });
    };
    
    //add TechnologySucess
    btnAddTechnologySucess.init = function() {
         btnAddTechnologySucess.$el = $(btnAddTechnologySucess.el);
         btnAddTechnologySucess.$el.click(function (e) {
                app.window.form.open({
                    url: '@Url.Action("AddTechnologySucess")' + '?id=@Model.Id', options: {width: '500px'}, callback: function (){
                        var te = window.frmAddTechnologySucess.$el.serializeObject();
                        var technologyModel = {};
                        technologyModel.FtthId = '@Model.Id';
                        technologyModel.PhenomenaId = te.PhenomenaId;
                        technologyModel.ReasonId = te.ReasonId;
                        technologyModel.DetailReason = te.DetailReason;
                        technologyModel.StatusId = te.StatusId;
                        technologyModel.Treatment= te.Treatment;

                        $.ajax({
                            url: '@Url.Action("AddTechnologySucess")',
                            data: { technology: technologyModel },
                            dataType: 'json',
                            type: 'POST',
                            success: function (res) {
                                if (res.success) {
                                    window.location.reload(true);
                                }
                            }
                        });
                    
                        //Close form add item
                        window.frmAddTechnologySucess.winForm.close();
                    }
                });
         });
    };

    //add CsReport
    btnAddCsReport.init = function() {
         btnAddCsReport.$el = $(btnAddCsReport.el);
         btnAddCsReport.$el.click(function (e) {
                app.window.form.open({
                    url: '@Url.Action("AddCsReport")' + '?id=@Model.Id', options: {width: '500px'}, callback: function (){
                        var csr = window.frmAddCsReport.$el.serializeObject();
                        var csReportModel = {};
                        csReportModel.FtthId = '@Model.Id';
                        csReportModel.RatingId = csr.RatingId;
                        csReportModel.Note = csr.Note

                        $.ajax({
                            url: '@Url.Action("AddCsReport")',
                            data: { csReport: csReportModel },
                            dataType: 'json',
                            type: 'POST',
                            success: function (res) {
                                if (res.success) {
                                    window.location.reload(true);
                                }
                            }
                        });
                    
                        //Close form add item
                        window.frmAddCsReport.winForm.close();
                    }
                });
         });
    };

    function getToken() {
        var token = '@Html.AntiForgeryToken()';
        token = $(token).val();
        return token;
    }

    $('a[data-action="exportrecall"]').click(function (e) {
            window.location = '@Url.Action("ExportDone", "ParitcularFtth")/@Model.Id';
    });

    $(function () {
        master.init();
    });
</script>


