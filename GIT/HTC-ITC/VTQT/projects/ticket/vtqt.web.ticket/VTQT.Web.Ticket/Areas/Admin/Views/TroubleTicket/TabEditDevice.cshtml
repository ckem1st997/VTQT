@model DeviceTicketSearchModel

@{
    Layout = null;
}

<script>
    var device = {
        grd: {
            el: '#device_grd',
            $el: {},
            init: function() { },
            api: {},
            data: function() { }
        },
        btnAdd: {
            el: '#btnAddDevice',
            $el: {},
            init: function() { }
        },
        btnRemove: {
            el: '#btnRemoveDevice',
            $el: {},
            init: function() { }
        },
        btnEditDevice: {
            el: '#btnEditDevice',
            $el: {},
            init: function() { }
        },
        init: function() { }
    }

    var deviceGrd = device.grd;
    var btnAddDevice = device.btnAdd;
    var btnRemoveDevice = device.btnRemove;
    var btnEditDevice = device.btnEditDevice;

    deviceGrd.data = function() {
        var searchModel = {
            TicketId: '@Model.TicketId'
        };

        return searchModel;
    };
</script>

<div class="row" style="overflow: hidden">
    <script id="toolbar-device" type="text/x-kendo-template">
        <div class="toolbar" style="line-height: 28px; font-size: 12px; font-weight: 600; font-family: TahomaCustom, Arial, sans-serif !important; color: \\#23527c">
            <span style="padding-left: 20px">Danh sách thiết bị</span>
        </div>
        <div class="toolbar" style="display: inline-block; margin-right: 0; margin-left: auto">
            <a id="btnAddDevice" class="btn btn-default btn-sm" href="javascript:void(0)" style="min-width: 80px"><i class="flaticon2-plus green"></i> Thêm thiết bị</a>
            <a id="btnEditDevice" href="javascript:void(0)" class="btn btn-default btn-sm"><i class="flaticon2-pen yellow"></i> Chỉnh sửa</a>
            <a id="btnRemoveDevice" class="btn btn-default btn-sm" href="javascript:void(0)" style="min-width: 80px"><i class="flaticon-delete red"></i> Xóa (Đã chọn)</a>
        </div>
    </script>
    @(Html.Kendo().Grid<DeviceTicketModel>()
    .Name("device_grd")
    .HtmlAttributes(new {style = "border: 1px solid lightgray" })
    .Columns(columns =>
    {
    columns.Select().Locked().Width(30);
    columns.Bound(x => x.DeviceName).Locked().Width(450);
    columns.ForeignKey(x => x.CategoryId, (System.Collections.IEnumerable)ViewData["categories"] ?? new List<SelectListItem>(), "Value", "Text").Width(150);
    columns.ForeignKey(x => x.PhenomenaId, (System.Collections.IEnumerable)ViewData["phenomenas"] ?? new List<SelectListItem>(), "Value", "Text").Width(150);
    columns.Bound(x => x.StartDateToString).Width(150);
    columns.Bound(x => x.FinishDateToString).Width(150);
    })
    .ToolBar(toolbar => { toolbar.ClientTemplateId("toolbar-device"); })
    .DataSource(dataSource => dataSource
    .Ajax()
    .PageSize(int.MaxValue)
    .ServerOperation(false)
    .Read(read => read.Action("GetDeviceTicket", "TroubleTicket").Data("deviceGrd.data"))
    )
    .NoRecords()
    .Scrollable(scr => scr.Enabled(true))
    .Pageable(pageable => pageable.Enabled(false))
    .Selectable(selectable => selectable.Type(GridSelectionType.Row).Mode(GridSelectionMode.Multiple))
    .Navigatable())
</div>

<script>
    device.init = function() {
        deviceGrd.init();
        btnAddDevice.init();
        btnRemoveDevice.init();
        btnEditDevice.init();
    };

    deviceGrd.init = function() {
        deviceGrd.$el = $(deviceGrd.el);
        deviceGrd.api = deviceGrd.$el.data('kendoGrid');
    };

    btnAddDevice.init = function() {
        btnAddDevice.$el = $(btnAddDevice.el);
        btnAddDevice.$el.click(function(e) {
            var date = new Date();
            var day = date.getDate();       // yields date
            var month = date.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
            var year = date.getFullYear();  // yields year
            var hour = date.getHours();     // yields hours
            var minute = date.getMinutes(); // yields minutes
            var second = date.getSeconds(); // yields seconds

            // After this construct a string with the above results as below
            var time = day + "-" + month + "-" + year + "-" + hour + '-' + minute + '-' + second;
            app.window.form.open({
                url: '@Url.Action("AddDevice")?date=' + time, options: { width: '500px' }, callback: function() {
                    var device = window.frmAddDevice.$el.serializeObject();
                    var deviceModel = {};
                    deviceModel.DeviceId = device.DeviceId;
                    deviceModel.CableId = device.CableId;
                    deviceModel.TicketId = '@Model.TicketId';
                    deviceModel.CategoryId = device.CategoryId;
                    deviceModel.StartDate = device.StartDate;
                    deviceModel.FinishDate = device.FinishDate;
                    deviceModel.PhenomenaId = device.PhenomenaId;
                    deviceModel.DeviceName = device.DeviceName;

                    $.ajax({
                        url: '@Url.Action("AddDevice")',
                        data: { deviceTicket: deviceModel },
                        dataType: 'json',
                        type: 'POST',
                        success: function(res) {
                            if (res.success) {
                                deviceGrd.api.reload();
                            }
                        }
                    });
                    //Close form add item
                    window.frmAddDevice.winForm.close();
                }
            });

        });
    };

    btnEditDevice.init = function() {
        btnEditDevice.$el = $(btnEditDevice.el);
        btnEditDevice.$el.click(function(e) {

            var id = deviceGrd.api.selectedIds()[0];
            if (id) {
                app.window.form.open({
                    url: '@Url.Action("EditDevice")/' + '?id=' + id, options: { width: '500px' }, callback: function() {
                        var device = window.frmEditDevice.$el.serializeObject();
                        var deviceTicketModel = {};
                        deviceTicketModel.Id = id;
                        deviceTicketModel.DeviceId = device.DeviceId;
                        deviceTicketModel.CableId = device.CableId;
                        deviceTicketModel.TicketId = '@Model.TicketId';
                        deviceTicketModel.CategoryId = device.CategoryId;
                        deviceTicketModel.StartDate = device.StartDate;
                        deviceTicketModel.FinishDate = device.FinishDate;
                        deviceTicketModel.PhenomenaId = device.PhenomenaId;
                        deviceTicketModel.DeviceName = device.DeviceName;

                        $.ajax({
                            url: '@Url.Action("EditDevice")',
                            data: { editDevice: deviceTicketModel },
                            dataType: 'json',
                            type: 'POST',
                            success: function(res) {
                                if (res.success) {
                                    deviceGrd.api.reload();
                                }
                            }
                        });
                        //Close form add item
                        window.frmEditDevice.winForm.close();
                    }
                });
            } else {
                notify({ text: '@T("Notifies.NoItemsSelected").JavaScriptStringEncode()', type: 'info' });
            }

        });
    };

    btnRemoveDevice.init = function() {
        btnRemoveDevice.$el = $(btnRemoveDevice.el);
        btnRemoveDevice.$el.click(function(e) {
            var ids = deviceGrd.api.selectedIds();
            if (ids.length > 0) {
                app.window.deletes.open({ url: '@Url.Action("DeleteDevice")', ids: ids, options: { width: '450px' }, callback: function() { deviceGrd.api.reload(); } });
            } else {
                notify({ text: '@T("Notifies.NoItemsSelected").JavaScriptStringEncode()', type: 'info' });
            }
        });
    };

    deviceGrd.startdate = function(startdate) {
        var date = new Date(startdate);
        var day = date.getDate();       // yields date
        var month = date.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
        var year = date.getFullYear();  // yields year
        var hour = date.getHours();     // yields hours
        var minute = date.getMinutes(); // yields minutes
        var second = date.getSeconds(); // yields seconds

        // After this construct a string with the above results as below
        var time = day + "/" + month + "/" + year + " " + hour + ':' + minute + ':' + second;
        date.toString()
        return time;
    };

    $(function() {
        device.init();
    });
</script>

