@model FtthModel

<script>
    var master = {
        urlCreate: '@Url.Action("Edit")',
        urlBackList: '@Url.Action("Index")',
        el: '.page-data',
        $el: {},
        tab: {
            el: '#tabIndex',
            $el: {},
            init: function () { },
            change: function () { }
        },
        file: {
            el: '#FilesUpload',
            $el: {},
            init: function () { },
            change: function () { },
            btnUpload: {
                el: '#btnUploadFiles',
                $el: {},
                init: function () { }
            },
            data: []
        },
        form: {
            el: '#form-data',
            $el: {},
            init: function () { }
        },
        btnCreate: {
            el: '#btnCreate',
            $el: {},
            init: function () { }
        },
        btnBackList: {
            el: '#btnBackList',
            $el: {},
            init: function () { }
        },
        btnComment: {
            el: '#btnComment',
            $el: {},
            init: function() { }
        },
        init: function () { }
    };
    var form = master.form;
    var btnBackList = master.btnBackList;
    var btnCreate = master.btnCreate;
    var btnComment = master.btnComment;
    var tab = master.tab;
    var file = master.file;
    var btnUpload = file.btnUpload;

</script>

<style>
    div.k-grid-content.k-auto-scrollable {
        height: auto !important;
    }
</style>

<!-- #region Page Header -->
<div class="page-bar">
    <ul class="page-breadcrumb"></ul>
    <div class="page-toolbar">
        <div class="pull-right" style="display:flex">
            <div class="btn-toolbar" role="toolbar" aria-label="Right group">
                <a href="javascript:void(0)" class="btn btn-primary btn-sm" id="btnCreate"><i class="fa fa-check" aria-hidden="true"></i>Lưu</a>
                <a href="javascript:void(0)" class="btn btn-danger btn-sm" id="btnBackList"><i class="fa fa-times" aria-hidden="true"></i>Hủy</a>
            </div>
        </div>
    </div>
</div>
<!-- #endregion -->

<div class="page-data" style="padding-top: 10px; overflow-y: auto">
    <div class="form fixed-layout-form">
        <form id="form-data" class="form-horizontal" data-form-type="ajax">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-8">
                        <div class="row" style="margin-bottom: 30px">
                            <fieldset class="fieldset-no-border">
                                <legend style="color: #23527c; border-bottom: none; text-transform: uppercase">THÔNG TIN CHUNG</legend>
                                @Html.HiddenFor(m => m.ProjectId)
                                @Html.HiddenFor(m => m.Id)

                                <div class="row" style="margin-bottom: 5px">
                                    <div class="col-md-6" style="padding: 0">
                                        <div class="form-group form-group-sm">
                                            @Html.XBaseLabelFor(m => m.Code, true, new { @class = "control-label col-md-5", @style = "padding-left: 40px" }, true)
                                            <div class="col-md-5">
                                                @Html.TextBoxFor(m => m.Code, new { @class = "form-control", @style = "width: 100%", @readonly = true })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group form-group-sm" style="margin-bottom: 10px">
                                    @Html.XBaseLabelFor(m => m.Subject, true, new { @class = "control-label col-md-2", @style = "padding-left: 40px; width: 20.8%" },true)
                                    <div class="col-md-9" style="width: 71%">
                                        @Html.TextAreaFor(m => m.Subject, new { @class = "form-control", @style = "width: 100%", @rows = "1" })
                                    </div>
                                </div>

                                <div class="form-group form-group-sm" style="margin-bottom: 10px">
                                    @Html.XBaseLabelFor(m => m.CID, true, new { @class = "control-label col-md-2", @style = "padding-left: 40px; width: 20.8%" })
                                    <div class="col-md-9" style="width: 71%">
                                        @Html.TextAreaFor(m => m.CID, new { @class = "form-control", @style = "width: 100%", @rows = "1" })
                                    </div>
                                </div>

                                <div class="form-group form-group-sm" style="margin-bottom: 10px">
                                    @Html.XBaseLabelFor(m => m.ComplaintContent, true, new { @class = "control-label col-md-2", @style = "padding-left: 40px; width: 20.8%" })
                                    <div class="col-md-9" style="width: 71%">
                                        @Html.TextAreaFor(m => m.ComplaintContent, new { @class = "form-control", @style = "width: 100%", @rows = "1" })
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                        <div class="row" style="width: 91.5%; overflow: hidden">
                            <fieldset class="fieldset-no-border" style="margin-bottom: 5px">
                                <legend style="color: #23527c; border-bottom: none; text-transform: uppercase; padding-left: 20px; padding-bottom: 15px">THÔNG TIN CHI TIẾT</legend>
                                @(Html.XBase().TabStrip()
                                    .Name("tabIndex")
                                    .HtmlAttributes(new { style = "padding-left: 30px" })
                                    .Items(async x =>
                                    {
                                        x.Add().Text("NOC")
                                           .Name("tbNoc")
                                           .LinkHtmlAttributes(new { data_tab_name = "Noc" })
                                           .Content(Html.PartialAsync("TabNoc", Model.WideFtthModel).Result.RenderHtmlContent()).Selected(true);

                                        await EngineContext.Current.Resolve<IEventPublisher>().PublishAsync(new TabStripCreated(x, "tabIndex", this.Html));
                                    }))
                            </fieldset>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="row">
                            <fieldset class="fieldset-no-border" style="margin-bottom: 5px">
                                <legend style="color: #23527c; border-bottom: none; text-transform: uppercase; padding-left: 40px">TIẾN ĐỘ</legend>
                                <div class="row" style="margin-bottom: 5px">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.CreatedBy, true, new { @class = "control-label col-md-5", @style = "padding-left: 80px" })
                                        <div class="col-md-6">
                                            @Html.DropDownListFor(m => m.CreatedBy, Model.AvailableUsers, "Người tạo", new { @class = "form-control", @style = "width: 100%" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom: 5px">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.StartDate, true, new { @class = "control-label col-md-5", @style = "padding-left: 80px" },true)
                                        <div class="col-md-6">
                                            @Html.EditorFor(m => m.StartDate, new { pickTime = true, htmlAttributes = new { style = "width: 100%", @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom: 5px">
                                    <div class="form-group form-group-sm" style="margin-bottom: 5px">
                                        @Html.XBaseLabelFor(m => m.FinishDate, true, new { @class = "control-label col-md-5", @style = "padding-left: 80px" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(m => m.FinishDate, new { pickTime = true, htmlAttributes = new { style = "width: 100%", @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom: 5px">
                                    <div class="form-group form-group-sm" style="margin-bottom: 5px">
                                        @Html.XBaseLabelFor(m => m.SlaStartTime, true, new { @class = "control-label col-md-5", @style = "padding-left: 80px" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(m => m.SlaStartTime, new { pickTime = true, htmlAttributes = new { style = "width: 100%", @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom: 5px">
                                    <div class="form-group form-group-sm" style="margin-bottom: 5px">
                                        @Html.XBaseLabelFor(m => m.CreatedDate, true, new { @class = "control-label col-md-5", @style = "padding-left: 80px" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(m => m.CreatedDate, new { pickTime = true, htmlAttributes = new { style = "width: 100%", @disabled = "disabled", @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                        <div class="row" style="margin-top: 20px">
                            <fieldset class="fieldset-no-border">
                                <legend style="color: #23527c; border-bottom: none; text-transform: uppercase; padding-left: 40px">ĐÍNH KÈM</legend>
                                <div class="col-md-10" style="margin-top: 20px">
                                    <ul class="list-group-flush list-files-data" style="margin-left: 40px">
                                        @{
                                            if (Model.Files?.ToList()?.Count > 0)
                                            {
                                                foreach (var f in Model.Files)
                                                {
                                                    @Html.Raw($"<li class='list-group-item-light'><a href='javascript:void(0)' style='text-decoration:none' onclick='downloadFile(this)' data-url='{f.Path}' data-file-name='{f.FileName}'>{f.FileName}</a> - {Math.Round(f.Size / 1024, 2)} KB</li>");
                                                }
                                            }
                                        }
                                    </ul>
                                </div>
                                <div class="col-md-10" style="margin-top: 5px">
                                    <div class="upload-files-wrapper" style="display: inline-block; position: relative; padding: 15px; border: 1px dashed gray; margin-left: 70px; width: 100%">
                                        <div class="icon-files-wrapper" style="display: inline-block">
                                            <i class="fa fa-cloud-upload" aria-hidden="true" style="padding: 5px; font-size: 20px"></i>
                                            <span>Drop files to attach, or </span>
                                            <a href="javascript:void(0)" style="text-decoration: none">browser.</a>
                                        </div>
                                        <input type="file" id="FilesUpload" asp-for="FilesUpload" multiple class="form-control" style="border: 1px dashed gray; position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0" accept="image/jpeg,image/jpg,image/png,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
                                    </div>
                                </div>
                                <div class="col-md-10" style="margin-left: 70px">
                                    <a class="btn btn-success btn-sm" href="javascript:void(0)" id="btnUploadFiles" style="float: right; margin-top: 5px">Upload</a>
                                </div>
                            </fieldset>
                        </div>
                        <div class="row" style="margin-top: 20px">
                            <div class="col-md-11">
                                <fieldset class="fieldset-no-border">
                                    <legend style="color: #23527c; border-bottom: none; text-transform: uppercase; padding-left: 40px">TRAO ĐỔI</legend>
                                    <div class="col-md-10" style="margin-left: 70px; width: 91%">
                                        <ul class="list-group-flush" id="comment-list" style="padding: 10px">
                                            @{
                                                if (Model.Comments?.Count > 0)
                                                {
                                                    foreach (var cmt in Model.Comments)
                                                    {
                                                        @Html.Raw($"<li class='list-group-item-light'><a href='javascript:void(0)' style='text-decoration: none'>{cmt.UserName}</a> add a comment - {cmt.StrCreatedDate} <br/> {cmt.Content}</li>");
                                                    }
                                                }
                                            }
                                        </ul>
                                        <textarea id="comment-content" style="width: 100%"></textarea>
                                        <div class="comment-action" style="position: relative">
                                            <a href="javascript:void(0)" id="btnComment" class="btn btn-success btn-sm" style="float: right">Comment</a>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
         master.init = function () {
            master.$el = $(master.el);
            form.init();
            btnBackList.init();
            btnCreate.init();
            btnComment.init();
            tab.init();
            file.init();
            btnUpload.init();
        };

        tab.init = function () {
            tab.change();
        };

        tab.change = function () {
            tab.$el = $(tab.el);
            tab.$el.on('shown.bs.tab', function () {
                app.plugins.uniform.handles();
                app.grid.handlers.resize();
            });
        };

        file.init = function () {
            file.$el = $(file.el);
            file.change();
        };

        file.change = function () {
            file.$el.change(function () {
                if (file.$el[0])
                    file.data = file.$el[0].files;

                if (file.data) {
                    $.each(file.data, function (i, f) {
                        $('.list-files-data').append(`<li class="list-group-item-light">${f.name} - ${(f.size / 1024).toFixed(2)} KB</li>`);
                    });
                }
            });
        };

        form.init = function () {
            form.$el = $(form.el);

            form.$el.initFormValidation();
        };

        btnBackList.init = function () {
            btnBackList.$el = $(btnBackList.el);

            btnBackList.$el.click(function (e) {
                $.pjax({ url: master.urlBackList });
            });
        };

        btnUpload.init = function (){
                btnUpload.$el = $(btnUpload.el);

                btnUpload.$el.click(function(e) {
                    if (file.data.length > 0){
                        var files = new FormData();
                        var countFile = 0;
                        $.each(file.data, function(i, f){
                            files.append("file", f);
                            countFile++;
                        });
                        files.append("ftthId", '@Model.Id');
                        files.append("ftthCode", '@Model.Code');

                        $.ajax({
                            type: "POST",
                            data: files,
                            dataType: "json",
                            contentType: false,
                            processData: false,
                            url: '@Url.Action("UploadFiles")',
                            success: function (res) {
                                if (res.success && res.data){
                                    while(countFile > 0){
                                        $('.list-files-data li:last').remove();
                                        countFile--;
                                    }
                                    $.each(res.data, function (i, f) {
                                        $('.list-files-data').append(`<li class="list-group-item-light"><a href='javascript:void(0)' style='text-decoration:none' onclick='downloadFile(this)' data-url='${f.Path}' data-file-name='${f.FileName}'>${f.FileName}</a> - ${(f.Size / 1024).toFixed(2)} KB</li>`);
                                    });
                                }
                            }
                        });
                    }
                });
        };

        function downloadFile(el) {
            var params = { url: $(el).attr("data-url"), fileName: $(el).attr("data-file-name") };
            window.location = '@Url.Action("DownloadFile")' + '?' + $.param(params);
        };

        btnComment.init = function () {
                btnComment.$el = $(btnComment.el);

                btnComment.$el.click(function (e) {
                    if ($('#comment-content').val() && $('#comment-content').val().trim().length > 0){
                        $.ajax({
                            type: "POST",
                            data: { userId: '@Model.UserLogin', content: $('#comment-content').val(), wideFtthId: '@Model.Id' },
                            dataType: "json",
                            url: '@Url.Action("GetUserComment")',
                            success: function (res) {
                                if (res.success) {
                                    $('#comment-list').prepend(`<li class="list-group-item-light"><a href="javascript:void(0)" style="text-decoration: none">${res.data.UserName}</a> add a comment - ${res.data.StrCreatedDate} <br/> ${res.data.Content}</li>`)
                                    $('#comment-content').val("");
                                }
                            }
                        });
                    }
                });
        };

        btnCreate.init = function () {
            btnCreate.$el = $(btnCreate.el);

            btnCreate.$el.click(function (e) {
                if (form.$el.valid()) {
                    var objectsDataForm = form.$el.serializeObject();
                    var wideFtthModel = {};

                    wideFtthModel.FtthId = $('#FtthId').val();
                    wideFtthModel.ReasonId = $('#ReasonId').val();
                    wideFtthModel.PhenomenaId = $('#PhenomenaId').val();
                    wideFtthModel.DetailReason = $('#DetailReason').val();
                    wideFtthModel.StatusId = $('#StatusId').val();
                    wideFtthModel.Supervisor = $('#Supervisor').val();
                    wideFtthModel.Treatment = $('#Treatment').val();
                    wideFtthModel.Id = $('#WideFtthId').val();

                    $.ajax({
                        type: "POST",
                        data: {
                            model: objectsDataForm,
                            wideFtthModel: wideFtthModel,
                            __RequestVerificationToken: getToken()
                        },
                        dataType: "json",
                        url: master.urlCreate,
                        beforeSend: function (jqXhr, settings) {
                            app.ui.loader(form.$el, true);
                        },
                        success: function (res) {
                            if (res.success) {
                                $.pjax({ url: master.urlBackList });
                            }
                            app.ui.loader(form.$el, false);
                        }
                    });
                }
            });
        };

        function getToken() {
            var token = '@Html.AntiForgeryToken()';
            token = $(token).val();
            return token;
        }

        $(function () {
            master.init();
        });
</script>


