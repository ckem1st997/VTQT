<div class="title-home-set" style=" background-color: #00875a !important;">
    @*<div class="dot me-3 bg-indigo" style=" background-color: #e35a26 !important;"></div>*@

    <p class="title-p">Theo phân loại</p>
    @*<div class="icon-loading">
            <i class="fa fa-spinner" aria-hidden="true"></i>
        </div>*@
</div>
<!-- #endregion -->
<div class="search-home-set" style="border-top:0px">
    <div>@T("common.fields.assetcategory"):</div>
    <div style="width:20% !important">
        <select name="ItemIdColumn"
                id="ItemIdColumn"
                class="autowidth"
                style="width: 100%"
                data-placeholder='@T("Common.Select2.Select")'
                data-select-url="@Url.Action("GetAssetCategory")">
        </select>
    </div>



    <div style="margin-left:5%;margin-right:5%">@T("asset.assettransference.fields.department"):</div>
    <select name="ItemGetOrganizationIdTwo"
            id="ItemGetOrganizationIdTwo"
            class="autowidth"
            style="width: 47%"
            data-placeholder='@T("Common.Select2.Select")'
            data-select-url="@Url.Action("GetOrganization")">
    </select>
</div>
<div class="result-home-set">
        <div class="" id="div_stats_review_period">        
                <div class="portlet-body" id="stats_review_period">

                </div>

        </div>
    @*<input id="em11" type="range" min="0.3" max="2" step="0.01" value="1" />*@
</div>

<style>
    .dot {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        flex-grow: 0;
        flex-shrink: 0;
    }

    .me-3 {
        margin-right: 1rem !important;
    }
</style>

<script>
    $(document).ready(function () {
        Column(20);
        $("#ItemIdColumn").select2().select2('val',20);
        $("#ItemIdColumn").on("select2:select", function (e) {
            var id = $(this).val();
            var ItemGetOrganizationId = $("#ItemGetOrganizationIdTwo").val();
            Column(id, ItemGetOrganizationId);
            return false;
        });

        $("#ItemGetOrganizationIdTwo").on("select2:select", function (e) {
            var id = $("#ItemIdColumn").val();
            var ItemGetOrganizationId = $(this).val();
            Column(id, ItemGetOrganizationId);
            return false;
        });
    });


    function Column(id, ItemGetOrganizationId){
     var $divContainer = $('#div_stats_review_period');
            $.ajax({
                type: 'GET',
                data: { Type: id, OrganizationId: ItemGetOrganizationId},
                dataType: 'json',
            url: '@Url.Action("GetColumn")',
                beforeSend: function(jqXhr, settings) {
                    app.ui.loader($divContainer, true);
                },
                success: function(data) {
                    if (data && data.length) {
                        Highcharts.chart('stats_review_period', {
                            chart: {
                                type: 'column',
                                height: 300
                            },
                            colors: ['#acb5c3', '#3598dc', '#1bbc9b', '#ed6b75', '#7cb5ec', '#f7a35c', '#90ed7d'],
                            title: {
                                text: ''
                            },
                            tooltip: {
                                formatter: function () {
                                    var total = this.series.data.map(p => p.y).reduce((a, b) => a + b);
                                    var percentage = (this.y / total) * 100;
                                    var percentageText = !isNaN(percentage) ? _.round(percentage, 1) + '%' : '0.0%';
                                    return '<span style="color:' + this.color + '">' + this.key + '</span></br><b>' + percentageText + '</b> (' + this.y + ')';
                                }
                            },
                            accessibility: {
                                announceNewData: {
                                    enabled: true
                                }
                            },
                            xAxis: {
                                type: 'category'
                            },
                            yAxis: {
                                title: {
                                    text: ''
                                }

                            },
                            legend: {
                                enabled: false
                            },
                            plotOptions: {
                                series: {
                                    borderWidth: 0,
                                    dataLabels: {
                                        enabled: true,
                                        formatter: function () {
                                            var total = this.series.data.map(p => p.y).reduce((a, b) => a + b);
                                            var percentage = (this.y / total) * 100;
                                            var percentageText = !isNaN(percentage) ? _.round(percentage, 1) + '%' : '0.0%';
                                            return '<b>' + percentageText + '</b>' + ' (' + this.y + ')';
                                        }
                                    }
                                }
                            },
                            series: [
                                {
                                    name: "",
                                    colorByPoint: true,
                                    data: data
                                }
                            ]
                        });
                    }
                    app.ui.loader($divContainer, false);
                },
                error: function(jqXhr, textStatus, errorThrown) {
                    app.ui.loader($divContainer, false);
                }
            });
        }
    //document.getElementById('em11').addEventListener('input', e => {
    //    var chart = Highcharts.charts[1];
    //    console.log(chart.container.style)
    //    chart.container.style.fontSize = e.target.value + 'em';

    //    // Update layout based on new font and line sizes
    //    chart.isDirtyLegend = true;
    //    chart.redraw(false);
    //});
</script>








