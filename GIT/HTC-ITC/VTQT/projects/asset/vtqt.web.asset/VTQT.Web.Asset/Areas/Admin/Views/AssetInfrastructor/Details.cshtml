@model AssetInfrastructorModel
<!-- #region Page Header -->
<div class="page-bar">
    <ul class="page-breadcrumb"></ul>
    <div class="page-toolbar">
        <div class="pull-right" style="display:flex">
            <a href="javascript:void(0)" data-action="backlist" id="btnBackList" style="display:flex;align-items:center;font-size:15px;font-weight:bold;margin-right:20px;text-decoration:none">
                <i class="fa fa-arrow-left" aria-hidden="true" style="font-size: 20px; margin-right:10px"></i>
                Quay lại danh sách
            </a>
            <a data-action="edit" href="javascript:void(0)" class="btn yellow btn-sm"><i class="flaticon2-pen"></i> @T("Common.Edit")</a>
        </div>
    </div>
</div>
<!-- #endregion -->

<div class="page-data" style="padding-top: 10px">
    <div class="form fixed-layout-form">
        <form id="form-data" class="form-horizontal" data-form-type="ajax">
            <div class="row full-height">
                <div class="col-md-8">
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <fieldset class="fieldset-no-border">
                            <legend style="color: #23527c; border-bottom: none; text-transform: uppercase">TÀI SẢN</legend>
                            <div class="row" style="margin-bottom: 5px">
                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.WareHouseItemName, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.DropDownListFor(m => m.WareHouseItemCode, Model.AvailableItems, "Vật tư", new { @class = "form-control", @style = "width: 100%", @readonly = true, disabled = "disabled" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.DepreciationDuration, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-2 ml-0 pl-0">
                                            @Html.EditorFor(m => m.DepreciationDuration, new { htmlAttributes = new { style = "width: 100%", @readonly = true } })
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(m => m.SelectedDepreciationUnit, Model.AvailableDurations, "Thời gian", new { @class = "form-control", @style = "width: 100px", @readonly = true, disabled = "disabled" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom: 5px">
                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.Code, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(m => m.Code, new { @class = "form-control", @style = "width: 100%", @readonly = true })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.WarrantyDuration, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-2 ml-0 pl-0">
                                            @Html.EditorFor(m => m.WarrantyDuration, new { htmlAttributes = new { style = "width: 100%", @readonly = true } })
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(m => m.SelectedWarrantyUnit, Model.AvailableDurations, "Thời gian", new { @class = "form-control", @style = "width: 100px", @readonly = true, disabled = "disabled" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom: 5px">
                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.Name, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @style = "width: 100%", @readonly = true })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.CurrentUsageStatus, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.DropDownListFor(m => m.CurrentUsageStatus, Model.AvailableAssetStatus, "Tình trạng hiện thời", new { @class = "form-control", @style = "width: 100%", @readonly = true, disabled = "disabled" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom: 5px">
                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.CategoryId, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.DropDownListFor(m => m.CategoryId, Model.AvailableCategories, "Loại tài sán", new { @class = "form-control", @style = "width: 100%", @readonly = true, disabled = "disabled" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.CurrentValue, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.EditorFor(m => m.CurrentValue, new { htmlAttributes = new { style = "width: 100%", @readonly = true } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom: 5px">
                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.OriginQuantity, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.EditorFor(m => m.OriginQuantity, new { htmlAttributes = new { style = "width: 100%", @readonly = true } })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.VendorName, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(m => m.VendorName, new { @class = "form-control", @style = "width: 100%", @readonly = true })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom: 5px">
                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.UnitId, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.DropDownListFor(m => m.UnitId, Model.AvailableUnits, "Đơn vị tính", new { @class = "form-control", @style = "width: 100%", disabled = "disabled" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.Country, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(m => m.Country, new { @class = "form-control", @style = "width: 100%", @readonly = true })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom: 5px">
                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.OriginUsageStatus, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.DropDownListFor(m => m.OriginUsageStatus, Model.AvailableAssetStatus, "Tình trạng ghi tăng", new { @class = "form-control", @style = "width: 100%", @readonly = true, disabled = "disabled" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.ManufactureYear, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            <input name="ManufactureYear" id="ManufactureYear" style="width: 100%" readonly />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom: 5px">
                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.OriginValue, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.EditorFor(m => m.OriginValue, new { htmlAttributes = new { style = "width: 100%", @readonly = true } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.SoldQuantity, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.EditorFor(m => m.SoldQuantity, new { htmlAttributes = new { style = "width: 100%", @readonly = true } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom: 5px">
                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.RecallQuantity, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.EditorFor(m => m.RecallQuantity, new { htmlAttributes = new { style = "width: 100%", @readonly = true } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.BrokenQuantity, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.EditorFor(m => m.BrokenQuantity, new { htmlAttributes = new { style = "width: 100%", @readonly = true } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom: 10px">
                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.Serial, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            <select class="form-control" name="Serial" id="Serial" multiple="multiple" style="width: 100%" readonly disabled></select>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6" style="padding: 0">
                                    <div class="form-group form-group-sm">
                                        @Html.XBaseLabelFor(m => m.WarrantyCondition, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 40px" })
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(m => m.WarrantyCondition, new { @class = "form-control", @style = "width: 100%", @readonly = true })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group form-group-sm" style="margin-bottom: 5px">
                                @Html.XBaseLabelFor(m => m.Description, true, new { @class = "control-label col-md-2", @style = "text-align: left; padding-left: 40px; width: 20.8%" })
                                <div class="col-md-9" style="width: 71%">
                                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @style = "width: 100%", @readonly = true })
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="row">
                        <fieldset class="fieldset-no-border" style="margin-bottom: 5px">
                            <legend style="color: #23527c; border-bottom: none; text-transform: uppercase; padding-left: 40px">THÔNG TIN CHUNG</legend>
                            <div class="form-group form-group-sm">
                                @Html.XBaseLabelFor(m => m.CreatedBy, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 80px" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(m => m.CreatedBy, Model.AvailableUsers, "Người tạo", new { @class = "form-control", @style = "width: 100%", @readonly = true, disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group form-group-sm" style="margin-bottom: 5px">
                                @Html.XBaseLabelFor(m => m.CreatedDate, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 80px" })
                                <div class="col-md-6">
                                    @Html.EditorFor(m => m.CreatedDate, new { htmlAttributes = new { style = "width: 100%", @readonly = true, disabled = "disabled", @class = "form-control" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm" style="margin-bottom: 5px">
                                @Html.XBaseLabelFor(m => m.AllocationDate, true, new { @class = "control-label col-md-5", @style = "padding-left: 80px" })
                                <div class="col-md-6">
                                    @Html.EditorFor(m => m.AllocationDate, new { htmlAttributes = new { style = "width: 100%", @readonly = true, disabled = "disabled", @class = "form-control" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm" style="margin-bottom: 5px">
                                @Html.XBaseLabelFor(m => m.Reference, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 80px" })
                                <div class="col-md-6" style="display:flex; flex-direction: column">
                                    @if (Model.Reference?.Count > 0)
                                    {
                                        IEnumerable<string> RenderReference()
                                        {
                                            foreach (var r in Model.Reference)
                                            {
                                                var link = "<a href=" + r.Link + ">" + r.Text + "</a>";
                                                yield return link;
                                            }
                                        }
                                        if (RenderReference()?.Count() > 0)
                                        {
                                            foreach (var r in RenderReference())
                                            {
                                                @Html.Raw(r);
                                            }
                                        }
                                    }
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div class="row" style="margin-top: 20px">
                        <fieldset class="fieldset-no-border">
                            <legend style="color: #23527c; border-bottom: none; text-transform: uppercase; padding-left: 40px">ĐƠN VỊ SỬ DỤNG</legend>
                            <div class="row" style="margin-bottom: 5px">
                                <div class="form-group form-group-sm">
                                    @Html.XBaseLabelFor(m => m.StationName, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 80px" })
                                    <div class="col-md-6">
                                        @Html.DropDownListFor(m => m.StationCode, Model.AvailableStations, "Trạm", new { @class = "form-control", @style = "width: 100%", @readonly = true, disabled = "disabled" })
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom: 5px">
                                <div class="form-group form-group-sm">
                                    @Html.XBaseLabelFor(m => m.OrganizationUnitName, true, new { @class = "control-label col-md-5", @style = "text-align: left; padding-left: 80px" })
                                    <div class="col-md-6">
                                        @Html.DropDownListFor(m => m.OrganizationUnitId, Model.AvailableOrganizations, "Trạm", new { @class = "form-control", @style = "width: 100%", @readonly = true, disabled = "disabled" })
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div class="row" style="margin-top: 20px">
                        <div class="col-md-11">
                            <fieldset class="fieldset-no-border">
                                <legend style="color: #23527c; border-bottom: none; text-transform: uppercase; padding-left: 40px">LỊCH SỬ</legend>
                                <ul class="list-group-flush" style="margin-left: 40px; height: 190px; overflow-y: auto">
                                    @{var histories = (List<HistoryModel>)ViewData["histories"];}
                                    @if (histories?.Count > 0)
                                    {
                                        foreach (var h in histories)
                                        {
                                            if (h.Action.ToLower().Contains("cấp phát"))
                                            {
                                                @Html.Raw($"<li class='list-group-item'><span>{h.TimeStamp.ToString("dd/MM/yyyy")}</span>&emsp;<span style='color: forestgreen; font-weight:bold'>{h.Action}</span></li>")
                                            }
                                            else if (h.Action.ToLower().Contains("thu hồi") || h.Action.ToLower().Contains("thanh lý") || h.Action.ToLower().Contains("hỏng"))
                                            {
                                                @Html.Raw($"<li class='list-group-item'><span>{h.TimeStamp.ToString("dd/MM/yyyy")}</span>&emsp;<span style='color: red; font-weight:bold'>{h.Action}</span></li>")
                                            }
                                            else
                                            {
                                                @Html.Raw($"<li class='list-group-item'><span>{h.TimeStamp.ToString("dd/MM/yyyy")}</span>&emsp;<span style='color: cornflowerblue; font-weight:bold'>{h.Action}</span></li>")
                                            }
                                        }
                                    }
                                </ul>
                            </fieldset>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section HeadScripts{
    <script>
        var master = {
            urlBackList: '@Url.Action("Index")',
            el: '.page-data',
            $el: {},
            btnBackList: {
                el: '#btnBackList',
                $el: {},
                init: function () { }
            },
            btnEdit: {
                el: 'a[data-action="edit"]',
                $el: {},
                init: function () { }
            }
        };
        var btnBackList = master.btnBackList;
        var btnEdit = master.btnEdit;
    </script>
}

@section Scripts{
    <script>
        master.init = function () {
            master.$el = $(master.el);
            btnBackList.init();
            btnEdit.init();
        };

        btnBackList.init = function () {
            btnBackList.$el = $(btnBackList.el);

            btnBackList.$el.click(function (e) {
                $.pjax({ url: master.urlBackList });
            });
        };

        btnEdit.init = function () {
            btnEdit.$el = $(btnEdit.el);

            btnEdit.$el.click(function (e) {
                $.pjax({ url: '@Url.Action("Edit")/' + '@Model.Id' });
            });
        };

        $('#ManufactureYear').kendoNumericTextBox({
            format: "#",
            decimals: 0,
            value: '@Model.ManufactureYear'
        });

        $(function () {
            master.init();

            if (!_.isNil('@Model.Serial')) {
                var tags = '@Model.Serial'.split(',');

                if (tags) {
                    $.each(tags, function (i, x) {
                        var option = new Option(x, x, true, true);
                        $('#Serial').append(option).trigger('change');
                    });
                }
            }
        });
    </script>
}
