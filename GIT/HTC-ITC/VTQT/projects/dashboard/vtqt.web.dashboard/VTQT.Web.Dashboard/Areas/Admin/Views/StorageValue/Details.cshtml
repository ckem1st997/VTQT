@model StorageValueModel
@{
    Layout = null;
}
<div class="form fixed-layout-form">
    <form data-form-type="ajax" class="form-horizontal">
        <div class="form-body">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">@T("Dashboard.StorageValue.AppActions.Details")</h4>
            </div>
            <div class="modal-body">
                @Html.AntiForgeryToken()
                <div class="form-group form-group-sm">
                    @Html.XBaseLabelFor(m => m.Name, true, new { @class = "control-label col-md-4" }, true)
                    <div class="col-md-8">
                        @Html.DisplayFor(m => m.Name, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    @Html.XBaseLabelFor(m => m.TypeValueId, true, new { @class = "control-label col-md-4" }, true)
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.TypeValueId, Model.AvailableTypeValue, string.Format(T("Common.SelectObject"), T("Common.TypeValue")), new { @class = "form-control", style = "width: 100%" })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    @Html.XBaseLabelFor(m => m.TimeYear, true, new { @class = "control-label col-md-4" }, false)
                    <div class="col-md-8 iii">
                        @Html.DisplayFor(m => m.TimeYear, new { @class = "form-control w-100" })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    @Html.XBaseLabelFor(m => m.TimeMouth, true, new { @class = "control-label col-md-4" }, false)
                    <div class="col-md-8 iii">
                        @Html.DisplayFor(m => m.TimeMouth, new { @class = "form-control w-100" })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    @Html.XBaseLabelFor(m => m.TimeDay, true, new { @class = "control-label col-md-4" }, false)
                    <div class="col-md-8 iii">
                        @Html.DisplayFor(m => m.TimeDay, new { @class = "form-control w-100" })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    @Html.XBaseLabelFor(m => m.VoucherBy, true, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DisplayFor(m => m.VoucherByName, new { @class = "form-control w-100" })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    @Html.XBaseLabelFor(m => m.ModifiedBy, true, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DisplayFor(m => m.ModifiedByName, new { @class = "form-control w-100" })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    @Html.XBaseLabelFor(m => m.FileName, true, new { @class = "control-label col-md-4" }, true)
                    <div class="col-md-8">
                        @Html.DisplayFor(m => m.FileName, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="modal-footer form-actions">
                <button type="button" class="btn btn-danger btn-sm" data-dismiss="modal">
                    <i class="fa fa-times"></i> @T("Common.Close")
                </button>
            </div>
        </div>
    </form>
</div>
<style>
label {
   cursor: pointer;
   /* Style as you please, it will become the visible UI component. */
}
label.input-t {
   cursor: pointer;
       color: #337ab7;
   /* Style as you please, it will become the visible UI component. */
}
.w-100{
width: 100% !important;
}
.iii span.k-widget.k-numerictextbox
{
width: 100% !important;
}
#upload-photo {
   /*opacity: 0;*/
   /*position: absolute;*/
   /*z-index: 1;*/
}
    .drag-area{
      border: 2px dashed #fff;
      height: 65px;
      border-radius: 5px;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: inherit;
    }
    .drag-area.active{
      border: 2px solid #fff;
    }
    .drag-area .icon{
      font-size: 30px;
      color:#9f9f9f;
    }
    .drag-area header{
      font-size: 30px;
      font-weight: 500;
      color: #1b1e21;
    }
    .drag-area span{
      font-size: 25px;
      font-weight: 500;
      color: #1b1e21;
      margin: 10px 0 15px 0;
    }
    .drag-area button{
      padding: 10px 25px;
      font-size: 20px;
      font-weight: 500;
      border: none;
      outline: none;
      background: #fff;
      color: #5256ad;
      border-radius: 5px;
      cursor: pointer;
    }
    .drag-area img{
      height: 100%;
      width: 100%;
      object-fit: cover;
      border-radius: 5px;
    }
</style>