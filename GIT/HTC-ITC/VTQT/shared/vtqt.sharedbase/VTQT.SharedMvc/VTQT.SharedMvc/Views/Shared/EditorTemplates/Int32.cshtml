@using Kendo.Mvc.UI
@using Newtonsoft.Json

@using VTQT
@using VTQT.Core
@using VTQT.Core.Infrastructure
@using VTQT.Core.Localization
@using VTQT.Core.Logging
@using VTQT.Services
@using VTQT.Services.Localization
@using VTQT.Web.Framework
@using VTQT.Web.Framework.Extensions
@using VTQT.Web.Framework.Filters
@using VTQT.Web.Framework.Helpers
@using VTQT.Web.Framework.Security
@using VTQT.Web.Framework.UI

@using Microsoft.AspNetCore.Routing

@inject ILocalizationService tt

@model int?

@functions {
    private object _htmlAttributes;
    private object HtmlAttributes
    {
        get
        {
            if (_htmlAttributes != null)
                return _htmlAttributes;
            var htmlAttrData = ViewData["htmlAttributes"];
            if (htmlAttrData != null)
                _htmlAttributes = new RouteValueDictionary(htmlAttrData);
            return _htmlAttributes;
        }
    }

    private bool? _isNullValue;
    private bool IsNullValue
    {
        get
        {
            if (_isNullValue.HasValue)
                return _isNullValue.Value;
            var isNullValue = ViewData["isNullValue"];
            if (isNullValue != null)
                _isNullValue = (bool)isNullValue;
            else
                _isNullValue = false;
            return _isNullValue.Value;
        }
    }

    private string _format;
    private string Format
    {
        get
        {
            if (!string.IsNullOrEmpty(_format))
                return _format;
            var format = ViewData["format"];
            if (format != null)
            {
                _format = Convert.ToString(format);
            }
            return _format;
        }
    }

    private int? _value;
    private int? Value
    {
        get
        {
            if (_value.HasValue)
                return _value;
            if (ViewData.Model != null)
            {
                if (IsNullValue)
                    _value = null;
                else
                    _value = Convert.ToInt32(ViewData.Model, System.Globalization.CultureInfo.InvariantCulture);
            }
            return _value;
        }
    }
}

@{
    //var name = ViewData.TemplateInfo.GetFullHtmlFieldName(string.Empty);
    //var name = Html.NameForModel();
}

@if (!string.IsNullOrEmpty(Format))
{
    @(Html.Kendo().IntegerTextBoxFor(m => m)
        .Culture(System.Globalization.CultureInfo.CurrentCulture.Name)
        //.Name(name) // Comment để tránh lỗi InvalidOperationException(Exceptions.YouCannotOverrideModelExpressionName). Đã gen id/name từ For(m => m)
        .Placeholder(tt.GetResource("Common.EnterValue"))
        .Value(Value)
        .Format(Format)
        .HtmlAttributes(HtmlAttributes))
}
else
{
    @(Html.Kendo().IntegerTextBoxFor(m => m)
        .Culture(System.Globalization.CultureInfo.CurrentCulture.Name)
        //.Name(name)
        .Placeholder(tt.GetResource("Common.EnterValue"))
        .Value(Value)
        .HtmlAttributes(HtmlAttributes ?? new RouteValueDictionary()))
}
