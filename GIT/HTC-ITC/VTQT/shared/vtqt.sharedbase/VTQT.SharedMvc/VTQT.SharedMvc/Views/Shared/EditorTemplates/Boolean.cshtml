@using Kendo.Mvc.UI
@using Newtonsoft.Json

@using VTQT
@using VTQT.Core
@using VTQT.Core.Infrastructure
@using VTQT.Core.Localization
@using VTQT.Core.Logging
@using VTQT.Services
@using VTQT.Services.Localization
@using VTQT.Web.Framework
@using VTQT.Web.Framework.Extensions
@using VTQT.Web.Framework.Filters
@using VTQT.Web.Framework.Helpers
@using VTQT.Web.Framework.Security
@using VTQT.Web.Framework.UI

@using Microsoft.AspNetCore.Routing

@inject ILocalizationService tt

@functions {
    private object _htmlAttributes;
    private object HtmlAttributes
    {
        get
        {
            if (_htmlAttributes != null)
                return _htmlAttributes;
            var htmlAttrData = ViewData["htmlAttributes"];
            if (htmlAttrData != null)
                _htmlAttributes = new RouteValueDictionary(htmlAttrData);
            return _htmlAttributes;
        }
    }

    private bool? _value;
    private bool? Value
    {
        get
        {
            if (_value.HasValue)
                return _value;
            if (ViewData.Model != null)
            {
                _value = Convert.ToBoolean(ViewData.Model, System.Globalization.CultureInfo.InvariantCulture);
            }
            return _value;
        }
    }

    private List<SelectListItem> _triStateValues;
    private List<SelectListItem> TriStateValues
    {
        get
        {
            if (_triStateValues != null)
                return _triStateValues;
            _triStateValues = new List<SelectListItem> {
                new SelectListItem { Text = tt.GetResource("Common.Undefined").ToString(), Value = String.Empty, Selected = !Value.HasValue },
                new SelectListItem { Text = tt.GetResource("Common.Yes").ToString(), Value = "true", Selected = Value.HasValue && Value.Value },
                new SelectListItem { Text = tt.GetResource("Common.No").ToString(), Value = "false", Selected = Value.HasValue && !Value.Value },
            };
            return _triStateValues;
        }
    }

}

@if (!ViewData.ModelMetadata.IsNullableValueType)
{
    @Html.CheckBox(string.Empty, Value ?? false, HtmlAttributes)
}
else
{
    @Html.DropDownList(string.Empty, TriStateValues, HtmlAttributes ?? new { @class = "form-control" })
}
