//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Configuration;
using LinqToDB.Data;
using LinqToDB.Mapping;

using VTQT.Core.Domain.Apps;
using VTQT.Core.Domain.Localization;

namespace VTQT.Core.Domain.Warehouse
{
	/// <summary>
	/// Database       : WarehouseManagement
	/// Data Source    : 192.168.100.73
	/// Server Version : 8.0.28-0ubuntu0.20.04.3
	/// </summary>
	public partial class WarehouseDataConnection : LinqToDB.Data.DataConnection
	{
		/// <summary>
		/// Đối tượng kế toán
		/// </summary>
		public ITable<AccObject>             AccObjects              { get { return this.GetTable<AccObject>(); } }
		public ITable<AdminRoleWareHouse>    AdminRoleWareHouses     { get { return this.GetTable<AdminRoleWareHouse>(); } }
		/// <summary>
		/// Kiểm kê kho
		/// </summary>
		public ITable<Audit>                 Audits                  { get { return this.GetTable<Audit>(); } }
		/// <summary>
		/// Hội đồng kiểm kê
		/// </summary>
		public ITable<AuditCouncil>          AuditCouncils           { get { return this.GetTable<AuditCouncil>(); } }
		/// <summary>
		/// Kết quả kiểm kê
		/// </summary>
		public ITable<AuditDetail>           AuditDetails            { get { return this.GetTable<AuditDetail>(); } }
		/// <summary>
		/// Chi tiết các serial khi audit
		/// </summary>
		public ITable<AuditDetailSerial>     AuditDetailSerials      { get { return this.GetTable<AuditDetailSerial>(); } }
		/// <summary>
		/// Tồn kho đầu kỳ
		/// </summary>
		public ITable<BeginningWareHouse>    BeginningWareHouses     { get { return this.GetTable<BeginningWareHouse>(); } }
		/// <summary>
		/// Phiếu nhập kho
		/// </summary>
		public ITable<Inward>                Inwards                 { get { return this.GetTable<Inward>(); } }
		/// <summary>
		/// Chi tiết nhập kho
		/// </summary>
		public ITable<InwardDetail>          InwardDetails           { get { return this.GetTable<InwardDetail>(); } }
		/// <summary>
		/// Phiếu xuất kho
		/// </summary>
		public ITable<Outward>               Outwards                { get { return this.GetTable<Outward>(); } }
		/// <summary>
		/// Chi tiết xuất kho
		/// </summary>
		public ITable<OutwardDetail>         OutwardDetails          { get { return this.GetTable<OutwardDetail>(); } }
		/// <summary>
		/// Quản lý tồn kho theo Serial
		/// </summary>
		public ITable<SerialWareHouse>       SerialWareHouses        { get { return this.GetTable<SerialWareHouse>(); } }
		/// <summary>
		/// Đơn vị tính
		/// </summary>
		public ITable<Unit>                  Units                   { get { return this.GetTable<Unit>(); } }
		/// <summary>
		/// Nhà cung cấp
		/// </summary>
		public ITable<Vendor>                Vendors                 { get { return this.GetTable<Vendor>(); } }
		/// <summary>
		/// VIEW
		/// </summary>
		public ITable<vWareHouseLedger>      vWareHouseLedgers       { get { return this.GetTable<vWareHouseLedger>(); } }
		/// <summary>
		/// Danh mục Kho
		/// </summary>
		public ITable<WareHouse>             WareHouses              { get { return this.GetTable<WareHouse>(); } }
		/// <summary>
		/// Bảng tổng hợp tồn kho
		/// </summary>
		public ITable<WarehouseBalance>      WarehouseBalances       { get { return this.GetTable<WarehouseBalance>(); } }
		/// <summary>
		/// Danh mục vật tư
		/// </summary>
		public ITable<WareHouseItem>         WareHouseItems          { get { return this.GetTable<WareHouseItem>(); } }
		/// <summary>
		/// Loại vật tư
		/// </summary>
		public ITable<WareHouseItemCategory> WareHouseItemCategories { get { return this.GetTable<WareHouseItemCategory>(); } }
		/// <summary>
		/// Đơn vị tính
		/// </summary>
		public ITable<WareHouseItemUnit>     WareHouseItemUnits      { get { return this.GetTable<WareHouseItemUnit>(); } }
		/// <summary>
		/// Định mức tồn kho
		/// </summary>
		public ITable<WareHouseLimit>        WareHouseLimits         { get { return this.GetTable<WareHouseLimit>(); } }
		public ITable<WareHouseUser>         WareHouseUsers          { get { return this.GetTable<WareHouseUser>(); } }

		public WarehouseDataConnection()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public WarehouseDataConnection(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public WarehouseDataConnection(LinqToDbConnectionOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public WarehouseDataConnection(LinqToDbConnectionOptions<WarehouseDataConnection> options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	/// <summary>
	/// Đối tượng kế toán
	/// </summary>
	[Serializable]
	[Table("AccObject")]
	public partial class AccObject : BaseEntity
	{
		/// <summary>
		/// Mã đối tượng
		/// </summary>
		[Column, NotNull    ] public string Code     { get; set; } // varchar(20)
		/// <summary>
		/// Tên đối tượng
		/// </summary>
		[Column, NotNull    ] public string Name     { get; set; } // varchar(255)
		/// <summary>
		/// Địa chỉ
		/// </summary>
		[Column,    Nullable] public string Address  { get; set; } // varchar(255)
		/// <summary>
		/// Số điện thoại
		/// </summary>
		[Column,    Nullable] public string Phone    { get; set; } // varchar(20)
		/// <summary>
		/// Ngừng theo dõi
		/// </summary>
		[Column, NotNull    ] public bool   Inactive { get; set; } // bit(1)

		#region Associations

		/// <summary>
		/// FK_WareHouseInwards_PK_AccObject_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="AccObjectId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Inward> WareHouseInwards { get; set; }

		/// <summary>
		/// FK_WareHouseInwardsDetails_PK_AccObject_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="AccObjectId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InwardDetail> WareHouseInwardsDetails { get; set; }

		/// <summary>
		/// FK_WareHouseOutwardDetail_PK_AccObject_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="AccObjectId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutwardDetail> WareHouseOutwardDetails { get; set; }

		/// <summary>
		/// FK_WareHouseOutward_PK_AccObject_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="AccObjectId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Outward> WareHouseOutwards { get; set; }

		#endregion
	}

	[Serializable]
	[Table("AdminRoleWareHouse")]
	public partial class AdminRoleWareHouse : BaseEntity
	{
		[Column,    Nullable] public string   UserId      { get; set; } // varchar(255)
		[Column, NotNull    ] public bool     Inactive    { get; set; } // bit(1)
		[Column, NotNull    ] public DateTime CreatedDate { get; set; } // datetime
		[Column,    Nullable] public string   CreatedBy   { get; set; } // varchar(255)
	}

	/// <summary>
	/// Kiểm kê kho
	/// </summary>
	[Serializable]
	[Table("Audit")]
	public partial class Audit : BaseEntity
	{
		/// <summary>
		/// Số phiếu
		/// </summary>
		[Column, NotNull    ] public string   VoucherCode  { get; set; } // varchar(20)
		/// <summary>
		/// Ngày phiếu
		/// </summary>
		[Column, NotNull    ] public DateTime VoucherDate  { get; set; } // datetime
		/// <summary>
		/// Kho kiểm kê
		/// </summary>
		[Column, NotNull    ] public string   WareHouseId  { get; set; } // varchar(36)
		/// <summary>
		/// Tên đợt kiểm kê
		/// </summary>
		[Column,    Nullable] public string   Description  { get; set; } // varchar(255)
		/// <summary>
		/// Ngày tạo
		/// </summary>
		[Column, NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		/// <summary>
		/// Người tạo
		/// </summary>
		[Column,    Nullable] public string   CreatedBy    { get; set; } // varchar(100)
		/// <summary>
		/// Ngày sửa
		/// </summary>
		[Column, NotNull    ] public DateTime ModifiedDate { get; set; } // timestamp
		[Column,    Nullable] public string   ModifiedBy   { get; set; } // varchar(100)
		[Column,    Nullable] public string   Voucher      { get; set; } // varchar(50)

		#region Associations

		/// <summary>
		/// FK_AuditCouncils_PK_Audit_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="AuditId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AuditCouncil> AuditCouncils { get; set; }

		/// <summary>
		/// FK_AuditDetails_PK_Audit_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="AuditId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AuditDetail> AuditDetails { get; set; }

		/// <summary>
		/// FK_Audits_PK_WareHouse
		/// </summary>
		[Association(ThisKey="WareHouseId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_Audits_PK_WareHouse", BackReferenceName="Audits")]
		public WareHouse WareHouse { get; set; }

		#endregion
	}

	/// <summary>
	/// Hội đồng kiểm kê
	/// </summary>
	[Serializable]
	[Table("AuditCouncil")]
	public partial class AuditCouncil : BaseEntity
	{
		/// <summary>
		/// fk kỳ kiểm kê
		/// </summary>
		[Column, NotNull    ] public string AuditId      { get; set; } // varchar(36)
		/// <summary>
		/// fk nhân viên
		/// </summary>
		[Column,    Nullable] public string EmployeeId   { get; set; } // varchar(36)
		/// <summary>
		/// Tên nhân viên
		/// </summary>
		[Column,    Nullable] public string EmployeeName { get; set; } // varchar(100)
		/// <summary>
		/// vai trò trong đoàn kiểm kê
		/// </summary>
		[Column,    Nullable] public string Role         { get; set; } // varchar(100)

		#region Associations

		/// <summary>
		/// FK_AuditCouncils_PK_Audit
		/// </summary>
		[Association(ThisKey="AuditId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_AuditCouncils_PK_Audit", BackReferenceName="AuditCouncils")]
		public Audit Audit { get; set; }

		#endregion
	}

	/// <summary>
	/// Kết quả kiểm kê
	/// </summary>
	[Serializable]
	[Table("AuditDetail")]
	public partial class AuditDetail : BaseEntity
	{
		/// <summary>
		/// FK Audit
		/// </summary>
		[Column, NotNull    ] public string  AuditId       { get; set; } // varchar(36)
		/// <summary>
		/// fk Vật tư
		/// </summary>
		[Column,    Nullable] public string  ItemId        { get; set; } // varchar(36)
		/// <summary>
		/// Số lượng sổ sách
		/// </summary>
		[Column, NotNull    ] public decimal Quantity      { get; set; } // decimal(15,2)
		/// <summary>
		/// Số lượng thực tế
		/// </summary>
		[Column, NotNull    ] public decimal AuditQuantity { get; set; } // decimal(15,2)
		/// <summary>
		/// Kết luận
		/// </summary>
		[Column,    Nullable] public string  Conclude      { get; set; } // varchar(255)
		/// <summary>
		/// Tên đơn vị tính
		/// </summary>
		[Column,    Nullable] public string  UnitName      { get; set; } // varchar(255)

		#region Associations

		/// <summary>
		/// FK_AuditDetails_PK_Audit
		/// </summary>
		[Association(ThisKey="AuditId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_AuditDetails_PK_Audit", BackReferenceName="AuditDetails")]
		public Audit Audit { get; set; }

		/// <summary>
		/// FK_AuditDetailSerials_PK_AuditDetail_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="AuditDetailId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AuditDetailSerial> AuditDetailSerials { get; set; }

		/// <summary>
		/// FK_AuditDetails_PK_WareHouseItem
		/// </summary>
		[Association(ThisKey="ItemId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_AuditDetails_PK_WareHouseItem", BackReferenceName="AuditDetails")]
		public WareHouseItem WareHouseItem { get; set; }

		#endregion
	}

	/// <summary>
	/// Chi tiết các serial khi audit
	/// </summary>
	[Serializable]
	[Table("AuditDetailSerial")]
	public partial class AuditDetailSerial : BaseEntity
	{
		/// <summary>
		/// fk Vật tư
		/// </summary>
		[Column, NotNull    ] public string ItemId        { get; set; } // varchar(36)
		/// <summary>
		/// Serial
		/// </summary>
		[Column, NotNull    ] public string Serial        { get; set; } // varchar(50)
		/// <summary>
		/// fk Detail audit
		/// </summary>
		[Column,    Nullable] public string AuditDetailId { get; set; } // varchar(36)

		#region Associations

		/// <summary>
		/// FK_AuditDetailSerials_PK_AuditDetail
		/// </summary>
		[Association(ThisKey="AuditDetailId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_AuditDetailSerials_PK_AuditDetail", BackReferenceName="AuditDetailSerials")]
		public AuditDetail AuditDetail { get; set; }

		/// <summary>
		/// FK_AuditDetailSerials_PK_WareHouseItem
		/// </summary>
		[Association(ThisKey="ItemId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_AuditDetailSerials_PK_WareHouseItem", BackReferenceName="AuditDetailSerials")]
		public WareHouseItem WareHouseItem { get; set; }

		#endregion
	}

	/// <summary>
	/// Tồn kho đầu kỳ
	/// </summary>
	[Serializable]
	[Table("BeginningWareHouse")]
	public partial class BeginningWareHouse : BaseEntity
	{
		/// <summary>
		/// Kho
		/// </summary>
		[Column, NotNull    ] public string   WareHouseId  { get; set; } // varchar(36)
		/// <summary>
		/// Vật tư
		/// </summary>
		[Column, NotNull    ] public string   ItemId       { get; set; } // varchar(36)
		/// <summary>
		/// Đơn vị tính
		/// </summary>
		[Column, NotNull    ] public string   UnitId       { get; set; } // varchar(36)
		[Column,    Nullable] public string   UnitName     { get; set; } // varchar(255)
		/// <summary>
		/// Số lượng tồn
		/// </summary>
		[Column, NotNull    ] public decimal  Quantity     { get; set; } // decimal(15,4)
		/// <summary>
		/// Ngày tạo
		/// </summary>
		[Column, NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		/// <summary>
		/// Người tạo
		/// </summary>
		[Column,    Nullable] public string   CreatedBy    { get; set; } // varchar(100)
		/// <summary>
		/// Ngày sửa
		/// </summary>
		[Column, NotNull    ] public DateTime ModifiedDate { get; set; } // timestamp
		/// <summary>
		/// Người sửa
		/// </summary>
		[Column,    Nullable] public string   ModifiedBy   { get; set; } // varchar(100)

		#region Associations

		/// <summary>
		/// FK_BeginningWareHouses_PK_Unit
		/// </summary>
		[Association(ThisKey="UnitId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_BeginningWareHouses_PK_Unit", BackReferenceName="BeginningWareHouses")]
		public Unit Unit { get; set; }

		/// <summary>
		/// FK_BeginningWareHouses_PK_WareHouse
		/// </summary>
		[Association(ThisKey="WareHouseId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_BeginningWareHouses_PK_WareHouse", BackReferenceName="BeginningWareHouses")]
		public WareHouse WareHouse { get; set; }

		/// <summary>
		/// FK_BeginningWareHouses_PK_WareHouseItem
		/// </summary>
		[Association(ThisKey="ItemId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_BeginningWareHouses_PK_WareHouseItem", BackReferenceName="BeginningWareHouses")]
		public WareHouseItem WareHouseItem { get; set; }

		#endregion
	}

	/// <summary>
	/// Phiếu nhập kho
	/// </summary>
	[Serializable]
	[Table("Inward")]
	public partial class Inward : BaseEntity
	{
		/// <summary>
		/// Số phiếu
		/// </summary>
		[Column,    Nullable] public string   VoucherCode        { get; set; } // varchar(255)
		/// <summary>
		/// Số chứng từ thực tế
		/// </summary>
		[Column,    Nullable] public string   Voucher            { get; set; } // varchar(255)
		/// <summary>
		/// Ngày
		/// </summary>
		[Column, NotNull    ] public DateTime VoucherDate        { get; set; } // datetime
		/// <summary>
		/// fk kho
		/// </summary>
		[Column, NotNull    ] public string   WareHouseID        { get; set; } // varchar(36)
		/// <summary>
		/// Người giao
		/// </summary>
		[Column,    Nullable] public string   Deliver            { get; set; } // varchar(255)
		/// <summary>
		/// SĐT người giao
		/// </summary>
		[Column,    Nullable] public string   DeliverPhone       { get; set; } // varchar(255)
		/// <summary>
		/// Địa chỉ người giao
		/// </summary>
		[Column,    Nullable] public string   DeliverAddress     { get; set; } // varchar(500)
		/// <summary>
		/// Bộ phận người giao
		/// </summary>
		[Column,    Nullable] public string   DeliverDepartment  { get; set; } // varchar(255)
		/// <summary>
		/// Người nhận
		/// </summary>
		[Column,    Nullable] public string   Receiver           { get; set; } // varchar(255)
		/// <summary>
		/// SĐT người nhận
		/// </summary>
		[Column,    Nullable] public string   ReceiverPhone      { get; set; } // varchar(255)
		/// <summary>
		/// Địa chỉ người nhận
		/// </summary>
		[Column,    Nullable] public string   ReceiverAddress    { get; set; } // varchar(500)
		/// <summary>
		/// Bộ phận người nhận
		/// </summary>
		[Column,    Nullable] public string   ReceiverDepartment { get; set; } // varchar(255)
		/// <summary>
		/// Nhà cung cấp
		/// </summary>
		[Column,    Nullable] public string   VendorId           { get; set; } // varchar(36)
		/// <summary>
		/// Lý do nhập kho (10: Mua hàng, 20: Thu hồi, 30: Trả lại, 9999: Khác)
		/// </summary>
		[Column, NotNull    ] public int      Reason             { get; set; } // int
		/// <summary>
		/// Lý do bằng chữ
		/// </summary>
		[Column,    Nullable] public string   ReasonDescription  { get; set; } // varchar(255)
		/// <summary>
		/// Diễn giải
		/// </summary>
		[Column,    Nullable] public string   Description        { get; set; } // varchar(255)
		/// <summary>
		/// Danh sách tham chiếu
		/// </summary>
		[Column,    Nullable] public string   Reference          { get; set; } // json
		/// <summary>
		/// Ngày tạo
		/// </summary>
		[Column, NotNull    ] public DateTime CreatedDate        { get; set; } // datetime
		/// <summary>
		/// Người tạo
		/// </summary>
		[Column,    Nullable] public string   CreatedBy          { get; set; } // varchar(100)
		/// <summary>
		/// Ngày sửa
		/// </summary>
		[Column, NotNull    ] public DateTime ModifiedDate       { get; set; } // datetime
		[Column,    Nullable] public string   ModifiedBy         { get; set; } // varchar(100)
		[Column,    Nullable] public string   AccObjectId        { get; set; } // varchar(255)

		#region Associations

		/// <summary>
		/// FK_WareHouseInwards_PK_AccObject
		/// </summary>
		[Association(ThisKey="AccObjectId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseInwards_PK_AccObject", BackReferenceName="WareHouseInwards")]
		public AccObject AccObject { get; set; }

		/// <summary>
		/// FK_InwardDetails_PK_Inward_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="InwardId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InwardDetail> InwardDetails { get; set; }

		/// <summary>
		/// FK_WareHouseInwards_PK_Vendor
		/// </summary>
		[Association(ThisKey="VendorId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseInwards_PK_Vendor", BackReferenceName="WareHouseInwards")]
		public Vendor Vendor { get; set; }

		/// <summary>
		/// FK_WareHouseInwards_PK_WareHouse
		/// </summary>
		[Association(ThisKey="WareHouseID", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseInwards_PK_WareHouse", BackReferenceName="WareHouseInwards")]
		public WareHouse WareHouse { get; set; }

		#endregion
	}

	/// <summary>
	/// Chi tiết nhập kho
	/// </summary>
	[Serializable]
	[Table("InwardDetail")]
	public partial class InwardDetail : BaseEntity
	{
		/// <summary>
		/// fk Id chứng từ nhập
		/// </summary>
		[Column, NotNull    ] public string  InwardId       { get; set; } // varchar(36)
		/// <summary>
		/// Id vật tư
		/// </summary>
		[Column, NotNull    ] public string  ItemId         { get; set; } // varchar(36)
		/// <summary>
		/// Id đơn vị
		/// </summary>
		[Column, NotNull    ] public string  UnitId         { get; set; } // varchar(36)
		/// <summary>
		/// Số lượng nhập
		/// </summary>
		[Column, NotNull    ] public decimal UIQuantity     { get; set; } // decimal(15,2)
		/// <summary>
		/// Đơn giá
		/// </summary>
		[Column, NotNull    ] public decimal UIPrice        { get; set; } // decimal(15,2)
		/// <summary>
		/// Thành tiền
		/// </summary>
		[Column, NotNull    ] public decimal Amount         { get; set; } // decimal(15,2)
		/// <summary>
		/// Số lượng theo dõi tồn kho (= UIQuantity * tỷ lệ chuyển đối)
		/// </summary>
		[Column, NotNull    ] public decimal Quantity       { get; set; } // decimal(15,2)
		/// <summary>
		/// Thành tiền theo đơn vị tính chính
		/// </summary>
		[Column, NotNull    ] public decimal Price          { get; set; } // decimal(15,2)
		/// <summary>
		/// Id Phòng ban
		/// </summary>
		[Column,    Nullable] public string  DepartmentId   { get; set; } // varchar(36)
		/// <summary>
		/// Tên phòng ban
		/// </summary>
		[Column,    Nullable] public string  DepartmentName { get; set; } // varchar(255)
		/// <summary>
		/// id nhân viên
		/// </summary>
		[Column,    Nullable] public string  EmployeeId     { get; set; } // varchar(36)
		/// <summary>
		/// Nhân viên
		/// </summary>
		[Column,    Nullable] public string  EmployeeName   { get; set; } // varchar(255)
		/// <summary>
		/// Id Trạm
		/// </summary>
		[Column,    Nullable] public string  StationId      { get; set; } // varchar(36)
		/// <summary>
		/// Tên trạm
		/// </summary>
		[Column,    Nullable] public string  StationName    { get; set; } // varchar(255)
		/// <summary>
		/// Id dự án
		/// </summary>
		[Column,    Nullable] public string  ProjectId      { get; set; } // varchar(36)
		/// <summary>
		/// Tên dự án
		/// </summary>
		[Column,    Nullable] public string  ProjectName    { get; set; } // varchar(255)
		/// <summary>
		/// Id khách hàng
		/// </summary>
		[Column,    Nullable] public string  CustomerId     { get; set; } // varchar(36)
		/// <summary>
		/// Tên khách hàng
		/// </summary>
		[Column,    Nullable] public string  CustomerName   { get; set; } // varchar(255)
		[Column,    Nullable] public string  AccountMore    { get; set; } // varchar(255)
		[Column,    Nullable] public string  AccountYes     { get; set; } // varchar(255)
		[Column,    Nullable] public string  Status         { get; set; } // varchar(255)
		[Column,    Nullable] public string  AccObjectId    { get; set; } // varchar(255)

		#region Associations

		/// <summary>
		/// FK_WareHouseInwardsDetails_PK_AccObject
		/// </summary>
		[Association(ThisKey="AccObjectId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseInwardsDetails_PK_AccObject", BackReferenceName="WareHouseInwardsDetails")]
		public AccObject AccObject { get; set; }

		/// <summary>
		/// FK_InwardDetails_PK_Inward
		/// </summary>
		[Association(ThisKey="InwardId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_InwardDetails_PK_Inward", BackReferenceName="InwardDetails")]
		public Inward Inward { get; set; }

		/// <summary>
		/// FK_SerialWareHouses_PK_InwardDetail_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="InwardDetailId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SerialWareHouse> SerialWareHouses { get; set; }

		/// <summary>
		/// FK_InwardDetails_PK_Unit
		/// </summary>
		[Association(ThisKey="UnitId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_InwardDetails_PK_Unit", BackReferenceName="InwardDetails")]
		public Unit Unit { get; set; }

		/// <summary>
		/// FK_InwardDetails_PK_WareHouseItem
		/// </summary>
		[Association(ThisKey="ItemId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_InwardDetails_PK_WareHouseItem", BackReferenceName="InwardDetails")]
		public WareHouseItem WareHouseItem { get; set; }

		#endregion
	}

	/// <summary>
	/// Phiếu xuất kho
	/// </summary>
	[Serializable]
	[Table("Outward")]
	public partial class Outward : BaseEntity
	{
		/// <summary>
		/// Số phiếu
		/// </summary>
		[Column,    Nullable] public string   VoucherCode        { get; set; } // varchar(255)
		/// <summary>
		/// Ngày
		/// </summary>
		[Column, NotNull    ] public DateTime VoucherDate        { get; set; } // datetime
		/// <summary>
		/// fk kho
		/// </summary>
		[Column, NotNull    ] public string   WareHouseID        { get; set; } // varchar(36)
		[Column,    Nullable] public string   ToWareHouseId      { get; set; } // varchar(36)
		/// <summary>
		/// Người giao
		/// </summary>
		[Column,    Nullable] public string   Deliver            { get; set; } // varchar(255)
		/// <summary>
		/// SĐT người giao
		/// </summary>
		[Column,    Nullable] public string   DeliverPhone       { get; set; } // varchar(255)
		/// <summary>
		/// Địa chỉ người giao
		/// </summary>
		[Column,    Nullable] public string   DeliverAddress     { get; set; } // varchar(500)
		/// <summary>
		/// Bộ phận người giao
		/// </summary>
		[Column,    Nullable] public string   DeliverDepartment  { get; set; } // varchar(255)
		/// <summary>
		/// Người nhận
		/// </summary>
		[Column,    Nullable] public string   Receiver           { get; set; } // varchar(255)
		/// <summary>
		/// SĐT người nhận
		/// </summary>
		[Column,    Nullable] public string   ReceiverPhone      { get; set; } // varchar(255)
		/// <summary>
		/// Địa chỉ người nhận
		/// </summary>
		[Column,    Nullable] public string   ReceiverAddress    { get; set; } // varchar(500)
		/// <summary>
		/// Bộ phận người nhận
		/// </summary>
		[Column,    Nullable] public string   ReceiverDepartment { get; set; } // varchar(255)
		/// <summary>
		/// Lý do xuất kho (10: Cấp phát tài sản hành chính, 20: Cấp phát tài sản Trạm, 30: Cấp phát tài sản dự án, 40: Cấp phát tài sản khách hàng, 50: Cấp vật tư, 60: Cấp công cụ dụng cụ, 70: Chuyển kho, 9999: Khác)
		/// </summary>
		[Column, NotNull    ] public int      Reason             { get; set; } // int
		/// <summary>
		/// Lý do bằng chữ
		/// </summary>
		[Column,    Nullable] public string   ReasonDescription  { get; set; } // varchar(255)
		/// <summary>
		/// Diễn giải
		/// </summary>
		[Column,    Nullable] public string   Description        { get; set; } // varchar(255)
		[Column,    Nullable] public string   Reference          { get; set; } // json
		/// <summary>
		/// Ngày tạo
		/// </summary>
		[Column, NotNull    ] public DateTime CreatedDate        { get; set; } // datetime
		/// <summary>
		/// Người tạo
		/// </summary>
		[Column,    Nullable] public string   CreatedBy          { get; set; } // varchar(100)
		/// <summary>
		/// Ngày sửa
		/// </summary>
		[Column, NotNull    ] public DateTime ModifiedDate       { get; set; } // datetime
		[Column,    Nullable] public string   ModifiedBy         { get; set; } // varchar(100)
		[Column,    Nullable] public string   ReceiverCode       { get; set; } // varchar(255)
		[Column,    Nullable] public string   VoucherCodeReality { get; set; } // varchar(50)
		[Column,    Nullable] public string   AccObjectId        { get; set; } // varchar(255)

		#region Associations

		/// <summary>
		/// FK_WareHouseOutward_PK_AccObject
		/// </summary>
		[Association(ThisKey="AccObjectId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseOutward_PK_AccObject", BackReferenceName="WareHouseOutwards")]
		public AccObject AccObject { get; set; }

		/// <summary>
		/// FK_OutwardDetails_PK_Outward_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutwardId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutwardDetail> OutwardDetails { get; set; }

		/// <summary>
		/// FK_ToWareHouse_Outwards_PK_ToWareHouse
		/// </summary>
		[Association(ThisKey="ToWareHouseId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ToWareHouse_Outwards_PK_ToWareHouse", BackReferenceName="ToWareHouse_Outwards")]
		public WareHouse ToWareHouse { get; set; }

		/// <summary>
		/// FK_Warehouse_Outwards_PK_WareHouse
		/// </summary>
		[Association(ThisKey="WareHouseID", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_Warehouse_Outwards_PK_WareHouse", BackReferenceName="Warehouse_Outwards")]
		public WareHouse WareHouse { get; set; }

		#endregion
	}

	/// <summary>
	/// Chi tiết xuất kho
	/// </summary>
	[Serializable]
	[Table("OutwardDetail")]
	public partial class OutwardDetail : BaseEntity
	{
		/// <summary>
		/// fk Id chứng từ xuất
		/// </summary>
		[Column, NotNull    ] public string  OutwardId      { get; set; } // varchar(36)
		/// <summary>
		/// Id vật tư
		/// </summary>
		[Column, NotNull    ] public string  ItemId         { get; set; } // varchar(36)
		/// <summary>
		/// Id đơn vị
		/// </summary>
		[Column, NotNull    ] public string  UnitId         { get; set; } // varchar(36)
		/// <summary>
		/// Số lượng
		/// </summary>
		[Column, NotNull    ] public decimal UIQuantity     { get; set; } // decimal(15,2)
		/// <summary>
		/// Đơn giá
		/// </summary>
		[Column, NotNull    ] public decimal UIPrice        { get; set; } // decimal(15,2)
		/// <summary>
		/// Thành tiền
		/// </summary>
		[Column, NotNull    ] public decimal Amount         { get; set; } // decimal(15,2)
		/// <summary>
		/// Số lượng theo đơn vị tính chính
		/// </summary>
		[Column, NotNull    ] public decimal Quantity       { get; set; } // decimal(15,2)
		/// <summary>
		/// Thành tiền theo đơn vị tính chính
		/// </summary>
		[Column, NotNull    ] public decimal Price          { get; set; } // decimal(15,2)
		/// <summary>
		/// Id Phòng ban
		/// </summary>
		[Column,    Nullable] public string  DepartmentId   { get; set; } // varchar(36)
		/// <summary>
		/// Tên phòng ban
		/// </summary>
		[Column,    Nullable] public string  DepartmentName { get; set; } // varchar(255)
		/// <summary>
		/// id nhân viên
		/// </summary>
		[Column,    Nullable] public string  EmployeeId     { get; set; } // varchar(36)
		/// <summary>
		/// Nhân viên
		/// </summary>
		[Column,    Nullable] public string  EmployeeName   { get; set; } // varchar(255)
		/// <summary>
		/// Id Trạm
		/// </summary>
		[Column,    Nullable] public string  StationId      { get; set; } // varchar(36)
		/// <summary>
		/// Tên trạm
		/// </summary>
		[Column,    Nullable] public string  StationName    { get; set; } // varchar(255)
		/// <summary>
		/// Id dự án
		/// </summary>
		[Column,    Nullable] public string  ProjectId      { get; set; } // varchar(36)
		/// <summary>
		/// Tên dự án
		/// </summary>
		[Column,    Nullable] public string  ProjectName    { get; set; } // varchar(255)
		/// <summary>
		/// Id khách hàng
		/// </summary>
		[Column,    Nullable] public string  CustomerId     { get; set; } // varchar(36)
		/// <summary>
		/// Tên khách hàng
		/// </summary>
		[Column,    Nullable] public string  CustomerName   { get; set; } // varchar(255)
		[Column,    Nullable] public string  AccountMore    { get; set; } // varchar(255)
		[Column,    Nullable] public string  AccountYes     { get; set; } // varchar(255)
		[Column,    Nullable] public string  Status         { get; set; } // varchar(255)
		[Column,    Nullable] public string  AccObjectId    { get; set; } // varchar(255)

		#region Associations

		/// <summary>
		/// FK_WareHouseOutwardDetail_PK_AccObject
		/// </summary>
		[Association(ThisKey="AccObjectId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseOutwardDetail_PK_AccObject", BackReferenceName="WareHouseOutwardDetails")]
		public AccObject AccObject { get; set; }

		/// <summary>
		/// FK_OutwardDetails_PK_Outward
		/// </summary>
		[Association(ThisKey="OutwardId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutwardDetails_PK_Outward", BackReferenceName="OutwardDetails")]
		public Outward Outward { get; set; }

		/// <summary>
		/// FK_SerialWareHouses_PK_OutwardDetail_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutwardDetailId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SerialWareHouse> SerialWareHouses { get; set; }

		/// <summary>
		/// FK_OutwardDetails_PK_Unit
		/// </summary>
		[Association(ThisKey="UnitId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutwardDetails_PK_Unit", BackReferenceName="OutwardDetails")]
		public Unit Unit { get; set; }

		/// <summary>
		/// FK_OutwardDetails_PK_WareHouseItem
		/// </summary>
		[Association(ThisKey="ItemId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutwardDetails_PK_WareHouseItem", BackReferenceName="OutwardDetails")]
		public WareHouseItem WareHouseItem { get; set; }

		#endregion
	}

	/// <summary>
	/// Quản lý tồn kho theo Serial
	/// </summary>
	[Serializable]
	[Table("SerialWareHouse")]
	public partial class SerialWareHouse : BaseEntity
	{
		/// <summary>
		/// fk Vật tư
		/// </summary>
		[Column, NotNull    ] public string ItemId          { get; set; } // varchar(36)
		/// <summary>
		/// Serial
		/// </summary>
		[Column, NotNull    ] public string Serial          { get; set; } // varchar(50)
		/// <summary>
		/// fk Detail nhập kho
		/// </summary>
		[Column,    Nullable] public string InwardDetailId  { get; set; } // varchar(36)
		/// <summary>
		/// fk detail xuất kho
		/// </summary>
		[Column,    Nullable] public string OutwardDetailId { get; set; } // varchar(36)
		/// <summary>
		/// Đánh dấu Serial mới nhập mà chưa xuất ra (Giá trị mặc định = 0)
		/// </summary>
		[Column, NotNull    ] public bool   IsOver          { get; set; } // bit(1)

		#region Associations

		/// <summary>
		/// FK_SerialWareHouses_PK_InwardDetail
		/// </summary>
		[Association(ThisKey="InwardDetailId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_SerialWareHouses_PK_InwardDetail", BackReferenceName="SerialWareHouses")]
		public InwardDetail InwardDetail { get; set; }

		/// <summary>
		/// FK_SerialWareHouses_PK_OutwardDetail
		/// </summary>
		[Association(ThisKey="OutwardDetailId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_SerialWareHouses_PK_OutwardDetail", BackReferenceName="SerialWareHouses")]
		public OutwardDetail OutwardDetail { get; set; }

		/// <summary>
		/// FK_SerialWareHouses_PK_WareHouseItem
		/// </summary>
		[Association(ThisKey="ItemId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_SerialWareHouses_PK_WareHouseItem", BackReferenceName="SerialWareHouses")]
		public WareHouseItem WareHouseItem { get; set; }

		#endregion
	}

	/// <summary>
	/// Đơn vị tính
	/// </summary>
	[Serializable]
	[Table("Unit")]
	public partial class Unit : BaseEntity, ILocalizedEntity
	{
		/// <summary>
		/// Tên đơn vị tính
		/// </summary>
		[Column,    Nullable] public string UnitName { get; set; } // varchar(255)
		[Column, NotNull    ] public bool   Inactive { get; set; } // bit(1)

		#region Associations

		/// <summary>
		/// FK_BeginningWareHouses_PK_Unit_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="UnitId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<BeginningWareHouse> BeginningWareHouses { get; set; }

		/// <summary>
		/// FK_InwardDetails_PK_Unit_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="UnitId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InwardDetail> InwardDetails { get; set; }

		/// <summary>
		/// FK_OutwardDetails_PK_Unit_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="UnitId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutwardDetail> OutwardDetails { get; set; }

		/// <summary>
		/// FK_WareHouseItems_PK_Unit_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="UnitId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<WareHouseItem> WareHouseItems { get; set; }

		/// <summary>
		/// FK_WareHouseItemUnits_PK_Unit_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="UnitId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<WareHouseItemUnit> WareHouseItemUnits { get; set; }

		/// <summary>
		/// FK_WareHouseLimits_PK_Unit_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="UnitId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<WareHouseLimit> WareHouseLimits { get; set; }

		#endregion
	}

	/// <summary>
	/// Nhà cung cấp
	/// </summary>
	[Serializable]
	[Table("Vendor")]
	public partial class Vendor : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code          { get; set; } // varchar(20)
		[Column, NotNull    ] public string Name          { get; set; } // varchar(255)
		[Column,    Nullable] public string Address       { get; set; } // varchar(255)
		[Column,    Nullable] public string Phone         { get; set; } // varchar(20)
		/// <summary>
		/// Email
		/// </summary>
		[Column,    Nullable] public string Email         { get; set; } // varchar(50)
		/// <summary>
		/// Người liên hệ
		/// </summary>
		[Column,    Nullable] public string ContactPerson { get; set; } // varchar(100)
		/// <summary>
		/// Ngừng theo dõi
		/// </summary>
		[Column, NotNull    ] public bool   Inactive      { get; set; } // bit(1)

		#region Associations

		/// <summary>
		/// FK_WareHouseInwards_PK_Vendor_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="VendorId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Inward> WareHouseInwards { get; set; }

		/// <summary>
		/// FK_WareHouseItems_PK_Vendor_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="VendorID", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<WareHouseItem> WareHouseItems { get; set; }

		#endregion
	}

	/// <summary>
	/// VIEW
	/// </summary>
	[Serializable]
	[Table("vWareHouseLedger", IsView=true)]
	public partial class vWareHouseLedger : BaseEntity
	{
		[Column, NotNull    ] public string    WareHouseId    { get; set; } // varchar(36)
		[Column, NotNull    ] public string    ItemId         { get; set; } // varchar(36)
		[Column, NotNull    ] public string    UnitId         { get; set; } // varchar(36)
		[Column, NotNull    ] public decimal   Quantity       { get; set; } // decimal(17,4)
		[Column,    Nullable] public string    VoucherCode    { get; set; } // varchar(255)
		[Column,    Nullable] public DateTime? VoucherDate    { get; set; } // datetime
		[Column,    Nullable] public string    DepartmentId   { get; set; } // varchar(36)
		[Column,    Nullable] public string    DepartmentName { get; set; } // varchar(255)
		[Column,    Nullable] public string    StationId      { get; set; } // varchar(36)
		[Column,    Nullable] public string    StationName    { get; set; } // varchar(255)
		[Column,    Nullable] public string    CustomerId     { get; set; } // varchar(36)
		[Column,    Nullable] public string    CustomerName   { get; set; } // varchar(255)
		[Column,    Nullable] public string    ProjectId      { get; set; } // varchar(36)
		[Column,    Nullable] public string    ProjectName    { get; set; } // varchar(255)
		[Column,    Nullable] public string    EmployeeId     { get; set; } // varchar(36)
		[Column,    Nullable] public string    EmployeeName   { get; set; } // varchar(255)
	}

	/// <summary>
	/// Danh mục Kho
	/// </summary>
	[Serializable]
	[Table("WareHouse")]
	public partial class WareHouse : BaseEntity, ILocalizedEntity
	{
		/// <summary>
		/// Mã kho
		/// </summary>
		[Column, NotNull    ] public string Code        { get; set; } // varchar(255)
		/// <summary>
		/// Tên kho
		/// </summary>
		[Column, NotNull    ] public string Name        { get; set; } // varchar(100)
		/// <summary>
		/// Địa chỉ
		/// </summary>
		[Column,    Nullable] public string Address     { get; set; } // varchar(255)
		/// <summary>
		/// Mô tả
		/// </summary>
		[Column,    Nullable] public string Description { get; set; } // varchar(255)
		/// <summary>
		/// fk Id của kho cha
		/// </summary>
		[Column,    Nullable] public string ParentId    { get; set; } // varchar(36)
		/// <summary>
		/// HearachyID dạng path để hỗ trợ query dữ liệu dạng tree
		/// </summary>
		[Column,    Nullable] public string Path        { get; set; } // varchar(255)
		/// <summary>
		/// Ngừng theo dõi
		/// </summary>
		[Column, NotNull    ] public bool   Inactive    { get; set; } // bit(1)

		#region Associations

		/// <summary>
		/// FK_Audits_PK_WareHouse_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="WareHouseId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Audit> Audits { get; set; }

		/// <summary>
		/// FK_BeginningWareHouses_PK_WareHouse_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="WareHouseId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<BeginningWareHouse> BeginningWareHouses { get; set; }

		/// <summary>
		/// FK_ToWareHouse_Outwards_PK_ToWareHouse_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ToWareHouseId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Outward> ToWareHouse_Outwards { get; set; }

		/// <summary>
		/// FK_Warehouse_Outwards_PK_WareHouse_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="WareHouseID", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Outward> Warehouse_Outwards { get; set; }

		/// <summary>
		/// FK_WareHouseInwards_PK_WareHouse_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="WareHouseID", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Inward> WareHouseInwards { get; set; }

		/// <summary>
		/// FK_WareHouseLimits_PK_WareHouse_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="WareHouseId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<WareHouseLimit> WareHouseLimits { get; set; }

		#endregion
	}

	/// <summary>
	/// Bảng tổng hợp tồn kho
	/// </summary>
	[Serializable]
	[Table("WarehouseBalance")]
	public partial class WarehouseBalance : BaseEntity
	{
		/// <summary>
		/// fk vật tư
		/// </summary>
		[Column, NotNull] public string  ItemId      { get; set; } // varchar(36)
		/// <summary>
		/// fk kho
		/// </summary>
		[Column, NotNull] public string  WarehouseId { get; set; } // varchar(36)
		/// <summary>
		/// Số lượng tồn
		/// </summary>
		[Column, NotNull] public int     Quantity    { get; set; } // int
		/// <summary>
		/// Giá trị tồn
		/// </summary>
		[Column, NotNull] public decimal Amount      { get; set; } // decimal(15,2)
	}

	/// <summary>
	/// Danh mục vật tư
	/// </summary>
	[Serializable]
	[Table("WareHouseItem")]
	public partial class WareHouseItem : BaseEntity, ILocalizedEntity
	{
		/// <summary>
		/// Mã vật tư
		/// </summary>
		[Column, NotNull    ] public string Code        { get; set; } // varchar(20)
		/// <summary>
		/// Tên vật tư
		/// </summary>
		[Column, NotNull    ] public string Name        { get; set; } // varchar(100)
		/// <summary>
		/// Loại vật tư
		/// </summary>
		[Column,    Nullable] public string CategoryID  { get; set; } // varchar(36)
		/// <summary>
		/// Mô tả
		/// </summary>
		[Column,    Nullable] public string Description { get; set; } // varchar(255)
		/// <summary>
		/// Nhà cung cấp
		/// </summary>
		[Column,    Nullable] public string VendorID    { get; set; } // varchar(36)
		/// <summary>
		/// Tên nhà cung cấp
		/// </summary>
		[Column,    Nullable] public string VendorName  { get; set; } // varchar(255)
		/// <summary>
		/// Nước sản xuất
		/// </summary>
		[Column,    Nullable] public string Country     { get; set; } // varchar(255)
		[Column, NotNull    ] public string UnitId      { get; set; } // varchar(36)
		/// <summary>
		/// Ngừng theo dõi
		/// </summary>
		[Column, NotNull    ] public bool   Inactive    { get; set; } // bit(1)

		#region Associations

		/// <summary>
		/// FK_AuditDetails_PK_WareHouseItem_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ItemId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AuditDetail> AuditDetails { get; set; }

		/// <summary>
		/// FK_AuditDetailSerials_PK_WareHouseItem_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ItemId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AuditDetailSerial> AuditDetailSerials { get; set; }

		/// <summary>
		/// FK_BeginningWareHouses_PK_WareHouseItem_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ItemId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<BeginningWareHouse> BeginningWareHouses { get; set; }

		/// <summary>
		/// FK_InwardDetails_PK_WareHouseItem_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ItemId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InwardDetail> InwardDetails { get; set; }

		/// <summary>
		/// FK_OutwardDetails_PK_WareHouseItem_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ItemId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutwardDetail> OutwardDetails { get; set; }

		/// <summary>
		/// FK_SerialWareHouses_PK_WareHouseItem_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ItemId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SerialWareHouse> SerialWareHouses { get; set; }

		/// <summary>
		/// FK_WareHouseItems_PK_Unit
		/// </summary>
		[Association(ThisKey="UnitId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseItems_PK_Unit", BackReferenceName="WareHouseItems")]
		public Unit Unit { get; set; }

		/// <summary>
		/// FK_WareHouseItems_PK_Vendor
		/// </summary>
		[Association(ThisKey="VendorID", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseItems_PK_Vendor", BackReferenceName="WareHouseItems")]
		public Vendor Vendor { get; set; }

		/// <summary>
		/// FK_WareHouseItems_PK_WareHouseItemCategory
		/// </summary>
		[Association(ThisKey="CategoryID", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseItems_PK_WareHouseItemCategory", BackReferenceName="WareHouseItems")]
		public WareHouseItemCategory WareHouseItemCategory { get; set; }

		/// <summary>
		/// FK_WareHouseItemUnits_PK_WareHouseItem_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ItemId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<WareHouseItemUnit> WareHouseItemUnits { get; set; }

		/// <summary>
		/// FK_WareHouseLimits_PK_WareHouseItem_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ItemId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<WareHouseLimit> WareHouseLimits { get; set; }

		#endregion
	}

	/// <summary>
	/// Loại vật tư
	/// </summary>
	[Serializable]
	[Table("WareHouseItemCategory")]
	public partial class WareHouseItemCategory : BaseEntity, ILocalizedEntity
	{
		/// <summary>
		/// Mã loại
		/// </summary>
		[Column, NotNull    ] public string Code        { get; set; } // varchar(20)
		/// <summary>
		/// Tên loại
		/// </summary>
		[Column, NotNull    ] public string Name        { get; set; } // varchar(100)
		/// <summary>
		/// Thuộc loại (Id loại cha)
		/// </summary>
		[Column,    Nullable] public string ParentId    { get; set; } // varchar(36)
		/// <summary>
		/// Path dạng cây nhị phân 1/2/1 -&gt; Query đệ quy cho nó nhanh
		/// </summary>
		[Column,    Nullable] public string Path        { get; set; } // varchar(255)
		[Column,    Nullable] public string Description { get; set; } // varchar(255)
		/// <summary>
		/// Ngừng theo dõi
		/// </summary>
		[Column, NotNull    ] public bool   Inactive    { get; set; } // bit(1)

		#region Associations

		/// <summary>
		/// FK_WareHouseItemCategories_PK_Parent
		/// </summary>
		[Association(ThisKey="ParentId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseItemCategories_PK_Parent", BackReferenceName="WareHouseItemCategories")]
		public WareHouseItemCategory Parent { get; set; }

		/// <summary>
		/// FK_WareHouseItemCategories_PK_Parent_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ParentId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<WareHouseItemCategory> WareHouseItemCategories { get; set; }

		/// <summary>
		/// FK_WareHouseItems_PK_WareHouseItemCategory_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CategoryID", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<WareHouseItem> WareHouseItems { get; set; }

		#endregion
	}

	/// <summary>
	/// Đơn vị tính
	/// </summary>
	[Serializable]
	[Table("WareHouseItemUnit")]
	public partial class WareHouseItemUnit : BaseEntity
	{
		/// <summary>
		/// Id của vật tư
		/// </summary>
		[Column, NotNull    ] public string ItemId      { get; set; } // varchar(36)
		/// <summary>
		/// fk id đơn vị tính
		/// </summary>
		[Column, NotNull    ] public string UnitId      { get; set; } // varchar(36)
		/// <summary>
		/// Tên đơn vị tính, lưu dư thừa để hiển thị
		/// </summary>
		[Column,    Nullable] public string UnitName    { get; set; } // varchar(255)
		/// <summary>
		/// Tỷ lệ quy đổi
		/// </summary>
		[Column, NotNull    ] public int    ConvertRate { get; set; } // int
		/// <summary>
		/// là đơn vị chính = true, không phải đơn vị chính thì = false
		/// </summary>
		[Column, NotNull    ] public bool   IsPrimary   { get; set; } // bit(1)

		#region Associations

		/// <summary>
		/// FK_WareHouseItemUnits_PK_Unit
		/// </summary>
		[Association(ThisKey="UnitId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseItemUnits_PK_Unit", BackReferenceName="WareHouseItemUnits")]
		public Unit Unit { get; set; }

		/// <summary>
		/// FK_WareHouseItemUnits_PK_WareHouseItem
		/// </summary>
		[Association(ThisKey="ItemId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseItemUnits_PK_WareHouseItem", BackReferenceName="WareHouseItemUnits")]
		public WareHouseItem WareHouseItem { get; set; }

		#endregion
	}

	/// <summary>
	/// Định mức tồn kho
	/// </summary>
	[Serializable]
	[Table("WareHouseLimit")]
	public partial class WareHouseLimit : BaseEntity
	{
		/// <summary>
		/// Kho
		/// </summary>
		[Column, NotNull    ] public string   WareHouseId  { get; set; } // varchar(36)
		/// <summary>
		/// Vật tư
		/// </summary>
		[Column, NotNull    ] public string   ItemId       { get; set; } // varchar(36)
		/// <summary>
		/// Đơn vị tính
		/// </summary>
		[Column, NotNull    ] public string   UnitId       { get; set; } // varchar(36)
		[Column,    Nullable] public string   UnitName     { get; set; } // varchar(255)
		/// <summary>
		/// Tồn tối thiểu
		/// </summary>
		[Column, NotNull    ] public decimal  MinQuantity  { get; set; } // decimal(15,2)
		/// <summary>
		/// Tồn tối đa
		/// </summary>
		[Column, NotNull    ] public decimal  MaxQuantity  { get; set; } // decimal(15,2)
		/// <summary>
		/// Ngày tạo
		/// </summary>
		[Column, NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		/// <summary>
		/// Người tạo
		/// </summary>
		[Column,    Nullable] public string   CreatedBy    { get; set; } // varchar(100)
		/// <summary>
		/// Ngày sửa
		/// </summary>
		[Column, NotNull    ] public DateTime ModifiedDate { get; set; } // timestamp
		/// <summary>
		/// Người sửa
		/// </summary>
		[Column,    Nullable] public string   ModifiedBy   { get; set; } // varchar(100)

		#region Associations

		/// <summary>
		/// FK_WareHouseLimits_PK_Unit
		/// </summary>
		[Association(ThisKey="UnitId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseLimits_PK_Unit", BackReferenceName="WareHouseLimits")]
		public Unit Unit { get; set; }

		/// <summary>
		/// FK_WareHouseLimits_PK_WareHouse
		/// </summary>
		[Association(ThisKey="WareHouseId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseLimits_PK_WareHouse", BackReferenceName="WareHouseLimits")]
		public WareHouse WareHouse { get; set; }

		/// <summary>
		/// FK_WareHouseLimits_PK_WareHouseItem
		/// </summary>
		[Association(ThisKey="ItemId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_WareHouseLimits_PK_WareHouseItem", BackReferenceName="WareHouseLimits")]
		public WareHouseItem WareHouseItem { get; set; }

		#endregion
	}

	[Serializable]
	[Table("WareHouseUser")]
	public partial class WareHouseUser : BaseEntity
	{
		[Column, NotNull    ] public string   WarehouseId { get; set; } // varchar(36)
		[Column, NotNull    ] public string   UserId      { get; set; } // varchar(255)
		[Column, NotNull    ] public DateTime CreatedDate { get; set; } // datetime
		[Column,    Nullable] public string   CreatedBy   { get; set; } // varchar(100)
	}

	public static partial class SqlFunctions
	{
		#region CheckNull

		[Sql.Function(Name="CheckNull", ServerSideOnly=true)]
		public static int? CheckNull(int? tem)
		{
			throw new InvalidOperationException();
		}

		#endregion
	}

	public static partial class TableExtensions
	{
		public static AccObject Find(this ITable<AccObject> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static AdminRoleWareHouse Find(this ITable<AdminRoleWareHouse> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Audit Find(this ITable<Audit> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static AuditCouncil Find(this ITable<AuditCouncil> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static AuditDetail Find(this ITable<AuditDetail> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static AuditDetailSerial Find(this ITable<AuditDetailSerial> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BeginningWareHouse Find(this ITable<BeginningWareHouse> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Inward Find(this ITable<Inward> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static InwardDetail Find(this ITable<InwardDetail> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Outward Find(this ITable<Outward> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static OutwardDetail Find(this ITable<OutwardDetail> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SerialWareHouse Find(this ITable<SerialWareHouse> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Unit Find(this ITable<Unit> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Vendor Find(this ITable<Vendor> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WareHouse Find(this ITable<WareHouse> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WarehouseBalance Find(this ITable<WarehouseBalance> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WareHouseItem Find(this ITable<WareHouseItem> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WareHouseItemCategory Find(this ITable<WareHouseItemCategory> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WareHouseItemUnit Find(this ITable<WareHouseItemUnit> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WareHouseLimit Find(this ITable<WareHouseLimit> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WareHouseUser Find(this ITable<WareHouseUser> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}

#pragma warning restore 1591
