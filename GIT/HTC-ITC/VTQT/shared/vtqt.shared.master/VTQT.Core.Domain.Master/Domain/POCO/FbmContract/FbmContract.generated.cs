//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Configuration;
using LinqToDB.Data;
using LinqToDB.Mapping;

using VTQT.Core.Domain.Apps;
using VTQT.Core.Domain.Localization;

namespace VTQT.Core.Domain.FbmContract
{
	/// <summary>
	/// Database       : ITC_FBM_Contracts
	/// Data Source    : 192.168.100.32
	/// Server Version : 5.7.33-36-57-log
	/// </summary>
	public partial class FbmContractDataConnection : LinqToDB.Data.DataConnection
	{
		public ITable<__EFMigrationsHistory>             __EFMigrationsHistories            { get { return this.GetTable<__EFMigrationsHistory>(); } }
		public ITable<AttachmentFile>                    AttachmentFiles                    { get { return this.GetTable<AttachmentFile>(); } }
		public ITable<BrasInformation>                   BrasInformation                    { get { return this.GetTable<BrasInformation>(); } }
		public ITable<CardType>                          CardTypes                          { get { return this.GetTable<CardType>(); } }
		public ITable<ChannelGroup>                      ChannelGroups                      { get { return this.GetTable<ChannelGroup>(); } }
		public ITable<ChannelPriceBusTable>              ChannelPriceBusTables              { get { return this.GetTable<ChannelPriceBusTable>(); } }
		public ITable<ContactInfo>                       ContactInfos                       { get { return this.GetTable<ContactInfo>(); } }
		public ITable<ContractContent>                   ContractContents                   { get { return this.GetTable<ContractContent>(); } }
		public ITable<ContractEquipment>                 ContractEquipments                 { get { return this.GetTable<ContractEquipment>(); } }
		public ITable<ContractForm>                      ContractForms                      { get { return this.GetTable<ContractForm>(); } }
		public ITable<Contractor>                        Contractors                        { get { return this.GetTable<Contractor>(); } }
		public ITable<ContractorProperty>                ContractorProperties               { get { return this.GetTable<ContractorProperty>(); } }
		public ITable<ContractSharingRevenue>            ContractSharingRevenues            { get { return this.GetTable<ContractSharingRevenue>(); } }
		public ITable<ContractSharingRevenueLine>        ContractSharingRevenueLines        { get { return this.GetTable<ContractSharingRevenueLine>(); } }
		public ITable<ContractStatus>                    ContractStatus                     { get { return this.GetTable<ContractStatus>(); } }
		public ITable<ContractTotalByCurrency>           ContractTotalByCurrencies          { get { return this.GetTable<ContractTotalByCurrency>(); } }
		public ITable<CurrencyUnit>                      CurrencyUnits                      { get { return this.GetTable<CurrencyUnit>(); } }
		public ITable<EquipmentPicture>                  EquipmentPictures                  { get { return this.GetTable<EquipmentPicture>(); } }
		public ITable<EquipmentStatus>                   EquipmentStatuses                  { get { return this.GetTable<EquipmentStatus>(); } }
		public ITable<EquipmentType>                     EquipmentTypes                     { get { return this.GetTable<EquipmentType>(); } }
		public ITable<ExchangeRate>                      ExchangeRates                      { get { return this.GetTable<ExchangeRate>(); } }
		public ITable<FlexiblePricingType>               FlexiblePricingTypes               { get { return this.GetTable<FlexiblePricingType>(); } }
		public ITable<InContract>                        InContracts                        { get { return this.GetTable<InContract>(); } }
		public ITable<InContractService>                 InContractServices                 { get { return this.GetTable<InContractService>(); } }
		public ITable<InContractStatus>                  InContractStatus                   { get { return this.GetTable<InContractStatus>(); } }
		public ITable<InContractTax>                     InContractTaxes                    { get { return this.GetTable<InContractTax>(); } }
		public ITable<InContractType>                    InContractTypes                    { get { return this.GetTable<InContractType>(); } }
		public ITable<IntegrationEventLog>               IntegrationEventLogs               { get { return this.GetTable<IntegrationEventLog>(); } }
		public ITable<ManagementBusinessBlock>           ManagementBusinessBlocks           { get { return this.GetTable<ManagementBusinessBlock>(); } }
		public ITable<MarketArea>                        MarketAreas                        { get { return this.GetTable<MarketArea>(); } }
		public ITable<OutContract>                       OutContracts                       { get { return this.GetTable<OutContract>(); } }
		public ITable<OutContractServicePackage>         OutContractServicePackages         { get { return this.GetTable<OutContractServicePackage>(); } }
		public ITable<OutContractServicePackageClearing> OutContractServicePackageClearings { get { return this.GetTable<OutContractServicePackageClearing>(); } }
		public ITable<OutContractServicePackageStatus>   OutContractServicePackageStatuses  { get { return this.GetTable<OutContractServicePackageStatus>(); } }
		public ITable<OutContractServicePackageTax>      OutContractServicePackageTaxes     { get { return this.GetTable<OutContractServicePackageTax>(); } }
		public ITable<OutContractStatus>                 OutContractStatus                  { get { return this.GetTable<OutContractStatus>(); } }
		public ITable<OutContractType>                   OutContractTypes                   { get { return this.GetTable<OutContractType>(); } }
		public ITable<OutputChannelPoint>                OutputChannelPoints                { get { return this.GetTable<OutputChannelPoint>(); } }
		public ITable<Picture>                           Pictures                           { get { return this.GetTable<Picture>(); } }
		public ITable<PointType>                         PointTypes                         { get { return this.GetTable<PointType>(); } }
		public ITable<Project>                           Projects                           { get { return this.GetTable<Project>(); } }
		public ITable<ProjectTechnician>                 ProjectTechnicians                 { get { return this.GetTable<ProjectTechnician>(); } }
		public ITable<Promotion>                         Promotions                         { get { return this.GetTable<Promotion>(); } }
		public ITable<PromotionDetail>                   PromotionDetails                   { get { return this.GetTable<PromotionDetail>(); } }
		public ITable<PromotionForContract>              PromotionForContracts              { get { return this.GetTable<PromotionForContract>(); } }
		public ITable<PromotionProduct>                  PromotionProducts                  { get { return this.GetTable<PromotionProduct>(); } }
		public ITable<PromotionType>                     PromotionTypes                     { get { return this.GetTable<PromotionType>(); } }
		public ITable<PromotionValueType>                PromotionValueTypes                { get { return this.GetTable<PromotionValueType>(); } }
		public ITable<RadiusServerInformation>           RadiusServerInformation            { get { return this.GetTable<RadiusServerInformation>(); } }
		public ITable<ReasonTypeContractTermination>     ReasonTypeContractTerminations     { get { return this.GetTable<ReasonTypeContractTermination>(); } }
		public ITable<Salesman>                          Salesmen                           { get { return this.GetTable<Salesman>(); } }
		public ITable<Service>                           Services                           { get { return this.GetTable<Service>(); } }
		public ITable<ServiceGroup>                      ServiceGroups                      { get { return this.GetTable<ServiceGroup>(); } }
		public ITable<ServiceLevelAgreement>             ServiceLevelAgreements             { get { return this.GetTable<ServiceLevelAgreement>(); } }
		public ITable<ServicePackage>                    ServicePackages                    { get { return this.GetTable<ServicePackage>(); } }
		public ITable<ServicePackagePrice>               ServicePackagePrices               { get { return this.GetTable<ServicePackagePrice>(); } }
		public ITable<ServicePackageRadiusService>       ServicePackageRadiusServices       { get { return this.GetTable<ServicePackageRadiusService>(); } }
		public ITable<ServicePackageSuspensionTime>      ServicePackageSuspensionTimes      { get { return this.GetTable<ServicePackageSuspensionTime>(); } }
		public ITable<TaxCategory>                       TaxCategories                      { get { return this.GetTable<TaxCategory>(); } }
		public ITable<TemporaryPayingContract>           TemporaryPayingContracts           { get { return this.GetTable<TemporaryPayingContract>(); } }
		public ITable<Transaction>                       Transactions                       { get { return this.GetTable<Transaction>(); } }
		public ITable<TransactionChannelPoint>           TransactionChannelPoints           { get { return this.GetTable<TransactionChannelPoint>(); } }
		public ITable<TransactionChannelTax>             TransactionChannelTaxes            { get { return this.GetTable<TransactionChannelTax>(); } }
		public ITable<TransactionEquipment>              TransactionEquipments              { get { return this.GetTable<TransactionEquipment>(); } }
		public ITable<TransactionPriceBusTable>          TransactionPriceBusTables          { get { return this.GetTable<TransactionPriceBusTable>(); } }
		public ITable<TransactionPromotionForContract>   TransactionPromotionForContracts   { get { return this.GetTable<TransactionPromotionForContract>(); } }
		public ITable<TransactionReason>                 TransactionReasons                 { get { return this.GetTable<TransactionReason>(); } }
		public ITable<TransactionServicePackage>         TransactionServicePackages         { get { return this.GetTable<TransactionServicePackage>(); } }
		public ITable<TransactionSLA>                    TransactionSLAs                    { get { return this.GetTable<TransactionSLA>(); } }
		public ITable<TransactionStatus>                 TransactionStatuses                { get { return this.GetTable<TransactionStatus>(); } }
		public ITable<TransactionType>                   TransactionTypes                   { get { return this.GetTable<TransactionType>(); } }
		public ITable<UnitOfMeasurement>                 UnitOfMeasurements                 { get { return this.GetTable<UnitOfMeasurement>(); } }

		public FbmContractDataConnection()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public FbmContractDataConnection(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public FbmContractDataConnection(LinqToDbConnectionOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public FbmContractDataConnection(LinqToDbConnectionOptions<FbmContractDataConnection> options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Serializable]
	[Table("__EFMigrationsHistory")]
	public partial class __EFMigrationsHistory : BaseIntEntity
	{
		[PrimaryKey, NotNull] public string MigrationId    { get; set; } // varchar(95)
		[Column,     NotNull] public string ProductVersion { get; set; } // varchar(32)
	}

	[Serializable]
	[Table("AttachmentFiles")]
	public partial class AttachmentFile : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public int?      InContractId     { get; set; } // int(11)
		[Column,    Nullable] public int?      OutContractId    { get; set; } // int(11)
		[Column,    Nullable] public int?      TransactionId    { get; set; } // int(11)
		[Column,    Nullable] public string    ResourceStorage  { get; set; } // longtext
		[Column,    Nullable] public string    Name             { get; set; } // longtext
		[Column,    Nullable] public string    FileName         { get; set; } // longtext
		[Column,    Nullable] public string    FilePath         { get; set; } // longtext
		[Column, NotNull    ] public long      Size             { get; set; } // bigint(20)
		[Column, NotNull    ] public int       FileType         { get; set; } // int(11)
		[Column,    Nullable] public string    Extension        { get; set; } // longtext
		[Column,    Nullable] public string    RedirectLink     { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_AttachmentFiles_InContracts_InContractId
		/// </summary>
		[Association(ThisKey="InContractId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_AttachmentFiles_InContracts_InContractId", BackReferenceName="FK_AttachmentFiles_InContracts_InContractId_BackReferences")]
		public InContract AttachmentFiles_InContracts_InContractId { get; set; }

		/// <summary>
		/// FK_AttachmentFiles_OutContracts_OutContractId
		/// </summary>
		[Association(ThisKey="OutContractId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_AttachmentFiles_OutContracts_OutContractId", BackReferenceName="FK_AttachmentFiles_OutContracts_OutContractId_BackReferences")]
		public OutContract AttachmentFiles_OutContracts_OutContractId { get; set; }

		/// <summary>
		/// FK_AttachmentFiles_Transactions_TransactionId
		/// </summary>
		[Association(ThisKey="TransactionId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_AttachmentFiles_Transactions_TransactionId", BackReferenceName="FK_AttachmentFiles_Transactions_TransactionId_BackReferences")]
		public Transaction AttachmentFiles_Transactions_TransactionId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("BrasInformation")]
	public partial class BrasInformation : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    IP               { get; set; } // longtext
		[Column, NotNull    ] public int       ManualAPIPort    { get; set; } // int(11)
		[Column,    Nullable] public int?      SSHPort          { get; set; } // int(11)
		[Column,    Nullable] public string    Name             { get; set; } // longtext
		[Column,    Nullable] public string    UserName         { get; set; } // longtext
		[Column,    Nullable] public string    Password         { get; set; } // longtext
		[Column,    Nullable] public int?      ProjectId        { get; set; } // int(11)
		[Column,    Nullable] public string    Description      { get; set; } // longtext
	}

	[Serializable]
	[Table("CardTypes")]
	public partial class CardType : BaseIntEntity
	{
		[Column, NotNull] public string Name { get; set; } // varchar(200)
	}

	[Serializable]
	[Table("ChannelGroups")]
	public partial class ChannelGroup : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    ChannelGroupName { get; set; } // longtext
		[Column,    Nullable] public string    ChannelGroupCode { get; set; } // longtext
		[Column,    Nullable] public string    Description      { get; set; } // longtext
		[Column, NotNull    ] public int       ChannelGroupType { get; set; } // int(11)
		[Column,    Nullable] public string    ContractorIdGuid { get; set; } // longtext
	}

	[Serializable]
	[Table("ChannelPriceBusTables")]
	public partial class ChannelPriceBusTable : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture               { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate           { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate           { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy             { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy             { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive              { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted             { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder          { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath      { get; set; } // longtext
		[Column,    Nullable] public string    CurrencyUnitCode      { get; set; } // longtext
		[Column,    Nullable] public decimal?  UsageValueFrom        { get; set; } // decimal(65,30)
		[Column,    Nullable] public decimal?  UsageBaseUomValueFrom { get; set; } // decimal(65,30)
		[Column,    Nullable] public int?      UsageValueFromUomId   { get; set; } // int(11)
		[Column,    Nullable] public decimal?  UsageValueTo          { get; set; } // decimal(65,30)
		[Column,    Nullable] public decimal?  UsageBaseUomValueTo   { get; set; } // decimal(65,30)
		[Column,    Nullable] public int?      UsageValueToUomId     { get; set; } // int(11)
		[Column, NotNull    ] public decimal   BasedPriceValue       { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   PriceValue            { get; set; } // decimal(65,30)
		[Column, NotNull    ] public int       PriceUnitUomId        { get; set; } // int(11)
		[Column,    Nullable] public bool?     IsDomestic            { get; set; } // tinyint(1)
		[Column,    Nullable] public int?      ChannelId             { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_ChannelPriceBusTables_OutContractServicePackages_ChannelId
		/// </summary>
		[Association(ThisKey="ChannelId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ChannelPriceBusTables_OutContractServicePackages_ChannelId", BackReferenceName="FK_ChannelPriceBusTables_OutContractServicePackages_ChannelId_BackReferences")]
		public OutContractServicePackage ChannelPriceBusTables_OutContractServicePackages_ChannelId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ContactInfos")]
	public partial class ContactInfo : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public int?      InContractId     { get; set; } // int(11)
		[Column,    Nullable] public int?      OutContractId    { get; set; } // int(11)
		[Column,    Nullable] public string    Name             { get; set; } // varchar(512)
		[Column,    Nullable] public string    PhoneNumber      { get; set; } // varchar(10)
		[Column,    Nullable] public string    Email            { get; set; } // varchar(256)

		#region Associations

		/// <summary>
		/// FK_ContactInfos_InContracts_InContractId
		/// </summary>
		[Association(ThisKey="InContractId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContactInfos_InContracts_InContractId", BackReferenceName="FK_ContactInfos_InContracts_InContractId_BackReferences")]
		public InContract ContactInfos_InContracts_InContractId { get; set; }

		/// <summary>
		/// FK_ContactInfos_OutContracts_OutContractId
		/// </summary>
		[Association(ThisKey="OutContractId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContactInfos_OutContracts_OutContractId", BackReferenceName="FK_ContactInfos_OutContracts_OutContractId_BackReferences")]
		public OutContract ContactInfos_OutContracts_OutContractId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ContractContents")]
	public partial class ContractContent : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                 { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate             { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate             { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy               { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy               { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted               { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder            { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath        { get; set; } // longtext
		[Column,    Nullable] public int?      ContractFormId          { get; set; } // int(11)
		[Column,    Nullable] public int?      OutContractId           { get; set; } // int(11)
		[Column,    Nullable] public int?      InContractId            { get; set; } // int(11)
		[Column,    Nullable] public string    Content                 { get; set; } // longtext
		[Column,    Nullable] public int?      DigitalSignatureId      { get; set; } // int(11)
		[Column,    Nullable] public int?      ContractFormSignatureId { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_ContractContents_InContracts_InContractId
		/// </summary>
		[Association(ThisKey="InContractId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractContents_InContracts_InContractId", BackReferenceName="FK_ContractContents_InContracts_InContractId_BackReferences")]
		public InContract ContractContents_InContracts_InContractId { get; set; }

		/// <summary>
		/// FK_ContractContents_OutContracts_OutContractId
		/// </summary>
		[Association(ThisKey="OutContractId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractContents_OutContracts_OutContractId", BackReferenceName="FK_ContractContents_OutContracts_OutContractId_BackReferences")]
		public OutContract ContractContents_OutContracts_OutContractId { get; set; }

		/// <summary>
		/// FK_ContractContents_Pictures_ContractFormSignatureId
		/// </summary>
		[Association(ThisKey="ContractFormSignatureId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractContents_Pictures_ContractFormSignatureId", BackReferenceName="FK_ContractContents_Pictures_ContractFormSignatureId_BackReferences")]
		public Picture ContractContents_Pictures_ContractFormSignatureId { get; set; }

		/// <summary>
		/// FK_ContractContents_Pictures_DigitalSignatureId
		/// </summary>
		[Association(ThisKey="DigitalSignatureId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractContents_Pictures_DigitalSignatureId", BackReferenceName="FK_ContractContents_Pictures_DigitalSignatureId_BackReferences")]
		public Picture ContractContents_Pictures_DigitalSignatureId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ContractEquipments")]
	public partial class ContractEquipment : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate            { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate            { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy              { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy              { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive               { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted              { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder           { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath       { get; set; } // longtext
		[Column, NotNull    ] public int       CurrencyUnitId         { get; set; } // int(11)
		[Column,    Nullable] public string    CurrencyUnitCode       { get; set; } // longtext
		[Column, NotNull    ] public int       OutputChannelPointId   { get; set; } // int(11)
		[Column, NotNull    ] public int       OutContractPackageId   { get; set; } // int(11)
		[Column,    Nullable] public string    EquipmentName          { get; set; } // longtext
		[Column,    Nullable] public string    EquipmentPictureUrl    { get; set; } // longtext
		[Column,    Nullable] public string    EquipmentUom           { get; set; } // longtext
		[Column, NotNull    ] public decimal   UnitPrice              { get; set; } // decimal(65,30)
		[Column, NotNull    ] public float     ExaminedUnit           { get; set; } // float
		[Column, NotNull    ] public float     RealUnit               { get; set; } // float
		[Column, NotNull    ] public float     ReclaimedUnit          { get; set; } // float
		[Column, NotNull    ] public bool      IsInSurveyPlan         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsFree                 { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      HasToReclaim           { get; set; } // tinyint(1)
		[Column,    Nullable] public string    SerialCode             { get; set; } // longtext
		[Column,    Nullable] public string    MacAddressCode         { get; set; } // longtext
		[Column,    Nullable] public string    DeviceCode             { get; set; } // longtext
		[Column,    Nullable] public string    Manufacturer           { get; set; } // longtext
		[Column,    Nullable] public string    Specifications         { get; set; } // longtext
		[Column, NotNull    ] public int       StatusId               { get; set; } // int(11)
		[Column, NotNull    ] public int       EquipmentId            { get; set; } // int(11)
		[Column,    Nullable] public int?      EquipmentStatusId      { get; set; } // int(11)
		[Column, NotNull    ] public decimal   SubTotal               { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   GrandTotal             { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   ExaminedSubTotal       { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   ExaminedGrandTotal     { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   RealSubTotal           { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   RealGrandTotal         { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   ReclaimedSubTotal      { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   ReclaimedGrandTotal    { get; set; } // decimal(65,30)
		[Column,    Nullable] public int?      TransactionEquipmentId { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_ContractEquipments_EquipmentStatuses_EquipmentStatusId
		/// </summary>
		[Association(ThisKey="EquipmentStatusId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractEquipments_EquipmentStatuses_EquipmentStatusId", BackReferenceName="FK_ContractEquipments_EquipmentStatuses_EquipmentStatusId_BackReferences")]
		public EquipmentStatus ContractEquipments_EquipmentStatuses_EquipmentStatusId { get; set; }

		/// <summary>
		/// FK_ContractEquipments_OutputChannelPoints_OutputChannelPointId
		/// </summary>
		[Association(ThisKey="OutputChannelPointId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractEquipments_OutputChannelPoints_OutputChannelPointId", BackReferenceName="FK_ContractEquipments_OutputChannelPoints_OutputChannelPointId_BackReferences")]
		public OutputChannelPoint ContractEquipments_OutputChannelPoints_OutputChannelPointId { get; set; }

		/// <summary>
		/// FK_ContractEquipments_TransactionEquipments_TransactionEquipmen~
		/// </summary>
		[Association(ThisKey="TransactionEquipmentId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractEquipments_TransactionEquipments_TransactionEquipmen~", BackReferenceName="FK_ContractEquipments_TransactionEquipments_TransactionEquipmen__BackReferences")]
		public TransactionEquipment ContractEquipments_TransactionEquipments_TransactionEquipmen_ { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ContractForms")]
	public partial class ContractForm : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture            { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate        { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate        { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy          { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy          { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive           { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted          { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder       { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath   { get; set; } // longtext
		[Column,    Nullable] public string    Name               { get; set; } // longtext
		[Column,    Nullable] public string    Content            { get; set; } // longtext
		[Column, NotNull    ] public int       ServiceId          { get; set; } // int(11)
		[Column,    Nullable] public int?      DigitalSignatureId { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_ContractForms_Pictures_DigitalSignatureId
		/// </summary>
		[Association(ThisKey="DigitalSignatureId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractForms_Pictures_DigitalSignatureId", BackReferenceName="FK_ContractForms_Pictures_DigitalSignatureId_BackReferences")]
		public Picture ContractForms_Pictures_DigitalSignatureId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("Contractors")]
	public partial class Contractor : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                     { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                   { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                   { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                    { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath            { get; set; } // longtext
		[Column,    Nullable] public string    IdentityGuid                { get; set; } // varchar(68)
		[Column,    Nullable] public string    ContractorFullName          { get; set; } // longtext
		[Column,    Nullable] public string    ContractorShortName         { get; set; } // longtext
		[Column,    Nullable] public string    ContractorUserName          { get; set; } // longtext
		[Column,    Nullable] public string    ContractorCode              { get; set; } // longtext
		[Column,    Nullable] public string    ContractorPhone             { get; set; } // longtext
		[Column,    Nullable] public string    ContractorEmail             { get; set; } // longtext
		[Column,    Nullable] public string    ContractorFax               { get; set; } // longtext
		[Column,    Nullable] public string    AccountingCustomerCode      { get; set; } // varchar(256)
		[Column,    Nullable] public string    ContractorCity              { get; set; } // longtext
		[Column,    Nullable] public string    ContractorCityId            { get; set; } // longtext
		[Column,    Nullable] public string    ContractorDistrict          { get; set; } // longtext
		[Column,    Nullable] public string    ContractorDistrictId        { get; set; } // longtext
		[Column,    Nullable] public string    ContractorAddress           { get; set; } // longtext
		[Column,    Nullable] public string    ContractorIdNo              { get; set; } // longtext
		[Column,    Nullable] public string    ContractorTaxIdNo           { get; set; } // longtext
		[Column, NotNull    ] public bool      IsEnterprise                { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsBuyer                     { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsPartner                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsHTC                       { get; set; } // tinyint(1)
		[Column,    Nullable] public string    UserIdentityGuid            { get; set; } // longtext
		[Column,    Nullable] public string    ApplicationUserIdentityGuid { get; set; } // longtext
		[Column,    Nullable] public string    ParentId                    { get; set; } // longtext
		[Column,    Nullable] public string    Representative              { get; set; } // varchar(256)
		[Column,    Nullable] public string    Position                    { get; set; } // varchar(256)
		[Column,    Nullable] public string    AuthorizationLetter         { get; set; } // varchar(256)

		#region Associations

		/// <summary>
		/// FK_ContractorProperties_Contractors_ContractorId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ContractorId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractorProperty> FK_ContractorProperties_Contractors_ContractorId_BackReferences { get; set; }

		/// <summary>
		/// FK_InContracts_Contractors_ContractorHTCId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ContractorHTCId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InContract> FK_InContracts_Contractors_ContractorHTCId_BackReferences { get; set; }

		/// <summary>
		/// FK_InContracts_Contractors_ContractorId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ContractorId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InContract> FK_InContracts_Contractors_ContractorId_BackReferences { get; set; }

		/// <summary>
		/// FK_OutContracts_Contractors_ContractorHTCId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ContractorHTCId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutContract> FK_OutContracts_Contractors_ContractorHTCId_BackReferences { get; set; }

		/// <summary>
		/// FK_OutContracts_Contractors_ContractorId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ContractorId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutContract> FK_OutContracts_Contractors_ContractorId_BackReferences { get; set; }

		/// <summary>
		/// FK_OutContractServicePackages_Contractors_PaymentTargetId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="PaymentTargetId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutContractServicePackage> FK_OutContractServicePackages_Contractors_PaymentTargetId_BackReferences { get; set; }

		/// <summary>
		/// FK_TransactionServicePackages_Contractors_PaymentTargetId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="PaymentTargetId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<TransactionServicePackage> FK_TransactionServicePackages_Contractors_PaymentTargetId_BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ContractorProperties")]
	public partial class ContractorProperty : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                     { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                   { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                   { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                    { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath            { get; set; } // longtext
		[Column, NotNull    ] public int       ContractorId                { get; set; } // int(11)
		[Column,    Nullable] public int?      ContractorStructureId       { get; set; } // int(11)
		[Column,    Nullable] public int?      ContractorCategoryId        { get; set; } // int(11)
		[Column,    Nullable] public string    ContractorGroupIds          { get; set; } // longtext
		[Column,    Nullable] public string    ApplicationUserIdentityGuid { get; set; } // varchar(68)

		#region Associations

		/// <summary>
		/// FK_ContractorProperties_Contractors_ContractorId
		/// </summary>
		[Association(ThisKey="ContractorId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractorProperties_Contractors_ContractorId", BackReferenceName="FK_ContractorProperties_Contractors_ContractorId_BackReferences")]
		public Contractor ContractorProperties_Contractors_ContractorId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ContractSharingRevenues")]
	public partial class ContractSharingRevenue : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                     { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                   { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                   { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                    { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath            { get; set; } // longtext
		[Column,    Nullable] public string    Uid                         { get; set; } // longtext
		[Column,    Nullable] public string    ChannelTemporaryId          { get; set; } // longtext
		[Column,    Nullable] public string    ChannelName                 { get; set; } // longtext
		[Column,    Nullable] public string    ChannelCid                  { get; set; } // longtext
		[Column, NotNull    ] public int       InContractId                { get; set; } // int(11)
		[Column,    Nullable] public string    InContractCode              { get; set; } // varchar(256)
		[Column, NotNull    ] public int       OutChannelId                { get; set; } // int(11)
		[Column,    Nullable] public int?      OutContractId               { get; set; } // int(11)
		[Column,    Nullable] public string    OutContractCode             { get; set; } // varchar(256)
		[Column, NotNull    ] public int       SharingType                 { get; set; } // int(11)
		[Column, NotNull    ] public decimal   TotalAmount                 { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   TotalAmountAfterTax         { get; set; } // decimal(65,30)
		[Column, NotNull    ] public int       CostTerm                    { get; set; } // int(11)
		[Column, NotNull    ] public decimal   TaxMoney                    { get; set; } // decimal(65,30)
		[Column, NotNull    ] public int       CurrencyUnitId              { get; set; } // int(11)
		[Column,    Nullable] public string    CurrencyUnitCode            { get; set; } // longtext
		[Column,    Nullable] public int?      OutContractServicePackageId { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_ContractSharingRevenues_InContracts_InContractId
		/// </summary>
		[Association(ThisKey="InContractId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractSharingRevenues_InContracts_InContractId", BackReferenceName="FK_ContractSharingRevenues_InContracts_InContractId_BackReferences")]
		public InContract ContractSharingRevenues_InContracts_InContractId { get; set; }

		/// <summary>
		/// FK_ContractSharingRevenues_OutContracts_OutContractId
		/// </summary>
		[Association(ThisKey="OutContractId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractSharingRevenues_OutContracts_OutContractId", BackReferenceName="FK_ContractSharingRevenues_OutContracts_OutContractId_BackReferences")]
		public OutContract ContractSharingRevenues_OutContracts_OutContractId { get; set; }

		/// <summary>
		/// FK_ContractSharingRevenues_OutContractServicePackages_OutContra~
		/// </summary>
		[Association(ThisKey="OutContractServicePackageId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractSharingRevenues_OutContractServicePackages_OutContra~", BackReferenceName="FK_ContractSharingRevenues_OutContractServicePackages_OutContra__BackReferences")]
		public OutContractServicePackage ContractSharingRevenues_OutContractServicePackages_OutContra_ { get; set; }

		/// <summary>
		/// FK_ContractSharingRevenueLines_ContractSharingRevenues_CsrId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CsrId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractSharingRevenueLine> FK_ContractSharingRevenueLines_ContractSharingRevenues_CsrId_BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ContractSharingRevenueLines")]
	public partial class ContractSharingRevenueLine : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                 { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate             { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate             { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy               { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy               { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted               { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder            { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath        { get; set; } // longtext
		[Column,    Nullable] public string    CsrUid                  { get; set; } // longtext
		[Column,    Nullable] public int?      CsrId                   { get; set; } // int(11)
		[Column, NotNull    ] public int       Month                   { get; set; } // int(11)
		[Column, NotNull    ] public int       SharingType             { get; set; } // int(11)
		[Column,    Nullable] public int?      ServiceId               { get; set; } // int(11)
		[Column,    Nullable] public string    ServiceName             { get; set; } // varchar(256)
		[Column,    Nullable] public int?      ServicePackageId        { get; set; } // int(11)
		[Column,    Nullable] public string    ServicePackageName      { get; set; } // varchar(256)
		[Column,    Nullable] public int?      InServiceChannelId      { get; set; } // int(11)
		[Column,    Nullable] public int?      OutServiceChannelId     { get; set; } // int(11)
		[Column, NotNull    ] public float     SharedInstallFeePercent { get; set; } // float
		[Column, NotNull    ] public float     SharedPackagePercent    { get; set; } // float
		[Column, NotNull    ] public decimal   SharedFixedAmount       { get; set; } // decimal(65,30)
		[Column, NotNull    ] public int       PointType               { get; set; } // int(11)
		[Column,    Nullable] public string    PointTypeName           { get; set; } // longtext
		[Column,    Nullable] public string    OutContractCode         { get; set; } // longtext
		[Column,    Nullable] public string    CsMaintenanceUid        { get; set; } // longtext
		[Column, NotNull    ] public int       Year                    { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_ContractSharingRevenueLines_ContractSharingRevenues_CsrId
		/// </summary>
		[Association(ThisKey="CsrId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractSharingRevenueLines_ContractSharingRevenues_CsrId", BackReferenceName="FK_ContractSharingRevenueLines_ContractSharingRevenues_CsrId_BackReferences")]
		public ContractSharingRevenue ContractSharingRevenueLines_ContractSharingRevenues_CsrId { get; set; }

		/// <summary>
		/// FK_ContractSharingRevenueLines_OutContractServicePackages_OutSe~
		/// </summary>
		[Association(ThisKey="OutServiceChannelId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractSharingRevenueLines_OutContractServicePackages_OutSe~", BackReferenceName="FK_ContractSharingRevenueLines_OutContractServicePackages_OutSe__BackReferences")]
		public OutContractServicePackage ContractSharingRevenueLines_OutContractServicePackages_OutSe_ { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ContractStatus")]
	public partial class ContractStatus : BaseIntEntity
	{
		[Column, NotNull] public string Name { get; set; } // varchar(200)

		#region Associations

		/// <summary>
		/// FK_InContracts_ContractStatus_ContractStatusId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ContractStatusId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InContract> FK_InContracts_ContractStatus_ContractStatusId_BackReferences { get; set; }

		/// <summary>
		/// FK_OutContracts_ContractStatus_ContractStatusId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ContractStatusId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutContract> FK_OutContracts_ContractStatus_ContractStatusId_BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ContractTotalByCurrencies")]
	public partial class ContractTotalByCurrency : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture              { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate          { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate          { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy            { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy            { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive             { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted            { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder         { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath     { get; set; } // longtext
		[Column, NotNull    ] public int       CurrencyUnitId       { get; set; } // int(11)
		[Column,    Nullable] public string    CurrencyUnitCode     { get; set; } // longtext
		[Column,    Nullable] public int?      OutContractId        { get; set; } // int(11)
		[Column,    Nullable] public int?      InContractId         { get; set; } // int(11)
		[Column, NotNull    ] public decimal   PromotionTotalAmount { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   ServicePackageAmount { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   TotalTaxAmount       { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   InstallationFee      { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   OtherFee             { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   EquipmentAmount      { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   SubTotalBeforeTax    { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   SubTotal             { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   GrandTotalBeforeTax  { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   GrandTotal           { get; set; } // decimal(65,30)

		#region Associations

		/// <summary>
		/// FK_ContractTotalByCurrencies_InContracts_InContractId
		/// </summary>
		[Association(ThisKey="InContractId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractTotalByCurrencies_InContracts_InContractId", BackReferenceName="FK_ContractTotalByCurrencies_InContracts_InContractId_BackReferences")]
		public InContract ContractTotalByCurrencies_InContracts_InContractId { get; set; }

		/// <summary>
		/// FK_ContractTotalByCurrencies_OutContracts_OutContractId
		/// </summary>
		[Association(ThisKey="OutContractId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ContractTotalByCurrencies_OutContracts_OutContractId", BackReferenceName="FK_ContractTotalByCurrencies_OutContracts_OutContractId_BackReferences")]
		public OutContract ContractTotalByCurrencies_OutContracts_OutContractId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("CurrencyUnits")]
	public partial class CurrencyUnit : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture            { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate        { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate        { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy          { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy          { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive           { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted          { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder       { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath   { get; set; } // longtext
		[Column,    Nullable] public string    CurrencyUnitName   { get; set; } // longtext
		[Column,    Nullable] public string    CurrencyUnitCode   { get; set; } // longtext
		[Column,    Nullable] public string    IssuingCountry     { get; set; } // longtext
		[Column,    Nullable] public string    CurrencyUnitSymbol { get; set; } // longtext
		[Column,    Nullable] public string    Description        { get; set; } // longtext
	}

	[Serializable]
	[Table("EquipmentPictures")]
	public partial class EquipmentPicture : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column, NotNull    ] public int       PictureId        { get; set; } // int(11)
		[Column, NotNull    ] public int       EquipmentId      { get; set; } // int(11)
	}

	[Serializable]
	[Table("EquipmentStatuses")]
	public partial class EquipmentStatus : BaseIntEntity
	{
		[Column, Nullable] public string Name { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_ContractEquipments_EquipmentStatuses_EquipmentStatusId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="EquipmentStatusId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractEquipment> FK_ContractEquipments_EquipmentStatuses_EquipmentStatusId_BackReferences { get; set; }

		/// <summary>
		/// FK_TransactionEquipments_EquipmentStatuses_EquipmentStatusId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="EquipmentStatusId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<TransactionEquipment> FK_TransactionEquipments_EquipmentStatuses_EquipmentStatusId_BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("EquipmentTypes")]
	public partial class EquipmentType : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture             { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate         { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate         { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy           { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy           { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive            { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted           { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder        { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath    { get; set; } // longtext
		[Column, NotNull    ] public int       CurrencyUnitId      { get; set; } // int(11)
		[Column,    Nullable] public string    CurrencyUnitCode    { get; set; } // longtext
		[Column,    Nullable] public int?      UnitOfMeasurementId { get; set; } // int(11)
		[Column,    Nullable] public string    Code                { get; set; } // varchar(256)
		[Column,    Nullable] public string    Name                { get; set; } // varchar(256)
		[Column,    Nullable] public string    Manufacturer        { get; set; } // longtext
		[Column,    Nullable] public string    Description         { get; set; } // longtext
		[Column,    Nullable] public string    Specifications      { get; set; } // longtext
		[Column, NotNull    ] public decimal   Price               { get; set; } // decimal(65,30)
		[Column, NotNull    ] public int       DeviceSupplies      { get; set; } // int(11)
	}

	[Serializable]
	[Table("ExchangeRates")]
	public partial class ExchangeRate : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    CurrencyCode     { get; set; } // longtext
		[Column,    Nullable] public string    CurrencyName     { get; set; } // longtext
		[Column,    Nullable] public string    Buy              { get; set; } // longtext
		[Column, NotNull    ] public double    BuyValue         { get; set; } // double
		[Column,    Nullable] public string    Transfer         { get; set; } // longtext
		[Column, NotNull    ] public double    TransferValue    { get; set; } // double
		[Column,    Nullable] public string    Sell             { get; set; } // longtext
		[Column, NotNull    ] public double    SellValue        { get; set; } // double
	}

	[Serializable]
	[Table("FlexiblePricingType")]
	public partial class FlexiblePricingType : BaseIntEntity
	{
		[Column, Nullable] public string Name { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_OutContractServicePackages_FlexiblePricingType_FlexiblePrici~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="FlexiblePricingTypeId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutContractServicePackage> FK_OutContractServicePackages_FlexiblePricingType_FlexiblePrici__BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("InContracts")]
	public partial class InContract : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                   { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate               { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate               { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                 { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                 { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                  { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                 { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder              { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath          { get; set; } // longtext
		[Column,    Nullable] public string    IdentityGuid              { get; set; } // varchar(68)
		[Column,    Nullable] public string    ContractCode              { get; set; } // varchar(256)
		[Column,    Nullable] public string    AgentId                   { get; set; } // varchar(256)
		[Column,    Nullable] public string    AgentCode                 { get; set; } // varchar(256)
		[Column,    Nullable] public int?      MarketAreaId              { get; set; } // int(11)
		[Column,    Nullable] public string    MarketAreaName            { get; set; } // varchar(256)
		[Column,    Nullable] public string    CityId                    { get; set; } // varchar(128)
		[Column,    Nullable] public string    CityName                  { get; set; } // varchar(256)
		[Column,    Nullable] public string    DistrictId                { get; set; } // varchar(128)
		[Column,    Nullable] public string    DistrictName              { get; set; } // varchar(256)
		[Column,    Nullable] public int?      ProjectId                 { get; set; } // int(11)
		[Column,    Nullable] public string    ProjectName               { get; set; } // varchar(256)
		[Column,    Nullable] public int?      ContractTypeId            { get; set; } // int(11)
		[Column, NotNull    ] public int       ContractStatusId          { get; set; } // int(11)
		[Column,    Nullable] public int?      ContractorId              { get; set; } // int(11)
		[Column,    Nullable] public int?      ContractorHTCId           { get; set; } // int(11)
		[Column,    Nullable] public string    SignedUserId              { get; set; } // longtext
		[Column,    Nullable] public string    SignedUserName            { get; set; } // varchar(256)
		[Column,    Nullable] public string    OrganizationUnitName      { get; set; } // varchar(256)
		[Column,    Nullable] public int?      SalesmanId                { get; set; } // int(11)
		[Column,    Nullable] public string    Description               { get; set; } // longtext
		[Column,    Nullable] public int?      Payment_Form              { get; set; } // int(11)
		[Column,    Nullable] public int?      Payment_Method            { get; set; } // int(11)
		[Column,    Nullable] public string    Payment_Address           { get; set; } // longtext
		[Column,    Nullable] public int?      TimeLine_RenewPeriod      { get; set; } // int(11)
		[Column,    Nullable] public int?      TimeLine_PaymentPeriod    { get; set; } // int(11)
		[Column,    Nullable] public DateTime? TimeLine_Expiration       { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_Liquidation      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_Effective        { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_Signed           { get; set; } // datetime(6)
		[Column, NotNull    ] public float     TotalTaxPercent           { get; set; } // float
		[Column, NotNull    ] public bool      IsIncidentControl         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsControlUsageCapacity    { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       NumberBillingLimitDays    { get; set; } // int(11)
		[Column,    Nullable] public int?      InterestOnDefferedPayment { get; set; } // int(11)
		[Column,    Nullable] public int?      ContractViolation         { get; set; } // int(11)
		[Column,    Nullable] public int?      ContractViolationType     { get; set; } // int(11)
		[Column, NotNull    ] public int       CurrencyUnitId            { get; set; } // int(11)
		[Column,    Nullable] public string    CurrencyUnitCode          { get; set; } // varchar(256)
		[Column, NotNull    ] public bool      IsHasOneCurrency          { get; set; } // tinyint(1)
		[Column,    Nullable] public string    FiberNodeInfo             { get; set; } // longtext
		[Column,    Nullable] public string    ContractNote              { get; set; } // longtext
		[Column,    Nullable] public string    OrganizationUnitId        { get; set; } // longtext
		[Column,    Nullable] public string    CashierUserId             { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_AttachmentFiles_InContracts_InContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="InContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AttachmentFile> FK_AttachmentFiles_InContracts_InContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_ContactInfos_InContracts_InContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="InContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContactInfo> FK_ContactInfos_InContracts_InContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_ContractContents_InContracts_InContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="InContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractContent> FK_ContractContents_InContracts_InContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_ContractSharingRevenues_InContracts_InContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="InContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractSharingRevenue> FK_ContractSharingRevenues_InContracts_InContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_ContractTotalByCurrencies_InContracts_InContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="InContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractTotalByCurrency> FK_ContractTotalByCurrencies_InContracts_InContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_InContractServices_InContracts_InContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="InContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InContractService> FK_InContractServices_InContracts_InContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_InContractTaxes_InContracts_InContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="InContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InContractTax> FK_InContractTaxes_InContracts_InContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_OutContractServicePackages_InContracts_InContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="InContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutContractServicePackage> FK_OutContractServicePackages_InContracts_InContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_InContracts_Contractors_ContractorHTCId
		/// </summary>
		[Association(ThisKey="ContractorHTCId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_InContracts_Contractors_ContractorHTCId", BackReferenceName="FK_InContracts_Contractors_ContractorHTCId_BackReferences")]
		public Contractor InContracts_Contractors_ContractorHTCId { get; set; }

		/// <summary>
		/// FK_InContracts_Contractors_ContractorId
		/// </summary>
		[Association(ThisKey="ContractorId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_InContracts_Contractors_ContractorId", BackReferenceName="FK_InContracts_Contractors_ContractorId_BackReferences")]
		public Contractor InContracts_Contractors_ContractorId { get; set; }

		/// <summary>
		/// FK_InContracts_ContractStatus_ContractStatusId
		/// </summary>
		[Association(ThisKey="ContractStatusId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_InContracts_ContractStatus_ContractStatusId", BackReferenceName="FK_InContracts_ContractStatus_ContractStatusId_BackReferences")]
		public ContractStatus InContracts_ContractStatus_ContractStatusId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("InContractServices")]
	public partial class InContractService : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                 { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate             { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate             { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy               { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy               { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted               { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder            { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath        { get; set; } // longtext
		[Column, NotNull    ] public int       InContractId            { get; set; } // int(11)
		[Column, NotNull    ] public int       ServiceId               { get; set; } // int(11)
		[Column, NotNull    ] public int       ShareType               { get; set; } // int(11)
		[Column, NotNull    ] public int       PointType               { get; set; } // int(11)
		[Column,    Nullable] public string    ServiceName             { get; set; } // longtext
		[Column, NotNull    ] public float     SharedPackagePercent    { get; set; } // float
		[Column, NotNull    ] public float     SharedInstallFeePercent { get; set; } // float

		#region Associations

		/// <summary>
		/// FK_InContractServices_InContracts_InContractId
		/// </summary>
		[Association(ThisKey="InContractId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_InContractServices_InContracts_InContractId", BackReferenceName="FK_InContractServices_InContracts_InContractId_BackReferences")]
		public InContract InContractServices_InContracts_InContractId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("InContractStatus")]
	public partial class InContractStatus : BaseIntEntity
	{
		[Column, Nullable] public string Name { get; set; } // longtext
	}

	[Serializable]
	[Table("InContractTaxes")]
	public partial class InContractTax : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public int?      InContractId     { get; set; } // int(11)
		[Column, NotNull    ] public int       TaxCategoryId    { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_InContractTaxes_InContracts_InContractId
		/// </summary>
		[Association(ThisKey="InContractId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_InContractTaxes_InContracts_InContractId", BackReferenceName="FK_InContractTaxes_InContracts_InContractId_BackReferences")]
		public InContract InContractTaxes_InContracts_InContractId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("InContractTypes")]
	public partial class InContractType : BaseIntEntity
	{
		[Column, Nullable] public string Name { get; set; } // longtext
	}

	[Serializable]
	[Table("IntegrationEventLogs")]
	public partial class IntegrationEventLog : BaseIntEntity
	{
		[PrimaryKey, NotNull    ] public string   EventId       { get; set; } // char(36)
		[Column,     NotNull    ] public string   EventTypeName { get; set; } // longtext
		[Column,     NotNull    ] public int      State         { get; set; } // int(11)
		[Column,     NotNull    ] public int      TimesSent     { get; set; } // int(11)
		[Column,     NotNull    ] public DateTime CreationTime  { get; set; } // datetime(6)
		[Column,     NotNull    ] public string   Content       { get; set; } // longtext
		[Column,        Nullable] public string   TransactionId { get; set; } // longtext
	}

	[Serializable]
	[Table("ManagementBusinessBlocks")]
	public partial class ManagementBusinessBlock : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture           { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate       { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate       { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy         { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy         { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive          { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted         { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder      { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath  { get; set; } // longtext
		[Column,    Nullable] public string    BusinessBlockName { get; set; } // varchar(256)
		[Column,    Nullable] public string    Code              { get; set; } // longtext
		[Column,    Nullable] public string    Note              { get; set; } // longtext
	}

	[Serializable]
	[Table("MarketAreas")]
	public partial class MarketArea : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public int?      ParentId         { get; set; } // int(11)
		[Column,    Nullable] public string    MarketCode       { get; set; } // longtext
		[Column,    Nullable] public string    MarketName       { get; set; } // longtext
		[Column, NotNull    ] public int       TreeLevel        { get; set; } // int(11)
		[Column,    Nullable] public string    TreePath         { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_Projects_MarketAreas_MarketAreaId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MarketAreaId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Project> FK_Projects_MarketAreas_MarketAreaId_BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("OutContracts")]
	public partial class OutContract : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                    { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                  { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                  { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                  { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder               { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath           { get; set; } // longtext
		[Column,    Nullable] public string    IdentityGuid               { get; set; } // varchar(68)
		[Column,    Nullable] public string    ContractCode               { get; set; } // varchar(256)
		[Column,    Nullable] public string    AgentId                    { get; set; } // varchar(256)
		[Column,    Nullable] public string    AgentCode                  { get; set; } // varchar(256)
		[Column,    Nullable] public int?      MarketAreaId               { get; set; } // int(11)
		[Column,    Nullable] public string    MarketAreaName             { get; set; } // varchar(256)
		[Column,    Nullable] public string    CityId                     { get; set; } // varchar(128)
		[Column,    Nullable] public string    CityName                   { get; set; } // varchar(256)
		[Column,    Nullable] public string    DistrictId                 { get; set; } // varchar(128)
		[Column,    Nullable] public string    DistrictName               { get; set; } // varchar(256)
		[Column,    Nullable] public int?      ProjectId                  { get; set; } // int(11)
		[Column,    Nullable] public string    ProjectName                { get; set; } // varchar(256)
		[Column,    Nullable] public int?      ContractTypeId             { get; set; } // int(11)
		[Column, NotNull    ] public int       ContractStatusId           { get; set; } // int(11)
		[Column,    Nullable] public int?      ContractorId               { get; set; } // int(11)
		[Column,    Nullable] public int?      ContractorHTCId            { get; set; } // int(11)
		[Column,    Nullable] public string    SignedUserId               { get; set; } // longtext
		[Column,    Nullable] public string    SignedUserName             { get; set; } // varchar(256)
		[Column,    Nullable] public string    OrganizationUnitName       { get; set; } // varchar(256)
		[Column,    Nullable] public int?      SalesmanId                 { get; set; } // int(11)
		[Column,    Nullable] public string    Description                { get; set; } // longtext
		[Column,    Nullable] public int?      Payment_Form               { get; set; } // int(11)
		[Column,    Nullable] public int?      Payment_Method             { get; set; } // int(11)
		[Column,    Nullable] public string    Payment_Address            { get; set; } // longtext
		[Column,    Nullable] public int?      TimeLine_RenewPeriod       { get; set; } // int(11)
		[Column,    Nullable] public int?      TimeLine_PaymentPeriod     { get; set; } // int(11)
		[Column,    Nullable] public DateTime? TimeLine_Expiration        { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_Liquidation       { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_Effective         { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_Signed            { get; set; } // datetime(6)
		[Column, NotNull    ] public float     TotalTaxPercent            { get; set; } // float
		[Column, NotNull    ] public bool      IsIncidentControl          { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsControlUsageCapacity     { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       NumberBillingLimitDays     { get; set; } // int(11)
		[Column,    Nullable] public int?      InterestOnDefferedPayment  { get; set; } // int(11)
		[Column,    Nullable] public int?      ContractViolation          { get; set; } // int(11)
		[Column,    Nullable] public int?      ContractViolationType      { get; set; } // int(11)
		[Column, NotNull    ] public int       CurrencyUnitId             { get; set; } // int(11)
		[Column,    Nullable] public string    CurrencyUnitCode           { get; set; } // varchar(256)
		[Column, NotNull    ] public bool      IsHasOneCurrency           { get; set; } // tinyint(1)
		[Column,    Nullable] public string    FiberNodeInfo              { get; set; } // longtext
		[Column,    Nullable] public string    ContractNote               { get; set; } // longtext
		[Column,    Nullable] public string    AgentContractCode          { get; set; } // longtext
		[Column,    Nullable] public string    OrganizationUnitId         { get; set; } // longtext
		[Column,    Nullable] public string    CashierUserId              { get; set; } // varchar(68)
		[Column,    Nullable] public string    CashierUserName            { get; set; } // varchar(256)
		[Column,    Nullable] public string    CashierFullName            { get; set; } // varchar(256)
		[Column, NotNull    ] public bool      IsAutomaticGenerateReceipt { get; set; } // tinyint(1)
		[Column,    Nullable] public string    CustomerCareStaffUserId    { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_AttachmentFiles_OutContracts_OutContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AttachmentFile> FK_AttachmentFiles_OutContracts_OutContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_ContactInfos_OutContracts_OutContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContactInfo> FK_ContactInfos_OutContracts_OutContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_ContractContents_OutContracts_OutContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractContent> FK_ContractContents_OutContracts_OutContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_ContractSharingRevenues_OutContracts_OutContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractSharingRevenue> FK_ContractSharingRevenues_OutContracts_OutContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_ContractTotalByCurrencies_OutContracts_OutContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractTotalByCurrency> FK_ContractTotalByCurrencies_OutContracts_OutContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_OutContractServicePackages_OutContracts_OutContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutContractServicePackage> FK_OutContractServicePackages_OutContracts_OutContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_Transactions_OutContracts_OutContractId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutContractId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Transaction> FK_Transactions_OutContracts_OutContractId_BackReferences { get; set; }

		/// <summary>
		/// FK_OutContracts_Contractors_ContractorHTCId
		/// </summary>
		[Association(ThisKey="ContractorHTCId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutContracts_Contractors_ContractorHTCId", BackReferenceName="FK_OutContracts_Contractors_ContractorHTCId_BackReferences")]
		public Contractor OutContracts_Contractors_ContractorHTCId { get; set; }

		/// <summary>
		/// FK_OutContracts_Contractors_ContractorId
		/// </summary>
		[Association(ThisKey="ContractorId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutContracts_Contractors_ContractorId", BackReferenceName="FK_OutContracts_Contractors_ContractorId_BackReferences")]
		public Contractor OutContracts_Contractors_ContractorId { get; set; }

		/// <summary>
		/// FK_OutContracts_ContractStatus_ContractStatusId
		/// </summary>
		[Association(ThisKey="ContractStatusId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutContracts_ContractStatus_ContractStatusId", BackReferenceName="FK_OutContracts_ContractStatus_ContractStatusId_BackReferences")]
		public ContractStatus OutContracts_ContractStatus_ContractStatusId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("OutContractServicePackages")]
	public partial class OutContractServicePackage : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                      { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                  { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                  { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                    { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                    { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                     { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                    { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                 { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath             { get; set; } // longtext
		[Column, NotNull    ] public int       Type                         { get; set; } // int(11)
		[Column,    Nullable] public int?      OutContractId                { get; set; } // int(11)
		[Column,    Nullable] public int?      InContractId                 { get; set; } // int(11)
		[Column,    Nullable] public string    CableRoutingNumber           { get; set; } // longtext
		[Column, NotNull    ] public int       CurrencyUnitId               { get; set; } // int(11)
		[Column,    Nullable] public string    CurrencyUnitCode             { get; set; } // longtext
		[Column,    Nullable] public int?      ServicePackageId             { get; set; } // int(11)
		[Column, NotNull    ] public int       ServiceId                    { get; set; } // int(11)
		[Column, NotNull    ] public string    ServiceName                  { get; set; } // varchar(256)
		[Column,    Nullable] public string    PackageName                  { get; set; } // varchar(256)
		[Column, NotNull    ] public bool      IsFreeStaticIp               { get; set; } // tinyint(1)
		[Column,    Nullable] public string    BandwidthLabel               { get; set; } // varchar(256)
		[Column, NotNull    ] public float     InternationalBandwidth       { get; set; } // float
		[Column, NotNull    ] public float     DomesticBandwidth            { get; set; } // float
		[Column,    Nullable] public string    InternationalBandwidthUom    { get; set; } // longtext
		[Column,    Nullable] public string    DomesticBandwidthUom         { get; set; } // longtext
		[Column,    Nullable] public int?      TimeLine_PrepayPeriod        { get; set; } // int(11)
		[Column,    Nullable] public int?      TimeLine_PaymentPeriod       { get; set; } // int(11)
		[Column,    Nullable] public DateTime? TimeLine_Effective           { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_Signed              { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_StartBilling        { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_LatestBilling       { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_NextBilling         { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_SuspensionStartDate { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_SuspensionEndDate   { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_TerminateDate       { get; set; } // datetime(6)
		[Column,    Nullable] public int?      TimeLine_DaysSuspended       { get; set; } // int(11)
		[Column,    Nullable] public int?      TimeLine_DaysPromotion       { get; set; } // int(11)
		[Column,    Nullable] public int?      TimeLine_PaymentForm         { get; set; } // int(11)
		[Column,    Nullable] public string    CustomerCode                 { get; set; } // varchar(256)
		[Column,    Nullable] public string    CId                          { get; set; } // varchar(256)
		[Column,    Nullable] public string    RadiusAccount                { get; set; } // varchar(256)
		[Column,    Nullable] public string    RadiusPassword               { get; set; } // varchar(256)
		[Column, NotNull    ] public decimal   InstallationFee              { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   OtherFee                     { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   OrgPackagePrice              { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   PackagePrice                 { get; set; } // decimal(65,30)
		[Column, NotNull    ] public float     LineQuantity                 { get; set; } // float
		[Column,    Nullable] public float?    CableKilometers              { get; set; } // float
		[Column,    Nullable] public int?      StartPointChannelId          { get; set; } // int(11)
		[Column, NotNull    ] public int       EndPointChannelId            { get; set; } // int(11)
		[Column, NotNull    ] public decimal   PromotionAmount              { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   EquipmentAmount              { get; set; } // decimal(65,30)
		[Column, NotNull    ] public int       StatusId                     { get; set; } // int(11)
		[Column, NotNull    ] public decimal   SubTotalBeforeTax            { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   GrandTotalBeforeTax          { get; set; } // decimal(65,30)
		[Column, NotNull    ] public float     TaxPercent                   { get; set; } // float
		[Column, NotNull    ] public decimal   TaxAmount                    { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   SubTotal                     { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   GrandTotal                   { get; set; } // decimal(65,30)
		[Column,    Nullable] public int?      TransactionServicePackageId  { get; set; } // int(11)
		[Column,    Nullable] public int?      OldId                        { get; set; } // int(11)
		[Column, NotNull    ] public bool      IsInFirstBilling             { get; set; } // tinyint(1)
		[Column,    Nullable] public int?      RadiusServerId               { get; set; } // int(11)
		[Column, NotNull    ] public int       ChannelGroupId               { get; set; } // int(11)
		[Column, NotNull    ] public int       PaymentTargetId              { get; set; } // int(11)
		[Column, NotNull    ] public int       FlexiblePricingTypeId        { get; set; } // int(11)
		[Column,    Nullable] public decimal?  MaxSubTotal                  { get; set; } // decimal(65,30)
		[Column,    Nullable] public decimal?  MinSubTotal                  { get; set; } // decimal(65,30)
		[Column, NotNull    ] public byte      IsDefaultSLAByServiceId      { get; set; } // tinyint(3) unsigned
		[Column, NotNull    ] public bool      IsRadiusAccountCreated       { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsHasServicePackage          { get; set; } // tinyint(1)
		[Column,    Nullable] public bool?     IsTechnicalConfirmation      { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      HasStartAndEndPoint          { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      HasDistinguishBandwidth      { get; set; } // tinyint(1)
		[Column,    Nullable] public string    Note                         { get; set; } // varchar(1000)

		#region Associations

		/// <summary>
		/// FK_ChannelPriceBusTables_OutContractServicePackages_ChannelId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ChannelId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ChannelPriceBusTable> FK_ChannelPriceBusTables_OutContractServicePackages_ChannelId_BackReferences { get; set; }

		/// <summary>
		/// FK_ContractSharingRevenueLines_OutContractServicePackages_OutSe~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutServiceChannelId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractSharingRevenueLine> FK_ContractSharingRevenueLines_OutContractServicePackages_OutSe__BackReferences { get; set; }

		/// <summary>
		/// FK_ContractSharingRevenues_OutContractServicePackages_OutContra~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutContractServicePackageId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractSharingRevenue> FK_ContractSharingRevenues_OutContractServicePackages_OutContra__BackReferences { get; set; }

		/// <summary>
		/// FK_OutContractServicePackageClearings_OutContractServicePackage~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutContractServicePackageId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutContractServicePackageClearing> FK_OutContractServicePackageClearings_OutContractServicePackage__BackReferences { get; set; }

		/// <summary>
		/// FK_OutContractServicePackageTaxes_OutContractServicePackages_Ou~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutContractServicePackageId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutContractServicePackageTax> FK_OutContractServicePackageTaxes_OutContractServicePackages_Ou__BackReferences { get; set; }

		/// <summary>
		/// FK_PromotionForContracts_OutContractServicePackages_OutContract~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutContractServicePackageId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<PromotionForContract> FK_PromotionForContracts_OutContractServicePackages_OutContract__BackReferences { get; set; }

		/// <summary>
		/// FK_ServiceLevelAgreements_OutContractServicePackages_OutContrac~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutContractServicePackageId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ServiceLevelAgreement> FK_ServiceLevelAgreements_OutContractServicePackages_OutContrac__BackReferences { get; set; }

		/// <summary>
		/// FK_ServicePackageSuspensionTimes_OutContractServicePackages_Out~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutContractServicePackageId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ServicePackageSuspensionTime> FK_ServicePackageSuspensionTimes_OutContractServicePackages_Out__BackReferences { get; set; }

		/// <summary>
		/// FK_OutContractServicePackages_Contractors_PaymentTargetId
		/// </summary>
		[Association(ThisKey="PaymentTargetId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutContractServicePackages_Contractors_PaymentTargetId", BackReferenceName="FK_OutContractServicePackages_Contractors_PaymentTargetId_BackReferences")]
		public Contractor OutContractServicePackages_Contractors_PaymentTargetId { get; set; }

		/// <summary>
		/// FK_OutContractServicePackages_FlexiblePricingType_FlexiblePrici~
		/// </summary>
		[Association(ThisKey="FlexiblePricingTypeId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutContractServicePackages_FlexiblePricingType_FlexiblePrici~", BackReferenceName="FK_OutContractServicePackages_FlexiblePricingType_FlexiblePrici__BackReferences")]
		public FlexiblePricingType OutContractServicePackages_FlexiblePricingType_FlexiblePrici_ { get; set; }

		/// <summary>
		/// FK_OutContractServicePackages_InContracts_InContractId
		/// </summary>
		[Association(ThisKey="InContractId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutContractServicePackages_InContracts_InContractId", BackReferenceName="FK_OutContractServicePackages_InContracts_InContractId_BackReferences")]
		public InContract OutContractServicePackages_InContracts_InContractId { get; set; }

		/// <summary>
		/// FK_OutContractServicePackages_OutContracts_OutContractId
		/// </summary>
		[Association(ThisKey="OutContractId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutContractServicePackages_OutContracts_OutContractId", BackReferenceName="FK_OutContractServicePackages_OutContracts_OutContractId_BackReferences")]
		public OutContract OutContractServicePackages_OutContracts_OutContractId { get; set; }

		/// <summary>
		/// FK_OutContractServicePackages_OutputChannelPoints_EndPointChann~
		/// </summary>
		[Association(ThisKey="EndPointChannelId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutContractServicePackages_OutputChannelPoints_EndPointChann~", BackReferenceName="FK_OutContractServicePackages_OutputChannelPoints_EndPointChann__BackReferences")]
		public OutputChannelPoint OutContractServicePackages_OutputChannelPoints_EndPointChann_ { get; set; }

		/// <summary>
		/// FK_OutContractServicePackages_OutputChannelPoints_StartPointCha~
		/// </summary>
		[Association(ThisKey="StartPointChannelId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutContractServicePackages_OutputChannelPoints_StartPointCha~", BackReferenceName="FK_OutContractServicePackages_OutputChannelPoints_StartPointCha__BackReferences")]
		public OutputChannelPoint OutContractServicePackages_OutputChannelPoints_StartPointCha_ { get; set; }

		/// <summary>
		/// FK_OutContractServicePackages_TransactionServicePackages_Transa~
		/// </summary>
		[Association(ThisKey="TransactionServicePackageId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutContractServicePackages_TransactionServicePackages_Transa~", BackReferenceName="FK_OutContractServicePackages_TransactionServicePackages_Transa__BackReferences")]
		public TransactionServicePackage OutContractServicePackages_TransactionServicePackages_Transa_ { get; set; }

		#endregion
	}

	[Serializable]
	[Table("OutContractServicePackageClearings")]
	public partial class OutContractServicePackageClearing : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                     { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                   { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                   { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                    { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath            { get; set; } // longtext
		[Column, NotNull    ] public decimal   Change                      { get; set; } // decimal(65,30)
		[Column, NotNull    ] public bool      IsUsed                      { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       OutContractServicePackageId { get; set; } // int(11)
		[Column, NotNull    ] public bool      IsDaysPlus                  { get; set; } // tinyint(1)

		#region Associations

		/// <summary>
		/// FK_OutContractServicePackageClearings_OutContractServicePackage~
		/// </summary>
		[Association(ThisKey="OutContractServicePackageId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutContractServicePackageClearings_OutContractServicePackage~", BackReferenceName="FK_OutContractServicePackageClearings_OutContractServicePackage__BackReferences")]
		public OutContractServicePackage OutContractServicePackageClearings_OutContractServicePackage_ { get; set; }

		#endregion
	}

	[Serializable]
	[Table("OutContractServicePackageStatuses")]
	public partial class OutContractServicePackageStatus : BaseIntEntity
	{
		[Column, Nullable] public string Name { get; set; } // longtext
	}

	[Serializable]
	[Table("OutContractServicePackageTaxes")]
	public partial class OutContractServicePackageTax : BaseIntEntity
	{
		[PrimaryKey(2), NotNull    ] public int    TaxCategoryId               { get; set; } // int(11)
		[PrimaryKey(1), NotNull    ] public int    OutContractServicePackageId { get; set; } // int(11)
		[Column,           Nullable] public string TaxCategoryName             { get; set; } // varchar(256)
		[Column,           Nullable] public string TaxCategoryCode             { get; set; } // varchar(256)
		[Column,        NotNull    ] public float  TaxValue                    { get; set; } // float

		#region Associations

		/// <summary>
		/// FK_OutContractServicePackageTaxes_OutContractServicePackages_Ou~
		/// </summary>
		[Association(ThisKey="OutContractServicePackageId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutContractServicePackageTaxes_OutContractServicePackages_Ou~", BackReferenceName="FK_OutContractServicePackageTaxes_OutContractServicePackages_Ou__BackReferences")]
		public OutContractServicePackage OutContractServicePackageTaxes_OutContractServicePackages_Ou_ { get; set; }

		/// <summary>
		/// FK_OutContractServicePackageTaxes_TaxCategories_TaxCategoryId
		/// </summary>
		[Association(ThisKey="TaxCategoryId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_OutContractServicePackageTaxes_TaxCategories_TaxCategoryId", BackReferenceName="FK_OutContractServicePackageTaxes_TaxCategories_TaxCategoryId_BackReferences")]
		public TaxCategory OutContractServicePackageTaxes_TaxCategories_TaxCategoryId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("OutContractStatus")]
	public partial class OutContractStatus : BaseIntEntity
	{
		[Column, Nullable] public string Name { get; set; } // longtext
	}

	[Serializable]
	[Table("OutContractTypes")]
	public partial class OutContractType : BaseIntEntity
	{
		[Column, Nullable] public string Name { get; set; } // longtext
	}

	[Serializable]
	[Table("OutputChannelPoints")]
	public partial class OutputChannelPoint : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                        { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                    { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                    { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                      { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                      { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                       { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                      { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                   { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath               { get; set; } // longtext
		[Column, NotNull    ] public int       CurrencyUnitId                 { get; set; } // int(11)
		[Column,    Nullable] public string    CurrencyUnitCode               { get; set; } // longtext
		[Column,    Nullable] public string    LocationId                     { get; set; } // varchar(68)
		[Column, NotNull    ] public int       PointType                      { get; set; } // int(11)
		[Column,    Nullable] public string    InstallationAddress_Building   { get; set; } // varchar(256)
		[Column,    Nullable] public string    InstallationAddress_Floor      { get; set; } // varchar(256)
		[Column,    Nullable] public string    InstallationAddress_RoomNumber { get; set; } // varchar(256)
		[Column,    Nullable] public string    InstallationAddress_Street     { get; set; } // varchar(256)
		[Column,    Nullable] public string    InstallationAddress_District   { get; set; } // varchar(256)
		[Column,    Nullable] public string    InstallationAddress_DistrictId { get; set; } // varchar(256)
		[Column,    Nullable] public string    InstallationAddress_City       { get; set; } // varchar(256)
		[Column,    Nullable] public string    InstallationAddress_CityId     { get; set; } // varchar(256)
		[Column, NotNull    ] public decimal   InstallationFee                { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   OtherFee                       { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   MonthlyCost                    { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   EquipmentAmount                { get; set; } // decimal(65,30)
		[Column, NotNull    ] public bool      ApplyFeeToChannel              { get; set; } // tinyint(1)

		#region Associations

		/// <summary>
		/// FK_ContractEquipments_OutputChannelPoints_OutputChannelPointId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutputChannelPointId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractEquipment> FK_ContractEquipments_OutputChannelPoints_OutputChannelPointId_BackReferences { get; set; }

		/// <summary>
		/// FK_OutContractServicePackages_OutputChannelPoints_EndPointChann~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="EndPointChannelId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutContractServicePackage> FK_OutContractServicePackages_OutputChannelPoints_EndPointChann__BackReferences { get; set; }

		/// <summary>
		/// FK_OutContractServicePackages_OutputChannelPoints_StartPointCha~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="StartPointChannelId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutContractServicePackage> FK_OutContractServicePackages_OutputChannelPoints_StartPointCha__BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("Pictures")]
	public partial class Picture : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    Name             { get; set; } // varchar(256)
		[Column, NotNull    ] public string    FileName         { get; set; } // varchar(256)
		[Column,    Nullable] public string    FilePath         { get; set; } // longtext
		[Column, NotNull    ] public long      Size             { get; set; } // bigint(20)
		[Column,    Nullable] public int?      Order            { get; set; } // int(11)
		[Column, NotNull    ] public int       PictureType      { get; set; } // int(11)
		[Column, NotNull    ] public string    Extension        { get; set; } // longtext
		[Column,    Nullable] public string    RedirectLink     { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_ContractContents_Pictures_ContractFormSignatureId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ContractFormSignatureId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractContent> FK_ContractContents_Pictures_ContractFormSignatureId_BackReferences { get; set; }

		/// <summary>
		/// FK_ContractContents_Pictures_DigitalSignatureId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="DigitalSignatureId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractContent> FK_ContractContents_Pictures_DigitalSignatureId_BackReferences { get; set; }

		/// <summary>
		/// FK_ContractForms_Pictures_DigitalSignatureId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="DigitalSignatureId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractForm> FK_ContractForms_Pictures_DigitalSignatureId_BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("PointTypes")]
	public partial class PointType : BaseIntEntity
	{
		[Column, Nullable] public string Name { get; set; } // longtext
	}

	[Serializable]
	[Table("Projects")]
	public partial class Project : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture             { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate         { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate         { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy           { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy           { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive            { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted           { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder        { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath    { get; set; } // longtext
		[Column,    Nullable] public string    ProjectName         { get; set; } // varchar(256)
		[Column,    Nullable] public string    ProjectCode         { get; set; } // varchar(256)
		[Column,    Nullable] public int?      MarketAreaId        { get; set; } // int(11)
		[Column,    Nullable] public int?      AgentContractCodeId { get; set; } // int(11)
		[Column,    Nullable] public string    NumberOfUnits       { get; set; } // varchar(256)
		[Column,    Nullable] public string    Description         { get; set; } // longtext
		[Column,    Nullable] public int?      NumberOfRooms       { get; set; } // int(11)
		[Column, NotNull    ] public int       NumberOfSupporters  { get; set; } // int(11)
		[Column,    Nullable] public string    IdentityGuid        { get; set; } // varchar(128)
		[Column,    Nullable] public int?      BusinessBlockId     { get; set; } // int(11)
		[Column,    Nullable] public string    City                { get; set; } // longtext
		[Column,    Nullable] public string    CityId              { get; set; } // longtext
		[Column,    Nullable] public string    District            { get; set; } // longtext
		[Column,    Nullable] public string    DistrictId          { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_ProjectTechnicians_Projects_ProjectId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ProjectId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ProjectTechnician> FK_ProjectTechnicians_Projects_ProjectId_BackReferences { get; set; }

		/// <summary>
		/// FK_Projects_MarketAreas_MarketAreaId
		/// </summary>
		[Association(ThisKey="MarketAreaId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_Projects_MarketAreas_MarketAreaId", BackReferenceName="FK_Projects_MarketAreas_MarketAreaId_BackReferences")]
		public MarketArea Projects_MarketAreas_MarketAreaId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ProjectTechnicians")]
	public partial class ProjectTechnician : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column, NotNull    ] public int       ProjectId        { get; set; } // int(11)
		[Column,    Nullable] public string    UserTechnicianId { get; set; } // longtext
		[Column,    Nullable] public string    TechnicianName   { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_ProjectTechnicians_Projects_ProjectId
		/// </summary>
		[Association(ThisKey="ProjectId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ProjectTechnicians_Projects_ProjectId", BackReferenceName="FK_ProjectTechnicians_Projects_ProjectId_BackReferences")]
		public Project ProjectTechnicians_Projects_ProjectId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("Promotions")]
	public partial class Promotion : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    PromotionCode    { get; set; } // longtext
		[Column,    Nullable] public string    PromotionName    { get; set; } // longtext
		[Column, NotNull    ] public int       PromotionType    { get; set; } // int(11)
		[Column, NotNull    ] public DateTime  StartDate        { get; set; } // datetime(6)
		[Column, NotNull    ] public DateTime  EndDate          { get; set; } // datetime(6)
		[Column,    Nullable] public string    Description      { get; set; } // longtext
	}

	[Serializable]
	[Table("PromotionDetails")]
	public partial class PromotionDetail : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture              { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate          { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate          { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy            { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy            { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive             { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted            { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder         { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath     { get; set; } // longtext
		[Column, NotNull    ] public int       PromotionId          { get; set; } // int(11)
		[Column, NotNull    ] public int       PromotionValueType   { get; set; } // int(11)
		[Column,    Nullable] public string    PromotionValue       { get; set; } // longtext
		[Column, NotNull    ] public int       Quantity             { get; set; } // int(11)
		[Column,    Nullable] public string    City                 { get; set; } // longtext
		[Column,    Nullable] public string    CityId               { get; set; } // longtext
		[Column,    Nullable] public string    District             { get; set; } // longtext
		[Column,    Nullable] public string    DistrictId           { get; set; } // longtext
		[Column,    Nullable] public string    Area                 { get; set; } // longtext
		[Column,    Nullable] public string    AreaId               { get; set; } // longtext
		[Column, NotNull    ] public int       ServiceId            { get; set; } // int(11)
		[Column, NotNull    ] public int       ProjectId            { get; set; } // int(11)
		[Column,    Nullable] public string    SubjectId            { get; set; } // longtext
		[Column, NotNull    ] public int       ServicePackageId     { get; set; } // int(11)
		[Column, NotNull    ] public int       NumberOfMonthApplied { get; set; } // int(11)
		[Column, NotNull    ] public int       CurrencyUnitId       { get; set; } // int(11)
		[Column,    Nullable] public string    CurrencyUnitCode     { get; set; } // longtext
	}

	[Serializable]
	[Table("PromotionForContracts")]
	public partial class PromotionForContract : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                     { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                   { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                   { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                    { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath            { get; set; } // longtext
		[Column,    Nullable] public int?      OutContractServicePackageId { get; set; } // int(11)
		[Column, NotNull    ] public int       PromotionDetailId           { get; set; } // int(11)
		[Column, NotNull    ] public decimal   PromotionValue              { get; set; } // decimal(65,30)
		[Column,    Nullable] public int?      PromotionValueType          { get; set; } // int(11)
		[Column, NotNull    ] public bool      IsApplied                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       NumberMonthApplied          { get; set; } // int(11)
		[Column, NotNull    ] public int       PromotionId                 { get; set; } // int(11)
		[Column,    Nullable] public string    PromotionName               { get; set; } // longtext
		[Column, NotNull    ] public int       PromotionType               { get; set; } // int(11)
		[Column,    Nullable] public string    PromotionTypeName           { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_PromotionForContracts_OutContractServicePackages_OutContract~
		/// </summary>
		[Association(ThisKey="OutContractServicePackageId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_PromotionForContracts_OutContractServicePackages_OutContract~", BackReferenceName="FK_PromotionForContracts_OutContractServicePackages_OutContract__BackReferences")]
		public OutContractServicePackage PromotionForContracts_OutContractServicePackages_OutContract_ { get; set; }

		#endregion
	}

	[Serializable]
	[Table("PromotionProducts")]
	public partial class PromotionProduct : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture           { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate       { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate       { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy         { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy         { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive          { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted         { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder      { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath  { get; set; } // longtext
		[Column, NotNull    ] public int       PromotionDetailId { get; set; } // int(11)
		[Column, NotNull    ] public int       ProductId         { get; set; } // int(11)
		[Column, NotNull    ] public int       Quantity          { get; set; } // int(11)
		[Column,    Nullable] public string    ProductName       { get; set; } // longtext
		[Column,    Nullable] public string    Description       { get; set; } // longtext
		[Column, NotNull    ] public bool      IsOurProduct      { get; set; } // tinyint(1)
	}

	[Serializable]
	[Table("PromotionTypes")]
	public partial class PromotionType : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    PromotionName    { get; set; } // longtext
		[Column,    Nullable] public string    Description      { get; set; } // longtext
	}

	[Serializable]
	[Table("PromotionValueTypes")]
	public partial class PromotionValueType : BaseIntEntity
	{
		[Column, Nullable] public string Name { get; set; } // longtext
	}

	[Serializable]
	[Table("RadiusServerInformation")]
	public partial class RadiusServerInformation : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    IP               { get; set; } // longtext
		[Column,    Nullable] public int?      MarketAreaId     { get; set; } // int(11)
		[Column, NotNull    ] public int       DatabasePort     { get; set; } // int(11)
		[Column,    Nullable] public string    ServerName       { get; set; } // longtext
		[Column,    Nullable] public string    SSHUserName      { get; set; } // longtext
		[Column,    Nullable] public string    SSHPassword      { get; set; } // longtext
		[Column,    Nullable] public string    DatabaseUserName { get; set; } // longtext
		[Column,    Nullable] public string    DatabasePassword { get; set; } // longtext
		[Column,    Nullable] public string    Description      { get; set; } // longtext
	}

	[Serializable]
	[Table("ReasonTypeContractTerminations")]
	public partial class ReasonTypeContractTermination : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    Name             { get; set; } // longtext
	}

	[Serializable]
	[Table("Salesman")]
	public partial class Salesman : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    IdentityGuid     { get; set; } // varchar(20)
		[Column,    Nullable] public string    FullName         { get; set; } // longtext
	}

	[Serializable]
	[Table("Services")]
	public partial class Service : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                 { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate             { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate             { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy               { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy               { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted               { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder            { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath        { get; set; } // longtext
		[Column,    Nullable] public int?      GroupId                 { get; set; } // int(11)
		[Column,    Nullable] public string    ServiceCode             { get; set; } // longtext
		[Column,    Nullable] public string    ServiceName             { get; set; } // longtext
		[Column, NotNull    ] public bool      HasStartAndEndPoint     { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      HasPackages             { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      HasLineQuantity         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      HasCableKilometers      { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      HasDistinguishBandwidth { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       AvatarId                { get; set; } // int(11)
		[Column, NotNull    ] public decimal   ServicePrice            { get; set; } // decimal(65,30)

		#region Associations

		/// <summary>
		/// FK_ServicePackages_Services_ServiceId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ServiceId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ServicePackage> FK_ServicePackages_Services_ServiceId_BackReferences { get; set; }

		/// <summary>
		/// FK_Services_ServiceGroups_GroupId
		/// </summary>
		[Association(ThisKey="GroupId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_Services_ServiceGroups_GroupId", BackReferenceName="FK_Services_ServiceGroups_GroupId_BackReferences")]
		public ServiceGroup Services_ServiceGroups_GroupId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ServiceGroups")]
	public partial class ServiceGroup : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    GroupCode        { get; set; } // longtext
		[Column,    Nullable] public string    GroupName        { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_Services_ServiceGroups_GroupId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="GroupId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Service> FK_Services_ServiceGroups_GroupId_BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ServiceLevelAgreements")]
	public partial class ServiceLevelAgreement : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                     { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                   { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                   { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                    { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath            { get; set; } // longtext
		[Column, NotNull    ] public int       ServiceId                   { get; set; } // int(11)
		[Column, NotNull    ] public bool      IsDefault                   { get; set; } // tinyint(1)
		[Column,    Nullable] public string    Uid                         { get; set; } // varchar(68)
		[Column,    Nullable] public string    Label                       { get; set; } // varchar(256)
		[Column,    Nullable] public string    Content                     { get; set; } // varchar(2000)
		[Column, NotNull    ] public int       OutContractId               { get; set; } // int(11)
		[Column,    Nullable] public int?      OutContractServicePackageId { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_ServiceLevelAgreements_OutContractServicePackages_OutContrac~
		/// </summary>
		[Association(ThisKey="OutContractServicePackageId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ServiceLevelAgreements_OutContractServicePackages_OutContrac~", BackReferenceName="FK_ServiceLevelAgreements_OutContractServicePackages_OutContrac__BackReferences")]
		public OutContractServicePackage ServiceLevelAgreements_OutContractServicePackages_OutContrac_ { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ServicePackages")]
	public partial class ServicePackage : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                     { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                   { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                   { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                    { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath            { get; set; } // longtext
		[Column,    Nullable] public int?      ServiceId                   { get; set; } // int(11)
		[Column,    Nullable] public int?      PictureId                   { get; set; } // int(11)
		[Column,    Nullable] public int?      ParentId                    { get; set; } // int(11)
		[Column,    Nullable] public string    PackageCode                 { get; set; } // longtext
		[Column,    Nullable] public string    PackageName                 { get; set; } // longtext
		[Column,    Nullable] public string    BandwidthLabel              { get; set; } // longtext
		[Column, NotNull    ] public float     InternationalBandwidth      { get; set; } // float
		[Column, NotNull    ] public float     DomesticBandwidth           { get; set; } // float
		[Column,    Nullable] public string    InternationalBandwidthUom   { get; set; } // longtext
		[Column,    Nullable] public int?      InternationalBandwidthUomId { get; set; } // int(11)
		[Column,    Nullable] public string    DomesticBandwidthUom        { get; set; } // longtext
		[Column,    Nullable] public int?      DomesticBandwidthUomId      { get; set; } // int(11)
		[Column, NotNull    ] public decimal   Price                       { get; set; } // decimal(65,30)
		[Column,    Nullable] public string    CurrencyUnitCode            { get; set; } // longtext
		[Column, NotNull    ] public int       CurrencyUnitId              { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_ServicePackagePrice_ServicePackages_ChannelId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ChannelId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ServicePackagePrice> FK_ServicePackagePrice_ServicePackages_ChannelId_BackReferences { get; set; }

		/// <summary>
		/// FK_ServicePackageRadiusServices_ServicePackages_ServicePackageId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ServicePackageId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ServicePackageRadiusService> FK_ServicePackageRadiusServices_ServicePackages_ServicePackageId_BackReferences { get; set; }

		/// <summary>
		/// FK_ServicePackages_Services_ServiceId
		/// </summary>
		[Association(ThisKey="ServiceId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ServicePackages_Services_ServiceId", BackReferenceName="FK_ServicePackages_Services_ServiceId_BackReferences")]
		public Service ServicePackages_Services_ServiceId { get; set; }

		/// <summary>
		/// FK_ServicePackages_UnitOfMeasurement_DomesticBandwidthUomId
		/// </summary>
		[Association(ThisKey="DomesticBandwidthUomId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ServicePackages_UnitOfMeasurement_DomesticBandwidthUomId", BackReferenceName="FK_ServicePackages_UnitOfMeasurement_DomesticBandwidthUomId_BackReferences")]
		public UnitOfMeasurement ServicePackages_UnitOfMeasurement_DomesticBandwidthUomId { get; set; }

		/// <summary>
		/// FK_ServicePackages_UnitOfMeasurement_InternationalBandwidthUomId
		/// </summary>
		[Association(ThisKey="InternationalBandwidthUomId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ServicePackages_UnitOfMeasurement_InternationalBandwidthUomId", BackReferenceName="FK_ServicePackages_UnitOfMeasurement_InternationalBandwidthUomId_BackReferences")]
		public UnitOfMeasurement ServicePackages_UnitOfMeasurement_InternationalBandwidthUomId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ServicePackagePrice")]
	public partial class ServicePackagePrice : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public int?      ChannelId        { get; set; } // int(11)
		[Column, NotNull    ] public decimal   PriceValue       { get; set; } // decimal(65,30)
		[Column, NotNull    ] public DateTime  StartDate        { get; set; } // datetime(6)
		[Column, NotNull    ] public DateTime  EndDate          { get; set; } // datetime(6)
		[Column,    Nullable] public string    CurrencyUnitCode { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_ServicePackagePrice_ServicePackages_ChannelId
		/// </summary>
		[Association(ThisKey="ChannelId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ServicePackagePrice_ServicePackages_ChannelId", BackReferenceName="FK_ServicePackagePrice_ServicePackages_ChannelId_BackReferences")]
		public ServicePackage ServicePackagePrice_ServicePackages_ChannelId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ServicePackageRadiusServices")]
	public partial class ServicePackageRadiusService : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column, NotNull    ] public int       ServicePackageId { get; set; } // int(11)
		[Column, NotNull    ] public int       RadiusServerId   { get; set; } // int(11)
		[Column, NotNull    ] public int       RadiusServiceId  { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_ServicePackageRadiusServices_ServicePackages_ServicePackageId
		/// </summary>
		[Association(ThisKey="ServicePackageId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ServicePackageRadiusServices_ServicePackages_ServicePackageId", BackReferenceName="FK_ServicePackageRadiusServices_ServicePackages_ServicePackageId_BackReferences")]
		public ServicePackage ServicePackageRadiusServices_ServicePackages_ServicePackageId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ServicePackageSuspensionTimes")]
	public partial class ServicePackageSuspensionTime : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                     { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                   { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                   { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                    { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath            { get; set; } // longtext
		[Column, NotNull    ] public int       OutContractServicePackageId { get; set; } // int(11)
		[Column, NotNull    ] public DateTime  SuspensionStartDate         { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? SuspensionEndDate           { get; set; } // datetime(6)
		[Column, NotNull    ] public int       DaysSuspended               { get; set; } // int(11)
		[Column, NotNull    ] public decimal   DiscountAmount              { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   RemainingAmount             { get; set; } // decimal(65,30)

		#region Associations

		/// <summary>
		/// FK_ServicePackageSuspensionTimes_OutContractServicePackages_Out~
		/// </summary>
		[Association(ThisKey="OutContractServicePackageId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ServicePackageSuspensionTimes_OutContractServicePackages_Out~", BackReferenceName="FK_ServicePackageSuspensionTimes_OutContractServicePackages_Out__BackReferences")]
		public OutContractServicePackage ServicePackageSuspensionTimes_OutContractServicePackages_Out_ { get; set; }

		#endregion
	}

	[Serializable]
	[Table("TaxCategories")]
	public partial class TaxCategory : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    TaxName          { get; set; } // longtext
		[Column,    Nullable] public string    TaxCode          { get; set; } // longtext
		[Column, NotNull    ] public float     TaxValue         { get; set; } // float
		[Column,    Nullable] public int?      UserId           { get; set; } // int(11)
		[Column,    Nullable] public string    UserName         { get; set; } // longtext
		[Column,    Nullable] public string    ExplainTax       { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_OutContractServicePackageTaxes_TaxCategories_TaxCategoryId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="TaxCategoryId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutContractServicePackageTax> FK_OutContractServicePackageTaxes_TaxCategories_TaxCategoryId_BackReferences { get; set; }

		/// <summary>
		/// FK_TransactionChannelTaxes_TaxCategories_TaxCategoryId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="TaxCategoryId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<TransactionChannelTax> FK_TransactionChannelTaxes_TaxCategories_TaxCategoryId_BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("TemporaryPayingContracts")]
	public partial class TemporaryPayingContract : BaseIntEntity
	{
		[PrimaryKey(1), NotNull] public int OutContractId    { get; set; } // int(11)
		[PrimaryKey(2), NotNull] public int ServicePackageId { get; set; } // int(11)
	}

	[Serializable]
	[Table("Transactions")]
	public partial class Transaction : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                 { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate             { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate             { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy               { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy               { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted               { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder            { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath        { get; set; } // longtext
		[Column, NotNull    ] public int       CurrencyUnitId          { get; set; } // int(11)
		[Column,    Nullable] public string    CurrencyUnitCode        { get; set; } // longtext
		[Column,    Nullable] public int?      MarketAreaId            { get; set; } // int(11)
		[Column,    Nullable] public string    MarketAreaName          { get; set; } // longtext
		[Column,    Nullable] public int?      ProjectId               { get; set; } // int(11)
		[Column,    Nullable] public string    ProjectName             { get; set; } // longtext
		[Column,    Nullable] public string    CreatorUserId           { get; set; } // longtext
		[Column,    Nullable] public int?      ContractorId            { get; set; } // int(11)
		[Column, NotNull    ] public int       ContractType            { get; set; } // int(11)
		[Column,    Nullable] public string    ContractCode            { get; set; } // longtext
		[Column,    Nullable] public string    Code                    { get; set; } // longtext
		[Column, NotNull    ] public int       Type                    { get; set; } // int(11)
		[Column, NotNull    ] public DateTime  TransactionDate         { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? EffectiveDate           { get; set; } // datetime(6)
		[Column, NotNull    ] public int       StatusId                { get; set; } // int(11)
		[Column,    Nullable] public string    HandleUserId            { get; set; } // longtext
		[Column,    Nullable] public string    AcceptanceStaff         { get; set; } // longtext
		[Column,    Nullable] public string    OrganizationUnitId      { get; set; } // longtext
		[Column,    Nullable] public int?      ReasonType              { get; set; } // int(11)
		[Column,    Nullable] public string    Reason                  { get; set; } // longtext
		[Column,    Nullable] public string    Note                    { get; set; } // longtext
		[Column,    Nullable] public string    AcceptanceNotes         { get; set; } // longtext
		[Column,    Nullable] public decimal?  SuspendHandleFee        { get; set; } // decimal(65,30)
		[Column,    Nullable] public decimal?  RestoreHandleFee        { get; set; } // decimal(65,30)
		[Column,    Nullable] public decimal?  ChaningLocationFee      { get; set; } // decimal(65,30)
		[Column,    Nullable] public decimal?  ChangeEquipmentFee      { get; set; } // decimal(65,30)
		[Column,    Nullable] public decimal?  UpgradeFee              { get; set; } // decimal(65,30)
		[Column,    Nullable] public decimal?  ChangingPackageFee      { get; set; } // decimal(65,30)
		[Column,    Nullable] public bool?     IsTechnicalConfirmation { get; set; } // tinyint(1)
		[Column,    Nullable] public bool?     IsAppendix              { get; set; } // tinyint(1)
		[Column,    Nullable] public int?      OutContractId           { get; set; } // int(11)
		[Column,    Nullable] public bool?     HasEquipment            { get; set; } // tinyint(1)

		#region Associations

		/// <summary>
		/// FK_AttachmentFiles_Transactions_TransactionId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="TransactionId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AttachmentFile> FK_AttachmentFiles_Transactions_TransactionId_BackReferences { get; set; }

		/// <summary>
		/// FK_TransactionServicePackages_Transactions_TransactionId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="TransactionId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<TransactionServicePackage> FK_TransactionServicePackages_Transactions_TransactionId_BackReferences { get; set; }

		/// <summary>
		/// FK_Transactions_OutContracts_OutContractId
		/// </summary>
		[Association(ThisKey="OutContractId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_Transactions_OutContracts_OutContractId", BackReferenceName="FK_Transactions_OutContracts_OutContractId_BackReferences")]
		public OutContract Transactions_OutContracts_OutContractId { get; set; }

		/// <summary>
		/// FK_Transactions_TransactionReasons_ReasonType
		/// </summary>
		[Association(ThisKey="ReasonType", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_Transactions_TransactionReasons_ReasonType", BackReferenceName="FK_Transactions_TransactionReasons_ReasonType_BackReferences")]
		public TransactionReason Transactions_TransactionReasons_ReasonType { get; set; }

		#endregion
	}

	[Serializable]
	[Table("TransactionChannelPoints")]
	public partial class TransactionChannelPoint : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                        { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                    { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                    { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                      { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                      { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                       { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                      { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                   { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath               { get; set; } // longtext
		[Column, NotNull    ] public int       CurrencyUnitId                 { get; set; } // int(11)
		[Column,    Nullable] public string    CurrencyUnitCode               { get; set; } // longtext
		[Column,    Nullable] public string    LocationId                     { get; set; } // varchar(68)
		[Column, NotNull    ] public int       PointType                      { get; set; } // int(11)
		[Column,    Nullable] public string    InstallationAddress_Building   { get; set; } // varchar(256)
		[Column,    Nullable] public string    InstallationAddress_Floor      { get; set; } // varchar(256)
		[Column,    Nullable] public string    InstallationAddress_RoomNumber { get; set; } // varchar(256)
		[Column,    Nullable] public string    InstallationAddress_Street     { get; set; } // varchar(256)
		[Column,    Nullable] public string    InstallationAddress_District   { get; set; } // varchar(256)
		[Column,    Nullable] public string    InstallationAddress_DistrictId { get; set; } // varchar(256)
		[Column,    Nullable] public string    InstallationAddress_City       { get; set; } // varchar(256)
		[Column,    Nullable] public string    InstallationAddress_CityId     { get; set; } // varchar(256)
		[Column, NotNull    ] public decimal   InstallationFee                { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   OtherFee                       { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   MonthlyCost                    { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   EquipmentAmount                { get; set; } // decimal(65,30)
		[Column, NotNull    ] public bool      ApplyFeeToChannel              { get; set; } // tinyint(1)

		#region Associations

		/// <summary>
		/// FK_TransactionEquipments_TransactionChannelPoints_OutputChannel~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OutputChannelPointId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<TransactionEquipment> FK_TransactionEquipments_TransactionChannelPoints_OutputChannel__BackReferences { get; set; }

		/// <summary>
		/// FK_TransactionServicePackages_TransactionChannelPoints_EndPoint~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="EndPointChannelId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<TransactionServicePackage> FK_TransactionServicePackages_TransactionChannelPoints_EndPoint__BackReferences { get; set; }

		/// <summary>
		/// FK_TransactionServicePackages_TransactionChannelPoints_StartPoi~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="StartPointChannelId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<TransactionServicePackage> FK_TransactionServicePackages_TransactionChannelPoints_StartPoi__BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("TransactionChannelTaxes")]
	public partial class TransactionChannelTax : BaseIntEntity
	{
		[PrimaryKey(1), NotNull    ] public int    TaxCategoryId               { get; set; } // int(11)
		[PrimaryKey(2), NotNull    ] public int    TransactionServicePackageId { get; set; } // int(11)
		[Column,           Nullable] public string TaxCategoryName             { get; set; } // varchar(256)
		[Column,           Nullable] public string TaxCategoryCode             { get; set; } // varchar(256)
		[Column,        NotNull    ] public float  TaxValue                    { get; set; } // float
		[Column,        NotNull    ] public int    TransactionId               { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_TransactionChannelTaxes_TaxCategories_TaxCategoryId
		/// </summary>
		[Association(ThisKey="TaxCategoryId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_TransactionChannelTaxes_TaxCategories_TaxCategoryId", BackReferenceName="FK_TransactionChannelTaxes_TaxCategories_TaxCategoryId_BackReferences")]
		public TaxCategory TransactionChannelTaxes_TaxCategories_TaxCategoryId { get; set; }

		/// <summary>
		/// FK_TransactionChannelTaxes_TransactionServicePackages_Transacti~
		/// </summary>
		[Association(ThisKey="TransactionServicePackageId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_TransactionChannelTaxes_TransactionServicePackages_Transacti~", BackReferenceName="FK_TransactionChannelTaxes_TransactionServicePackages_Transacti__BackReferences")]
		public TransactionServicePackage TransactionChannelTaxes_TransactionServicePackages_Transacti_ { get; set; }

		#endregion
	}

	[Serializable]
	[Table("TransactionEquipments")]
	public partial class TransactionEquipment : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                     { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                   { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                   { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                    { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath            { get; set; } // longtext
		[Column, NotNull    ] public int       CurrencyUnitId              { get; set; } // int(11)
		[Column,    Nullable] public string    CurrencyUnitCode            { get; set; } // longtext
		[Column, NotNull    ] public int       OutputChannelPointId        { get; set; } // int(11)
		[Column, NotNull    ] public int       OutContractPackageId        { get; set; } // int(11)
		[Column,    Nullable] public string    EquipmentName               { get; set; } // longtext
		[Column,    Nullable] public string    EquipmentPictureUrl         { get; set; } // longtext
		[Column,    Nullable] public string    EquipmentUom                { get; set; } // longtext
		[Column, NotNull    ] public decimal   UnitPrice                   { get; set; } // decimal(65,30)
		[Column, NotNull    ] public float     ExaminedUnit                { get; set; } // float
		[Column, NotNull    ] public float     RealUnit                    { get; set; } // float
		[Column, NotNull    ] public float     ReclaimedUnit               { get; set; } // float
		[Column, NotNull    ] public bool      IsInSurveyPlan              { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsFree                      { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      HasToReclaim                { get; set; } // tinyint(1)
		[Column,    Nullable] public string    SerialCode                  { get; set; } // longtext
		[Column,    Nullable] public string    MacAddressCode              { get; set; } // longtext
		[Column,    Nullable] public string    DeviceCode                  { get; set; } // longtext
		[Column,    Nullable] public string    Manufacturer                { get; set; } // longtext
		[Column,    Nullable] public string    Specifications              { get; set; } // longtext
		[Column, NotNull    ] public int       StatusId                    { get; set; } // int(11)
		[Column, NotNull    ] public int       EquipmentId                 { get; set; } // int(11)
		[Column,    Nullable] public int?      EquipmentStatusId           { get; set; } // int(11)
		[Column, NotNull    ] public decimal   SubTotal                    { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   GrandTotal                  { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   ExaminedSubTotal            { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   ExaminedGrandTotal          { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   RealSubTotal                { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   RealGrandTotal              { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   ReclaimedSubTotal           { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   ReclaimedGrandTotal         { get; set; } // decimal(65,30)
		[Column,    Nullable] public int?      TransactionId               { get; set; } // int(11)
		[Column,    Nullable] public int?      TransactionServicePackageId { get; set; } // int(11)
		[Column,    Nullable] public int?      ContractEquipmentId         { get; set; } // int(11)
		[Column, NotNull    ] public int       OldEquipmentId              { get; set; } // int(11)
		[Column,    Nullable] public bool?     IsOld                       { get; set; } // tinyint(1)
		[Column,    Nullable] public string    ServiceName                 { get; set; } // longtext
		[Column,    Nullable] public string    PackageName                 { get; set; } // longtext
		[Column,    Nullable] public bool?     IsAcceptanced               { get; set; } // tinyint(1)

		#region Associations

		/// <summary>
		/// FK_ContractEquipments_TransactionEquipments_TransactionEquipmen~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="TransactionEquipmentId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContractEquipment> FK_ContractEquipments_TransactionEquipments_TransactionEquipmen__BackReferences { get; set; }

		/// <summary>
		/// FK_TransactionEquipments_EquipmentStatuses_EquipmentStatusId
		/// </summary>
		[Association(ThisKey="EquipmentStatusId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_TransactionEquipments_EquipmentStatuses_EquipmentStatusId", BackReferenceName="FK_TransactionEquipments_EquipmentStatuses_EquipmentStatusId_BackReferences")]
		public EquipmentStatus TransactionEquipments_EquipmentStatuses_EquipmentStatusId { get; set; }

		/// <summary>
		/// FK_TransactionEquipments_TransactionChannelPoints_OutputChannel~
		/// </summary>
		[Association(ThisKey="OutputChannelPointId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_TransactionEquipments_TransactionChannelPoints_OutputChannel~", BackReferenceName="FK_TransactionEquipments_TransactionChannelPoints_OutputChannel__BackReferences")]
		public TransactionChannelPoint TransactionEquipments_TransactionChannelPoints_OutputChannel_ { get; set; }

		#endregion
	}

	[Serializable]
	[Table("TransactionPriceBusTables")]
	public partial class TransactionPriceBusTable : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                     { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                   { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                   { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                    { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath            { get; set; } // longtext
		[Column,    Nullable] public string    CurrencyUnitCode            { get; set; } // longtext
		[Column,    Nullable] public decimal?  UsageValueFrom              { get; set; } // decimal(65,30)
		[Column,    Nullable] public decimal?  UsageBaseUomValueFrom       { get; set; } // decimal(65,30)
		[Column,    Nullable] public int?      UsageValueFromUomId         { get; set; } // int(11)
		[Column,    Nullable] public decimal?  UsageValueTo                { get; set; } // decimal(65,30)
		[Column,    Nullable] public decimal?  UsageBaseUomValueTo         { get; set; } // decimal(65,30)
		[Column,    Nullable] public int?      UsageValueToUomId           { get; set; } // int(11)
		[Column, NotNull    ] public decimal   BasedPriceValue             { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   PriceValue                  { get; set; } // decimal(65,30)
		[Column, NotNull    ] public int       PriceUnitUomId              { get; set; } // int(11)
		[Column,    Nullable] public bool?     IsDomestic                  { get; set; } // tinyint(1)
		[Column,    Nullable] public int?      TransactionServicePackageId { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_TransactionPriceBusTables_TransactionServicePackages_Transac~
		/// </summary>
		[Association(ThisKey="TransactionServicePackageId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_TransactionPriceBusTables_TransactionServicePackages_Transac~", BackReferenceName="FK_TransactionPriceBusTables_TransactionServicePackages_Transac__BackReferences")]
		public TransactionServicePackage TransactionPriceBusTables_TransactionServicePackages_Transac_ { get; set; }

		#endregion
	}

	[Serializable]
	[Table("TransactionPromotionForContracts")]
	public partial class TransactionPromotionForContract : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                     { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                   { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                   { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                    { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath            { get; set; } // longtext
		[Column,    Nullable] public int?      OutContractServicePackageId { get; set; } // int(11)
		[Column, NotNull    ] public int       PromotionDetailId           { get; set; } // int(11)
		[Column, NotNull    ] public decimal   PromotionValue              { get; set; } // decimal(65,30)
		[Column,    Nullable] public int?      PromotionValueType          { get; set; } // int(11)
		[Column, NotNull    ] public bool      IsApplied                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       NumberMonthApplied          { get; set; } // int(11)
		[Column, NotNull    ] public int       PromotionId                 { get; set; } // int(11)
		[Column,    Nullable] public string    PromotionName               { get; set; } // longtext
		[Column, NotNull    ] public int       PromotionType               { get; set; } // int(11)
		[Column,    Nullable] public string    PromotionTypeName           { get; set; } // longtext
		[Column, NotNull    ] public int       TransactionServicePackageId { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_TransactionPromotionForContracts_TransactionServicePackages_~
		/// </summary>
		[Association(ThisKey="TransactionServicePackageId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_TransactionPromotionForContracts_TransactionServicePackages_~", BackReferenceName="FK_TransactionPromotionForContracts_TransactionServicePackages___BackReferences")]
		public TransactionServicePackage TransactionPromotionForContracts_TransactionServicePackages__ { get; set; }

		#endregion
	}

	[Serializable]
	[Table("TransactionReasons")]
	public partial class TransactionReason : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    Name             { get; set; } // longtext
		[Column, NotNull    ] public int       ReasonType       { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_Transactions_TransactionReasons_ReasonType_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ReasonType", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Transaction> FK_Transactions_TransactionReasons_ReasonType_BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("TransactionServicePackages")]
	public partial class TransactionServicePackage : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                      { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                  { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                  { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                    { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                    { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                     { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                    { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                 { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath             { get; set; } // longtext
		[Column, NotNull    ] public int       Type                         { get; set; } // int(11)
		[Column,    Nullable] public string    CableRoutingNumber           { get; set; } // longtext
		[Column, NotNull    ] public int       CurrencyUnitId               { get; set; } // int(11)
		[Column,    Nullable] public string    CurrencyUnitCode             { get; set; } // longtext
		[Column,    Nullable] public int?      ServicePackageId             { get; set; } // int(11)
		[Column, NotNull    ] public int       ServiceId                    { get; set; } // int(11)
		[Column, NotNull    ] public string    ServiceName                  { get; set; } // varchar(256)
		[Column,    Nullable] public string    PackageName                  { get; set; } // varchar(256)
		[Column, NotNull    ] public bool      IsFreeStaticIp               { get; set; } // tinyint(1)
		[Column,    Nullable] public string    BandwidthLabel               { get; set; } // varchar(256)
		[Column, NotNull    ] public float     InternationalBandwidth       { get; set; } // float
		[Column, NotNull    ] public float     DomesticBandwidth            { get; set; } // float
		[Column,    Nullable] public string    InternationalBandwidthUom    { get; set; } // longtext
		[Column,    Nullable] public string    DomesticBandwidthUom         { get; set; } // longtext
		[Column,    Nullable] public int?      TimeLine_PrepayPeriod        { get; set; } // int(11)
		[Column,    Nullable] public int?      TimeLine_PaymentPeriod       { get; set; } // int(11)
		[Column,    Nullable] public DateTime? TimeLine_Effective           { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_Signed              { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_StartBilling        { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_LatestBilling       { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_NextBilling         { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_SuspensionStartDate { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_SuspensionEndDate   { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? TimeLine_TerminateDate       { get; set; } // datetime(6)
		[Column,    Nullable] public int?      TimeLine_DaysSuspended       { get; set; } // int(11)
		[Column,    Nullable] public int?      TimeLine_DaysPromotion       { get; set; } // int(11)
		[Column,    Nullable] public int?      TimeLine_PaymentForm         { get; set; } // int(11)
		[Column,    Nullable] public string    CustomerCode                 { get; set; } // varchar(256)
		[Column,    Nullable] public string    CId                          { get; set; } // varchar(256)
		[Column,    Nullable] public string    RadiusAccount                { get; set; } // varchar(256)
		[Column,    Nullable] public string    RadiusPassword               { get; set; } // varchar(256)
		[Column, NotNull    ] public decimal   InstallationFee              { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   OtherFee                     { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   OrgPackagePrice              { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   PackagePrice                 { get; set; } // decimal(65,30)
		[Column, NotNull    ] public float     LineQuantity                 { get; set; } // float
		[Column,    Nullable] public float?    CableKilometers              { get; set; } // float
		[Column,    Nullable] public int?      StartPointChannelId          { get; set; } // int(11)
		[Column, NotNull    ] public int       EndPointChannelId            { get; set; } // int(11)
		[Column, NotNull    ] public decimal   PromotionAmount              { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   EquipmentAmount              { get; set; } // decimal(65,30)
		[Column, NotNull    ] public int       StatusId                     { get; set; } // int(11)
		[Column, NotNull    ] public decimal   SubTotalBeforeTax            { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   GrandTotalBeforeTax          { get; set; } // decimal(65,30)
		[Column, NotNull    ] public float     TaxPercent                   { get; set; } // float
		[Column, NotNull    ] public decimal   TaxAmount                    { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   SubTotal                     { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   GrandTotal                   { get; set; } // decimal(65,30)
		[Column,    Nullable] public int?      TransactionServicePackageId  { get; set; } // int(11)
		[Column,    Nullable] public int?      OldId                        { get; set; } // int(11)
		[Column, NotNull    ] public bool      IsInFirstBilling             { get; set; } // tinyint(1)
		[Column,    Nullable] public int?      RadiusServerId               { get; set; } // int(11)
		[Column, NotNull    ] public int       ChannelGroupId               { get; set; } // int(11)
		[Column, NotNull    ] public int       PaymentTargetId              { get; set; } // int(11)
		[Column, NotNull    ] public int       FlexiblePricingTypeId        { get; set; } // int(11)
		[Column,    Nullable] public decimal?  MaxSubTotal                  { get; set; } // decimal(65,30)
		[Column,    Nullable] public decimal?  MinSubTotal                  { get; set; } // decimal(65,30)
		[Column, NotNull    ] public byte      IsDefaultSLAByServiceId      { get; set; } // tinyint(3) unsigned
		[Column, NotNull    ] public bool      IsRadiusAccountCreated       { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsHasServicePackage          { get; set; } // tinyint(1)
		[Column,    Nullable] public bool?     IsTechnicalConfirmation      { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      HasStartAndEndPoint          { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      HasDistinguishBandwidth      { get; set; } // tinyint(1)
		[Column,    Nullable] public string    Note                         { get; set; } // varchar(1000)
		[Column,    Nullable] public int?      OutContractId                { get; set; } // int(11)
		[Column,    Nullable] public int?      InContractId                 { get; set; } // int(11)
		[Column, NotNull    ] public int       OutContractServicePackageId  { get; set; } // int(11)
		[Column, NotNull    ] public int       TransactionId                { get; set; } // int(11)
		[Column,    Nullable] public bool?     IsOld                        { get; set; } // tinyint(1)
		[Column,    Nullable] public bool?     IsAcceptanced                { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      NeedEnterStartPoint          { get; set; } // tinyint(1)

		#region Associations

		/// <summary>
		/// FK_OutContractServicePackages_TransactionServicePackages_Transa~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="TransactionServicePackageId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OutContractServicePackage> FK_OutContractServicePackages_TransactionServicePackages_Transa__BackReferences { get; set; }

		/// <summary>
		/// FK_TransactionChannelTaxes_TransactionServicePackages_Transacti~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="TransactionServicePackageId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<TransactionChannelTax> FK_TransactionChannelTaxes_TransactionServicePackages_Transacti__BackReferences { get; set; }

		/// <summary>
		/// FK_TransactionPriceBusTables_TransactionServicePackages_Transac~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="TransactionServicePackageId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<TransactionPriceBusTable> FK_TransactionPriceBusTables_TransactionServicePackages_Transac__BackReferences { get; set; }

		/// <summary>
		/// FK_TransactionPromotionForContracts_TransactionServicePackages_~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="TransactionServicePackageId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<TransactionPromotionForContract> FK_TransactionPromotionForContracts_TransactionServicePackages___BackReferences { get; set; }

		/// <summary>
		/// FK_TransactionSLAs_TransactionServicePackages_TransactionServic~_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="TransactionServicePackageId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<TransactionSLA> FK_TransactionSLAs_TransactionServicePackages_TransactionServic__BackReferences { get; set; }

		/// <summary>
		/// FK_TransactionServicePackages_Contractors_PaymentTargetId
		/// </summary>
		[Association(ThisKey="PaymentTargetId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_TransactionServicePackages_Contractors_PaymentTargetId", BackReferenceName="FK_TransactionServicePackages_Contractors_PaymentTargetId_BackReferences")]
		public Contractor TransactionServicePackages_Contractors_PaymentTargetId { get; set; }

		/// <summary>
		/// FK_TransactionServicePackages_TransactionChannelPoints_EndPoint~
		/// </summary>
		[Association(ThisKey="EndPointChannelId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_TransactionServicePackages_TransactionChannelPoints_EndPoint~", BackReferenceName="FK_TransactionServicePackages_TransactionChannelPoints_EndPoint__BackReferences")]
		public TransactionChannelPoint TransactionServicePackages_TransactionChannelPoints_EndPoint_ { get; set; }

		/// <summary>
		/// FK_TransactionServicePackages_TransactionChannelPoints_StartPoi~
		/// </summary>
		[Association(ThisKey="StartPointChannelId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_TransactionServicePackages_TransactionChannelPoints_StartPoi~", BackReferenceName="FK_TransactionServicePackages_TransactionChannelPoints_StartPoi__BackReferences")]
		public TransactionChannelPoint TransactionServicePackages_TransactionChannelPoints_StartPoi_ { get; set; }

		/// <summary>
		/// FK_TransactionServicePackages_Transactions_TransactionId
		/// </summary>
		[Association(ThisKey="TransactionId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_TransactionServicePackages_Transactions_TransactionId", BackReferenceName="FK_TransactionServicePackages_Transactions_TransactionId_BackReferences")]
		public Transaction TransactionServicePackages_Transactions_TransactionId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("TransactionSLAs")]
	public partial class TransactionSLA : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                     { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                   { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                   { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                    { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                   { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder                { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath            { get; set; } // longtext
		[Column, NotNull    ] public int       ServiceId                   { get; set; } // int(11)
		[Column, NotNull    ] public bool      IsDefault                   { get; set; } // tinyint(1)
		[Column,    Nullable] public string    Uid                         { get; set; } // varchar(68)
		[Column,    Nullable] public string    Label                       { get; set; } // varchar(256)
		[Column,    Nullable] public string    Content                     { get; set; } // varchar(2000)
		[Column, NotNull    ] public int       TransactionServicePackageId { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_TransactionSLAs_TransactionServicePackages_TransactionServic~
		/// </summary>
		[Association(ThisKey="TransactionServicePackageId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_TransactionSLAs_TransactionServicePackages_TransactionServic~", BackReferenceName="FK_TransactionSLAs_TransactionServicePackages_TransactionServic__BackReferences")]
		public TransactionServicePackage TransactionSLAs_TransactionServicePackages_TransactionServic_ { get; set; }

		#endregion
	}

	[Serializable]
	[Table("TransactionStatuses")]
	public partial class TransactionStatus : BaseIntEntity
	{
		[Column, Nullable] public string Name { get; set; } // longtext
	}

	[Serializable]
	[Table("TransactionType")]
	public partial class TransactionType : BaseIntEntity
	{
		[Column, Nullable] public string Name       { get; set; } // longtext
		[Column, Nullable] public string Permission { get; set; } // longtext
	}

	[Serializable]
	[Table("UnitOfMeasurement")]
	public partial class UnitOfMeasurement : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    Label            { get; set; } // longtext
		[Column,    Nullable] public string    Description      { get; set; } // longtext
		[Column, NotNull    ] public int       Type             { get; set; } // int(11)
		[Column, NotNull    ] public bool      IsRequired       { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsBaseOfType     { get; set; } // tinyint(1)
		[Column, NotNull    ] public decimal   ConversionRate   { get; set; } // decimal(65,30)

		#region Associations

		/// <summary>
		/// FK_ServicePackages_UnitOfMeasurement_DomesticBandwidthUomId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="DomesticBandwidthUomId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ServicePackage> FK_ServicePackages_UnitOfMeasurement_DomesticBandwidthUomId_BackReferences { get; set; }

		/// <summary>
		/// FK_ServicePackages_UnitOfMeasurement_InternationalBandwidthUomId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="InternationalBandwidthUomId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ServicePackage> FK_ServicePackages_UnitOfMeasurement_InternationalBandwidthUomId_BackReferences { get; set; }

		#endregion
	}

	public static partial class FbmContractDataConnectionStoredProcedures
	{
		#region ChangeEquipments

		public static int ChangeEquipments(this FbmContractDataConnection dataConnection, string transactionIds, int? transactionType, string acceptanceStaff, ref bool? IsSuccess)
		{
			var ret = dataConnection.ExecuteProc("`ChangeEquipments`",
				new DataParameter("transactionIds", transactionIds, LinqToDB.DataType.VarChar),
				new DataParameter("transactionType", transactionType, LinqToDB.DataType.Int32),
				new DataParameter("acceptanceStaff", acceptanceStaff, LinqToDB.DataType.VarChar),
				new DataParameter("IsSuccess", IsSuccess, LinqToDB.DataType.SByte) { Direction = ParameterDirection.InputOutput });

			IsSuccess = Converter.ChangeTypeTo<bool?>(((IDbDataParameter)dataConnection.Command.Parameters["IsSuccess"]).Value);

			return ret;
		}

		#endregion

		#region ChangeLocationServices

		public static int ChangeLocationServices(this FbmContractDataConnection dataConnection, string transactionIds, int? transactionType, string acceptanceStaff, ref bool? IsSuccess)
		{
			var ret = dataConnection.ExecuteProc("`ChangeLocationServices`",
				new DataParameter("transactionIds", transactionIds, LinqToDB.DataType.VarChar),
				new DataParameter("transactionType", transactionType, LinqToDB.DataType.Int32),
				new DataParameter("acceptanceStaff", acceptanceStaff, LinqToDB.DataType.VarChar),
				new DataParameter("IsSuccess", IsSuccess, LinqToDB.DataType.SByte) { Direction = ParameterDirection.InputOutput });

			IsSuccess = Converter.ChangeTypeTo<bool?>(((IDbDataParameter)dataConnection.Command.Parameters["IsSuccess"]).Value);

			return ret;
		}

		#endregion

		#region GetContractorInProjectOfOutContract

		public static IEnumerable<GetContractorInProjectOfOutContractResult> GetContractorInProjectOfOutContract(this FbmContractDataConnection dataConnection, int? skips, int? take, string startDate, string endDate, string projectIds, string packageIds)
		{
			return dataConnection.QueryProc<GetContractorInProjectOfOutContractResult>("`GetContractorInProjectOfOutContract`",
				new DataParameter("skips",      skips,      LinqToDB.DataType.Int32),
				new DataParameter("take",       take,       LinqToDB.DataType.Int32),
				new DataParameter("startDate",  startDate,  LinqToDB.DataType.VarChar),
				new DataParameter("endDate",    endDate,    LinqToDB.DataType.VarChar),
				new DataParameter("projectIds", projectIds, LinqToDB.DataType.VarChar),
				new DataParameter("packageIds", packageIds, LinqToDB.DataType.VarChar));
		}

		public partial class GetContractorInProjectOfOutContractResult
		{
			public int?     ProjectId         { get; set; }
			public string   ProjectName       { get; set; }
			public decimal? TotalCustomerQuit { get; set; }
			public long     TotalCustomer     { get; set; }
			public long     Total             { get; set; }
		}

		#endregion

		#region GetCustomerInMarketArea

		public static IEnumerable<GetCustomerInMarketAreaResult> GetCustomerInMarketArea(this FbmContractDataConnection dataConnection, string startDate, string endDate)
		{
			return dataConnection.QueryProc<GetCustomerInMarketAreaResult>("`GetCustomerInMarketArea`",
				new DataParameter("startDate", startDate, LinqToDB.DataType.VarChar),
				new DataParameter("endDate",   endDate,   LinqToDB.DataType.VarChar));
		}

		public partial class GetCustomerInMarketAreaResult
		{
			public decimal? TotalNorth  { get; set; }
			public decimal? TotalCenter { get; set; }
			public decimal? TotalSouth  { get; set; }
			public long     Total       { get; set; }
		}

		#endregion

		#region GetExpiredOutContract

		public static IEnumerable<GetExpiredOutContractResult> GetExpiredOutContract(this FbmContractDataConnection dataConnection)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new GetExpiredOutContractResult
				{
					Id                 = Converter.ChangeTypeTo<int>      (dataReader.GetValue(0), ms),
					Culture            = Converter.ChangeTypeTo<string>   (dataReader.GetValue(1), ms),
					CreatedDate        = Converter.ChangeTypeTo<DateTime> (dataReader.GetValue(2), ms),
					UpdatedDate        = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(3), ms),
					CreatedBy          = Converter.ChangeTypeTo<string>   (dataReader.GetValue(4), ms),
					UpdatedBy          = Converter.ChangeTypeTo<string>   (dataReader.GetValue(5), ms),
					IsActive           = Converter.ChangeTypeTo<bool>     (dataReader.GetValue(6), ms),
					DisplayOrder       = Converter.ChangeTypeTo<int>      (dataReader.GetValue(7), ms),
					IdentityGuid       = Converter.ChangeTypeTo<string>   (dataReader.GetValue(8), ms),
					ContractCode       = Converter.ChangeTypeTo<string>   (dataReader.GetValue(9), ms),
					AgentCode          = Converter.ChangeTypeTo<string>   (dataReader.GetValue(10), ms),
					MarketAreaId       = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(11), ms),
					MarketAreaName     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(12), ms),
					ProjectId          = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(13), ms),
					ProjectName        = Converter.ChangeTypeTo<string>   (dataReader.GetValue(14), ms),
					ContractTypeId     = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(15), ms),
					ContractStatusId   = Converter.ChangeTypeTo<int>      (dataReader.GetValue(16), ms),
					ContractorId       = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(17), ms),
					SignedUserId       = Converter.ChangeTypeTo<string>   (dataReader.GetValue(18), ms),
					SalesmanId         = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(19), ms),
					Description        = Converter.ChangeTypeTo<string>   (dataReader.GetValue(20), ms),
					FiberNodeInfo      = Converter.ChangeTypeTo<string>   (dataReader.GetValue(21), ms),
					ContractNote       = Converter.ChangeTypeTo<string>   (dataReader.GetValue(22), ms),
					AgentContractCode  = Converter.ChangeTypeTo<string>   (dataReader.GetValue(23), ms),
					OrganizationUnitId = Converter.ChangeTypeTo<string>   (dataReader.GetValue(24), ms),
					CashierUserId      = Converter.ChangeTypeTo<string>   (dataReader.GetValue(25), ms),
					Form               = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(26), ms),
					Method             = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(27), ms),
					Address            = Converter.ChangeTypeTo<string>   (dataReader.GetValue(28), ms),
					RenewPeriod        = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(29), ms),
					PaymentPeriod      = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(30), ms),
					Expiration         = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(31), ms),
					Liquidation        = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(32), ms),
					Effective          = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(33), ms),
					Signed             = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(34), ms),
					Column36           = Converter.ChangeTypeTo<int>      (dataReader.GetValue(35), ms),
					Column37           = Converter.ChangeTypeTo<string>   (dataReader.GetValue(36), ms),
					ContractorCode     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(37), ms),
					ContractorFullName = Converter.ChangeTypeTo<string>   (dataReader.GetValue(38), ms),
					ContractorPhone    = Converter.ChangeTypeTo<string>   (dataReader.GetValue(39), ms),
					ContractorEmail    = Converter.ChangeTypeTo<string>   (dataReader.GetValue(40), ms),
					ContractorFax      = Converter.ChangeTypeTo<string>   (dataReader.GetValue(41), ms),
					ContractorAddress  = Converter.ChangeTypeTo<string>   (dataReader.GetValue(42), ms),
					ContractorIdNo     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(43), ms),
					ContractorTaxIdNo  = Converter.ChangeTypeTo<string>   (dataReader.GetValue(44), ms),
					IsEnterprise       = Converter.ChangeTypeTo<bool>     (dataReader.GetValue(45), ms),
					IsBuyer            = Converter.ChangeTypeTo<bool>     (dataReader.GetValue(46), ms),
				},
				"`GetExpiredOutContract`");
		}

		public partial class GetExpiredOutContractResult
		{
			                         public int       Id                 { get; set; }
			                         public string    Culture            { get; set; }
			                         public DateTime  CreatedDate        { get; set; }
			                         public DateTime? UpdatedDate        { get; set; }
			                         public string    CreatedBy          { get; set; }
			                         public string    UpdatedBy          { get; set; }
			                         public bool      IsActive           { get; set; }
			                         public int       DisplayOrder       { get; set; }
			                         public string    IdentityGuid       { get; set; }
			                         public string    ContractCode       { get; set; }
			                         public string    AgentCode          { get; set; }
			                         public int?      MarketAreaId       { get; set; }
			                         public string    MarketAreaName     { get; set; }
			                         public int?      ProjectId          { get; set; }
			                         public string    ProjectName        { get; set; }
			                         public int?      ContractTypeId     { get; set; }
			                         public int       ContractStatusId   { get; set; }
			                         public int?      ContractorId       { get; set; }
			                         public string    SignedUserId       { get; set; }
			                         public int?      SalesmanId         { get; set; }
			                         public string    Description        { get; set; }
			                         public string    FiberNodeInfo      { get; set; }
			                         public string    ContractNote       { get; set; }
			                         public string    AgentContractCode  { get; set; }
			                         public string    OrganizationUnitId { get; set; }
			                         public string    CashierUserId      { get; set; }
			                         public int?      Form               { get; set; }
			                         public int?      Method             { get; set; }
			                         public string    Address            { get; set; }
			                         public int?      RenewPeriod        { get; set; }
			                         public int?      PaymentPeriod      { get; set; }
			                         public DateTime? Expiration         { get; set; }
			                         public DateTime? Liquidation        { get; set; }
			                         public DateTime? Effective          { get; set; }
			                         public DateTime? Signed             { get; set; }
			[Column("Id")          ] public int       Column36           { get; set; }
			[Column("IdentityGuid")] public string    Column37           { get; set; }
			                         public string    ContractorCode     { get; set; }
			                         public string    ContractorFullName { get; set; }
			                         public string    ContractorPhone    { get; set; }
			                         public string    ContractorEmail    { get; set; }
			                         public string    ContractorFax      { get; set; }
			                         public string    ContractorAddress  { get; set; }
			                         public string    ContractorIdNo     { get; set; }
			                         public string    ContractorTaxIdNo  { get; set; }
			                         public bool      IsEnterprise       { get; set; }
			                         public bool      IsBuyer            { get; set; }
		}

		#endregion

		#region GetInContractTotalQuantityEveryMonth

		public static IEnumerable<GetInContractTotalQuantityEveryMonthResult> GetInContractTotalQuantityEveryMonth(this FbmContractDataConnection dataConnection)
		{
			return dataConnection.QueryProc<GetInContractTotalQuantityEveryMonthResult>("`GetInContractTotalQuantityEveryMonth`");
		}

		public partial class GetInContractTotalQuantityEveryMonthResult
		{
			public decimal? ValueMonth1  { get; set; }
			public decimal? ValueMonth2  { get; set; }
			public decimal? ValueMonth3  { get; set; }
			public decimal? ValueMonth4  { get; set; }
			public decimal? ValueMonth5  { get; set; }
			public decimal? ValueMonth6  { get; set; }
			public decimal? ValueMonth7  { get; set; }
			public decimal? ValueMonth8  { get; set; }
			public decimal? ValueMonth9  { get; set; }
			public decimal? ValueMonth10 { get; set; }
			public decimal? ValueMonth11 { get; set; }
			public decimal? ValueMonth12 { get; set; }
			public long     Total        { get; set; }
		}

		#endregion

		#region GetNeedToPaymentContractServices

		public static IEnumerable<GetNeedToPaymentContractServicesResult> GetNeedToPaymentContractServices(this FbmContractDataConnection dataConnection)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new GetNeedToPaymentContractServicesResult
				{
					Id                            = Converter.ChangeTypeTo<int>      (dataReader.GetValue(0), ms),
					CurrencyUnitId                = Converter.ChangeTypeTo<int>      (dataReader.GetValue(1), ms),
					CurrencyUnitCode              = Converter.ChangeTypeTo<string>   (dataReader.GetValue(2), ms),
					Culture                       = Converter.ChangeTypeTo<string>   (dataReader.GetValue(3), ms),
					CreatedDate                   = Converter.ChangeTypeTo<DateTime> (dataReader.GetValue(4), ms),
					UpdatedDate                   = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(5), ms),
					CreatedBy                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(6), ms),
					UpdatedBy                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(7), ms),
					IsActive                      = Converter.ChangeTypeTo<bool>     (dataReader.GetValue(8), ms),
					DisplayOrder                  = Converter.ChangeTypeTo<int>      (dataReader.GetValue(9), ms),
					IdentityGuid                  = Converter.ChangeTypeTo<string>   (dataReader.GetValue(10), ms),
					ContractCode                  = Converter.ChangeTypeTo<string>   (dataReader.GetValue(11), ms),
					AgentCode                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(12), ms),
					MarketAreaId                  = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(13), ms),
					MarketAreaName                = Converter.ChangeTypeTo<string>   (dataReader.GetValue(14), ms),
					ProjectId                     = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(15), ms),
					ProjectName                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(16), ms),
					ContractTypeId                = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(17), ms),
					ContractStatusId              = Converter.ChangeTypeTo<int>      (dataReader.GetValue(18), ms),
					ContractorId                  = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(19), ms),
					SignedUserId                  = Converter.ChangeTypeTo<string>   (dataReader.GetValue(20), ms),
					SalesmanId                    = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(21), ms),
					Description                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(22), ms),
					TotalTaxPercent               = Converter.ChangeTypeTo<float>    (dataReader.GetValue(23), ms),
					FiberNodeInfo                 = Converter.ChangeTypeTo<string>   (dataReader.GetValue(24), ms),
					ContractNote                  = Converter.ChangeTypeTo<string>   (dataReader.GetValue(25), ms),
					AgentContractCode             = Converter.ChangeTypeTo<string>   (dataReader.GetValue(26), ms),
					OrganizationUnitId            = Converter.ChangeTypeTo<string>   (dataReader.GetValue(27), ms),
					CashierUserId                 = Converter.ChangeTypeTo<string>   (dataReader.GetValue(28), ms),
					CashierUserName               = Converter.ChangeTypeTo<string>   (dataReader.GetValue(29), ms),
					CashierFullName               = Converter.ChangeTypeTo<string>   (dataReader.GetValue(30), ms),
					NumberBillingLimitDays        = Converter.ChangeTypeTo<int>      (dataReader.GetValue(31), ms),
					Form                          = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(32), ms),
					Method                        = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(33), ms),
					Address                       = Converter.ChangeTypeTo<string>   (dataReader.GetValue(34), ms),
					Signed                        = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(35), ms),
					Effective                     = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(36), ms),
					Liquidation                   = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(37), ms),
					Expiration                    = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(38), ms),
					PaymentPeriod                 = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(39), ms),
					RenewPeriod                   = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(40), ms),
					Column42                      = Converter.ChangeTypeTo<int>      (dataReader.GetValue(41), ms),
					Column43                      = Converter.ChangeTypeTo<bool>     (dataReader.GetValue(42), ms),
					ServicePackageId              = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(43), ms),
					ServiceId                     = Converter.ChangeTypeTo<int>      (dataReader.GetValue(44), ms),
					ServiceName                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(45), ms),
					PackageName                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(46), ms),
					IsFreeStaticIp                = Converter.ChangeTypeTo<bool>     (dataReader.GetValue(47), ms),
					InternationalBandwidth        = Converter.ChangeTypeTo<float>    (dataReader.GetValue(48), ms),
					DomesticBandwidth             = Converter.ChangeTypeTo<float>    (dataReader.GetValue(49), ms),
					CustomerCode                  = Converter.ChangeTypeTo<string>   (dataReader.GetValue(50), ms),
					TaxAmount                     = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(51), ms),
					TaxPercent                    = Converter.ChangeTypeTo<float>    (dataReader.GetValue(52), ms),
					PackagePrice                  = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(53), ms),
					SubTotalBeforeTax             = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(54), ms),
					SubTotal                      = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(55), ms),
					GrandTotal                    = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(56), ms),
					GrandTotalBeforeTax           = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(57), ms),
					EquipmentAmount               = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(58), ms),
					InstallationFee               = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(59), ms),
					CId                           = Converter.ChangeTypeTo<string>   (dataReader.GetValue(60), ms),
					StartPointChannelId           = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(61), ms),
					EndPointChannelId             = Converter.ChangeTypeTo<int>      (dataReader.GetValue(62), ms),
					DomesticBandwidthUom          = Converter.ChangeTypeTo<string>   (dataReader.GetValue(63), ms),
					InternationalBandwidthUom     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(64), ms),
					OtherFee                      = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(65), ms),
					Column67                      = Converter.ChangeTypeTo<int>      (dataReader.GetValue(66), ms),
					Column68                      = Converter.ChangeTypeTo<string>   (dataReader.GetValue(67), ms),
					Column69                      = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(68), ms),
					Column70                      = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(69), ms),
					Column71                      = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(70), ms),
					LatestBilling                 = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(71), ms),
					NextBilling                   = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(72), ms),
					PrepayPeriod                  = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(73), ms),
					StartBilling                  = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(74), ms),
					SuspensionStartDate           = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(75), ms),
					SuspensionEndDate             = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(76), ms),
					TerminateDate                 = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(77), ms),
					Column79                      = Converter.ChangeTypeTo<int>      (dataReader.GetValue(78), ms),
					Column80                      = Converter.ChangeTypeTo<string>   (dataReader.GetValue(79), ms),
					ContractorFullName            = Converter.ChangeTypeTo<string>   (dataReader.GetValue(80), ms),
					ContractorCode                = Converter.ChangeTypeTo<string>   (dataReader.GetValue(81), ms),
					ContractorPhone               = Converter.ChangeTypeTo<string>   (dataReader.GetValue(82), ms),
					ContractorEmail               = Converter.ChangeTypeTo<string>   (dataReader.GetValue(83), ms),
					ContractorFax                 = Converter.ChangeTypeTo<string>   (dataReader.GetValue(84), ms),
					ContractorAddress             = Converter.ChangeTypeTo<string>   (dataReader.GetValue(85), ms),
					ContractorIdNo                = Converter.ChangeTypeTo<string>   (dataReader.GetValue(86), ms),
					ContractorTaxIdNo             = Converter.ChangeTypeTo<string>   (dataReader.GetValue(87), ms),
					IsEnterprise                  = Converter.ChangeTypeTo<bool>     (dataReader.GetValue(88), ms),
					IsBuyer                       = Converter.ChangeTypeTo<bool>     (dataReader.GetValue(89), ms),
					IsPartner                     = Converter.ChangeTypeTo<bool>     (dataReader.GetValue(90), ms),
					UserIdentityGuid              = Converter.ChangeTypeTo<string>   (dataReader.GetValue(91), ms),
					ApplicationUserIdentityGuid   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(92), ms),
					OutContractServicePackageId   = Converter.ChangeTypeTo<long>     (dataReader.GetValue(93), ms),
					TaxCategoryId                 = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(94), ms),
					TaxCategoryName               = Converter.ChangeTypeTo<string>   (dataReader.GetValue(95), ms),
					TaxCategoryCode               = Converter.ChangeTypeTo<string>   (dataReader.GetValue(96), ms),
					TaxValue                      = Converter.ChangeTypeTo<float?>   (dataReader.GetValue(97), ms),
					Column99                      = Converter.ChangeTypeTo<int>      (dataReader.GetValue(98), ms),
					Column100                     = Converter.ChangeTypeTo<int>      (dataReader.GetValue(99), ms),
					Column101                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(100), ms),
					PointType                     = Converter.ChangeTypeTo<int>      (dataReader.GetValue(101), ms),
					Column103                     = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(102), ms),
					Column104                     = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(103), ms),
					MonthlyCost                   = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(104), ms),
					Column106                     = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(105), ms),
					EndPointInstallationSpliter   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(106), ms),
					Building                      = Converter.ChangeTypeTo<string>   (dataReader.GetValue(107), ms),
					Floor                         = Converter.ChangeTypeTo<string>   (dataReader.GetValue(108), ms),
					RoomNumber                    = Converter.ChangeTypeTo<string>   (dataReader.GetValue(109), ms),
					Street                        = Converter.ChangeTypeTo<string>   (dataReader.GetValue(110), ms),
					District                      = Converter.ChangeTypeTo<string>   (dataReader.GetValue(111), ms),
					DistrictId                    = Converter.ChangeTypeTo<string>   (dataReader.GetValue(112), ms),
					City                          = Converter.ChangeTypeTo<string>   (dataReader.GetValue(113), ms),
					CityId                        = Converter.ChangeTypeTo<string>   (dataReader.GetValue(114), ms),
					Column116                     = Converter.ChangeTypeTo<long>     (dataReader.GetValue(115), ms),
					Column117                     = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(116), ms),
					Column118                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(117), ms),
					Column119                     = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(118), ms),
					Column120                     = Converter.ChangeTypeTo<decimal?> (dataReader.GetValue(119), ms),
					Column121                     = Converter.ChangeTypeTo<decimal?> (dataReader.GetValue(120), ms),
					Column122                     = Converter.ChangeTypeTo<decimal?> (dataReader.GetValue(121), ms),
					Column123                     = Converter.ChangeTypeTo<decimal?> (dataReader.GetValue(122), ms),
					StartPointInstallationSpliter = Converter.ChangeTypeTo<string>   (dataReader.GetValue(123), ms),
					Column125                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(124), ms),
					Column126                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(125), ms),
					Column127                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(126), ms),
					Column128                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(127), ms),
					Column129                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(128), ms),
					Column130                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(129), ms),
					Column131                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(130), ms),
					Column132                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(131), ms),
				},
				"`GetNeedToPaymentContractServices`");
		}

		public partial class GetNeedToPaymentContractServicesResult
		{
			                             public int       Id                            { get; set; }
			                             public int       CurrencyUnitId                { get; set; }
			                             public string    CurrencyUnitCode              { get; set; }
			                             public string    Culture                       { get; set; }
			                             public DateTime  CreatedDate                   { get; set; }
			                             public DateTime? UpdatedDate                   { get; set; }
			                             public string    CreatedBy                     { get; set; }
			                             public string    UpdatedBy                     { get; set; }
			                             public bool      IsActive                      { get; set; }
			                             public int       DisplayOrder                  { get; set; }
			                             public string    IdentityGuid                  { get; set; }
			                             public string    ContractCode                  { get; set; }
			                             public string    AgentCode                     { get; set; }
			                             public int?      MarketAreaId                  { get; set; }
			                             public string    MarketAreaName                { get; set; }
			                             public int?      ProjectId                     { get; set; }
			                             public string    ProjectName                   { get; set; }
			                             public int?      ContractTypeId                { get; set; }
			                             public int       ContractStatusId              { get; set; }
			                             public int?      ContractorId                  { get; set; }
			                             public string    SignedUserId                  { get; set; }
			                             public int?      SalesmanId                    { get; set; }
			                             public string    Description                   { get; set; }
			                             public float     TotalTaxPercent               { get; set; }
			                             public string    FiberNodeInfo                 { get; set; }
			                             public string    ContractNote                  { get; set; }
			                             public string    AgentContractCode             { get; set; }
			                             public string    OrganizationUnitId            { get; set; }
			                             public string    CashierUserId                 { get; set; }
			                             public string    CashierUserName               { get; set; }
			                             public string    CashierFullName               { get; set; }
			                             public int       NumberBillingLimitDays        { get; set; }
			                             public int?      Form                          { get; set; }
			                             public int?      Method                        { get; set; }
			                             public string    Address                       { get; set; }
			                             public DateTime? Signed                        { get; set; }
			                             public DateTime? Effective                     { get; set; }
			                             public DateTime? Liquidation                   { get; set; }
			                             public DateTime? Expiration                    { get; set; }
			                             public int?      PaymentPeriod                 { get; set; }
			                             public int?      RenewPeriod                   { get; set; }
			[Column("Id")              ] public int       Column42                      { get; set; }
			[Column("IsActive")        ] public bool      Column43                      { get; set; }
			                             public int?      ServicePackageId              { get; set; }
			                             public int       ServiceId                     { get; set; }
			                             public string    ServiceName                   { get; set; }
			                             public string    PackageName                   { get; set; }
			                             public bool      IsFreeStaticIp                { get; set; }
			                             public float     InternationalBandwidth        { get; set; }
			                             public float     DomesticBandwidth             { get; set; }
			                             public string    CustomerCode                  { get; set; }
			                             public decimal   TaxAmount                     { get; set; }
			                             public float     TaxPercent                    { get; set; }
			                             public decimal   PackagePrice                  { get; set; }
			                             public decimal   SubTotalBeforeTax             { get; set; }
			                             public decimal   SubTotal                      { get; set; }
			                             public decimal   GrandTotal                    { get; set; }
			                             public decimal   GrandTotalBeforeTax           { get; set; }
			                             public decimal   EquipmentAmount               { get; set; }
			                             public decimal   InstallationFee               { get; set; }
			                             public string    CId                           { get; set; }
			                             public int?      StartPointChannelId           { get; set; }
			                             public int       EndPointChannelId             { get; set; }
			                             public string    DomesticBandwidthUom          { get; set; }
			                             public string    InternationalBandwidthUom     { get; set; }
			                             public decimal   OtherFee                      { get; set; }
			[Column("CurrencyUnitId")  ] public int       Column67                      { get; set; }
			[Column("CurrencyUnitCode")] public string    Column68                      { get; set; }
			[Column("PaymentPeriod")   ] public int?      Column69                      { get; set; }
			[Column("Effective")       ] public DateTime? Column70                      { get; set; }
			[Column("Signed")          ] public DateTime? Column71                      { get; set; }
			                             public DateTime? LatestBilling                 { get; set; }
			                             public DateTime? NextBilling                   { get; set; }
			                             public int?      PrepayPeriod                  { get; set; }
			                             public DateTime? StartBilling                  { get; set; }
			                             public DateTime? SuspensionStartDate           { get; set; }
			                             public DateTime? SuspensionEndDate             { get; set; }
			                             public DateTime? TerminateDate                 { get; set; }
			[Column("Id")              ] public int       Column79                      { get; set; }
			[Column("IdentityGuid")    ] public string    Column80                      { get; set; }
			                             public string    ContractorFullName            { get; set; }
			                             public string    ContractorCode                { get; set; }
			                             public string    ContractorPhone               { get; set; }
			                             public string    ContractorEmail               { get; set; }
			                             public string    ContractorFax                 { get; set; }
			                             public string    ContractorAddress             { get; set; }
			                             public string    ContractorIdNo                { get; set; }
			                             public string    ContractorTaxIdNo             { get; set; }
			                             public bool      IsEnterprise                  { get; set; }
			                             public bool      IsBuyer                       { get; set; }
			                             public bool      IsPartner                     { get; set; }
			                             public string    UserIdentityGuid              { get; set; }
			                             public string    ApplicationUserIdentityGuid   { get; set; }
			                             public long      OutContractServicePackageId   { get; set; }
			                             public int?      TaxCategoryId                 { get; set; }
			                             public string    TaxCategoryName               { get; set; }
			                             public string    TaxCategoryCode               { get; set; }
			                             public float?    TaxValue                      { get; set; }
			[Column("Id")              ] public int       Column99                      { get; set; }
			[Column("CurrencyUnitId")  ] public int       Column100                     { get; set; }
			[Column("CurrencyUnitCode")] public string    Column101                     { get; set; }
			                             public int       PointType                     { get; set; }
			[Column("InstallationFee") ] public decimal   Column103                     { get; set; }
			[Column("OtherFee")        ] public decimal   Column104                     { get; set; }
			                             public decimal   MonthlyCost                   { get; set; }
			[Column("EquipmentAmount") ] public decimal   Column106                     { get; set; }
			                             public string    EndPointInstallationSpliter   { get; set; }
			                             public string    Building                      { get; set; }
			                             public string    Floor                         { get; set; }
			                             public string    RoomNumber                    { get; set; }
			                             public string    Street                        { get; set; }
			                             public string    District                      { get; set; }
			                             public string    DistrictId                    { get; set; }
			                             public string    City                          { get; set; }
			                             public string    CityId                        { get; set; }
			[Column("Id")              ] public long      Column116                     { get; set; }
			[Column("CurrencyUnitId")  ] public int?      Column117                     { get; set; }
			[Column("CurrencyUnitCode")] public string    Column118                     { get; set; }
			[Column("PointType")       ] public int?      Column119                     { get; set; }
			[Column("InstallationFee") ] public decimal?  Column120                     { get; set; }
			[Column("OtherFee")        ] public decimal?  Column121                     { get; set; }
			[Column("MonthlyCost")     ] public decimal?  Column122                     { get; set; }
			[Column("EquipmentAmount") ] public decimal?  Column123                     { get; set; }
			                             public string    StartPointInstallationSpliter { get; set; }
			[Column("Building")        ] public string    Column125                     { get; set; }
			[Column("Floor")           ] public string    Column126                     { get; set; }
			[Column("RoomNumber")      ] public string    Column127                     { get; set; }
			[Column("Street")          ] public string    Column128                     { get; set; }
			[Column("District")        ] public string    Column129                     { get; set; }
			[Column("DistrictId")      ] public string    Column130                     { get; set; }
			[Column("City")            ] public string    Column131                     { get; set; }
			[Column("CityId")          ] public string    Column132                     { get; set; }
		}

		#endregion

		#region GetOutContractEffectedQuantityEveryMonth

		public static IEnumerable<GetOutContractEffectedQuantityEveryMonthResult> GetOutContractEffectedQuantityEveryMonth(this FbmContractDataConnection dataConnection)
		{
			return dataConnection.QueryProc<GetOutContractEffectedQuantityEveryMonthResult>("`GetOutContractEffectedQuantityEveryMonth`");
		}

		public partial class GetOutContractEffectedQuantityEveryMonthResult
		{
			public string Thang    { get; set; }
			public long   Quantity { get; set; }
		}

		#endregion

		#region GetOutContractSignedQuantityEveryMonth

		public static IEnumerable<GetOutContractSignedQuantityEveryMonthResult> GetOutContractSignedQuantityEveryMonth(this FbmContractDataConnection dataConnection)
		{
			return dataConnection.QueryProc<GetOutContractSignedQuantityEveryMonthResult>("`GetOutContractSignedQuantityEveryMonth`");
		}

		public partial class GetOutContractSignedQuantityEveryMonthResult
		{
			public decimal? ValueMonth1  { get; set; }
			public decimal? ValueMonth2  { get; set; }
			public decimal? ValueMonth3  { get; set; }
			public decimal? ValueMonth4  { get; set; }
			public decimal? ValueMonth5  { get; set; }
			public decimal? ValueMonth6  { get; set; }
			public decimal? ValueMonth7  { get; set; }
			public decimal? ValueMonth8  { get; set; }
			public decimal? ValueMonth9  { get; set; }
			public decimal? ValueMonth10 { get; set; }
			public decimal? ValueMonth11 { get; set; }
			public decimal? ValueMonth12 { get; set; }
			public long     Total        { get; set; }
		}

		#endregion

		#region GetOutContractSimpleAllByInContractId

		public static IEnumerable<GetOutContractSimpleAllByInContractIdResult> GetOutContractSimpleAllByInContractId(this FbmContractDataConnection dataConnection, int? inContractId, int? currencyUnitId)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new GetOutContractSimpleAllByInContractIdResult
				{
					Id                         = Converter.ChangeTypeTo<int>      (dataReader.GetValue(0), ms),
					ContractCode               = Converter.ChangeTypeTo<string>   (dataReader.GetValue(1), ms),
					CurrencyUnitId             = Converter.ChangeTypeTo<int>      (dataReader.GetValue(2), ms),
					CurrencyUnitCode           = Converter.ChangeTypeTo<string>   (dataReader.GetValue(3), ms),
					ContractStatusId           = Converter.ChangeTypeTo<int>      (dataReader.GetValue(4), ms),
					ContractTypeId             = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(5), ms),
					Column7                    = Converter.ChangeTypeTo<int>      (dataReader.GetValue(6), ms),
					ContractorFullName         = Converter.ChangeTypeTo<string>   (dataReader.GetValue(7), ms),
					ContractorPhone            = Converter.ChangeTypeTo<string>   (dataReader.GetValue(8), ms),
					Column10                   = Converter.ChangeTypeTo<int>      (dataReader.GetValue(9), ms),
					CId                        = Converter.ChangeTypeTo<string>   (dataReader.GetValue(10), ms),
					Column12                   = Converter.ChangeTypeTo<int>      (dataReader.GetValue(11), ms),
					Column13                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(12), ms),
					ServiceId                  = Converter.ChangeTypeTo<int>      (dataReader.GetValue(13), ms),
					ServiceName                = Converter.ChangeTypeTo<string>   (dataReader.GetValue(14), ms),
					ServicePackageId           = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(15), ms),
					PackageName                = Converter.ChangeTypeTo<string>   (dataReader.GetValue(16), ms),
					DomesticBandwidth          = Converter.ChangeTypeTo<float>    (dataReader.GetValue(17), ms),
					InternationalBandwidth     = Converter.ChangeTypeTo<float>    (dataReader.GetValue(18), ms),
					HasStartAndEndPoint        = Converter.ChangeTypeTo<bool>     (dataReader.GetValue(19), ms),
					PackagePrice               = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(20), ms),
					EquipmentAmount            = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(21), ms),
					InstallationFee            = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(22), ms),
					OtherFee                   = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(23), ms),
					TaxAmount                  = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(24), ms),
					SubTotalBeforeTax          = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(25), ms),
					SubTotal                   = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(26), ms),
					GrandTotalBeforeTax        = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(27), ms),
					GrandTotal                 = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(28), ms),
					PaymentPeriod              = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(29), ms),
					Signed                     = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(30), ms),
					Effective                  = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(31), ms),
					LatestBilling              = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(32), ms),
					NextBilling                = Converter.ChangeTypeTo<DateTime?>(dataReader.GetValue(33), ms),
					Column35                   = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(34), ms),
					Column36                   = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(35), ms),
					Column37                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(36), ms),
					PointType                  = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(37), ms),
					Column39                   = Converter.ChangeTypeTo<decimal?> (dataReader.GetValue(38), ms),
					Column40                   = Converter.ChangeTypeTo<decimal?> (dataReader.GetValue(39), ms),
					MonthlyCost                = Converter.ChangeTypeTo<decimal?> (dataReader.GetValue(40), ms),
					Column42                   = Converter.ChangeTypeTo<decimal?> (dataReader.GetValue(41), ms),
					InstallationAddressSpliter = Converter.ChangeTypeTo<string>   (dataReader.GetValue(42), ms),
					Building                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(43), ms),
					Floor                      = Converter.ChangeTypeTo<string>   (dataReader.GetValue(44), ms),
					RoomNumber                 = Converter.ChangeTypeTo<string>   (dataReader.GetValue(45), ms),
					Street                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(46), ms),
					District                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(47), ms),
					DistrictId                 = Converter.ChangeTypeTo<string>   (dataReader.GetValue(48), ms),
					City                       = Converter.ChangeTypeTo<string>   (dataReader.GetValue(49), ms),
					CityId                     = Converter.ChangeTypeTo<string>   (dataReader.GetValue(50), ms),
					Column52                   = Converter.ChangeTypeTo<int>      (dataReader.GetValue(51), ms),
					Column53                   = Converter.ChangeTypeTo<int>      (dataReader.GetValue(52), ms),
					Column54                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(53), ms),
					Column55                   = Converter.ChangeTypeTo<int>      (dataReader.GetValue(54), ms),
					Column56                   = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(55), ms),
					Column57                   = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(56), ms),
					Column58                   = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(57), ms),
					Column59                   = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(58), ms),
					Column60                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(59), ms),
					Column61                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(60), ms),
					Column62                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(61), ms),
					Column63                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(62), ms),
					Column64                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(63), ms),
					Column65                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(64), ms),
					Column66                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(65), ms),
					Column67                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(66), ms),
					Column68                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(67), ms),
					Column69                   = Converter.ChangeTypeTo<int>      (dataReader.GetValue(68), ms),
					Column70                   = Converter.ChangeTypeTo<int>      (dataReader.GetValue(69), ms),
					Column71                   = Converter.ChangeTypeTo<string>   (dataReader.GetValue(70), ms),
					OutContractId              = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(71), ms),
					InContractId               = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(72), ms),
					PromotionTotalAmount       = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(73), ms),
					ServicePackageAmount       = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(74), ms),
					TotalTaxAmount             = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(75), ms),
					Column77                   = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(76), ms),
					Column78                   = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(77), ms),
					Column79                   = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(78), ms),
					Column80                   = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(79), ms),
					Column81                   = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(80), ms),
					Column82                   = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(81), ms),
					Column83                   = Converter.ChangeTypeTo<decimal>  (dataReader.GetValue(82), ms),
					Column84                   = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(83), ms),
					Column85                   = Converter.ChangeTypeTo<int?>     (dataReader.GetValue(84), ms),
				},
				"`GetOutContractSimpleAllByInContractId`",
				new DataParameter("inContractId",   inContractId,   LinqToDB.DataType.Int32),
				new DataParameter("currencyUnitId", currencyUnitId, LinqToDB.DataType.Int32));
		}

		public partial class GetOutContractSimpleAllByInContractIdResult
		{
			                                       public int       Id                         { get; set; }
			                                       public string    ContractCode               { get; set; }
			                                       public int       CurrencyUnitId             { get; set; }
			                                       public string    CurrencyUnitCode           { get; set; }
			                                       public int       ContractStatusId           { get; set; }
			                                       public int?      ContractTypeId             { get; set; }
			[Column("Id")                        ] public int       Column7                    { get; set; }
			                                       public string    ContractorFullName         { get; set; }
			                                       public string    ContractorPhone            { get; set; }
			[Column("Id")                        ] public int       Column10                   { get; set; }
			                                       public string    CId                        { get; set; }
			[Column("CurrencyUnitId")            ] public int       Column12                   { get; set; }
			[Column("CurrencyUnitCode")          ] public string    Column13                   { get; set; }
			                                       public int       ServiceId                  { get; set; }
			                                       public string    ServiceName                { get; set; }
			                                       public int?      ServicePackageId           { get; set; }
			                                       public string    PackageName                { get; set; }
			                                       public float     DomesticBandwidth          { get; set; }
			                                       public float     InternationalBandwidth     { get; set; }
			                                       public bool      HasStartAndEndPoint        { get; set; }
			                                       public decimal   PackagePrice               { get; set; }
			                                       public decimal   EquipmentAmount            { get; set; }
			                                       public decimal   InstallationFee            { get; set; }
			                                       public decimal   OtherFee                   { get; set; }
			                                       public decimal   TaxAmount                  { get; set; }
			                                       public decimal   SubTotalBeforeTax          { get; set; }
			                                       public decimal   SubTotal                   { get; set; }
			                                       public decimal   GrandTotalBeforeTax        { get; set; }
			                                       public decimal   GrandTotal                 { get; set; }
			                                       public int?      PaymentPeriod              { get; set; }
			                                       public DateTime? Signed                     { get; set; }
			                                       public DateTime? Effective                  { get; set; }
			                                       public DateTime? LatestBilling              { get; set; }
			                                       public DateTime? NextBilling                { get; set; }
			[Column("Id")                        ] public int?      Column35                   { get; set; }
			[Column("CurrencyUnitId")            ] public int?      Column36                   { get; set; }
			[Column("CurrencyUnitCode")          ] public string    Column37                   { get; set; }
			                                       public int?      PointType                  { get; set; }
			[Column("InstallationFee")           ] public decimal?  Column39                   { get; set; }
			[Column("OtherFee")                  ] public decimal?  Column40                   { get; set; }
			                                       public decimal?  MonthlyCost                { get; set; }
			[Column("EquipmentAmount")           ] public decimal?  Column42                   { get; set; }
			                                       public string    InstallationAddressSpliter { get; set; }
			                                       public string    Building                   { get; set; }
			                                       public string    Floor                      { get; set; }
			                                       public string    RoomNumber                 { get; set; }
			                                       public string    Street                     { get; set; }
			                                       public string    District                   { get; set; }
			                                       public string    DistrictId                 { get; set; }
			                                       public string    City                       { get; set; }
			                                       public string    CityId                     { get; set; }
			[Column("Id")                        ] public int       Column52                   { get; set; }
			[Column("CurrencyUnitId")            ] public int       Column53                   { get; set; }
			[Column("CurrencyUnitCode")          ] public string    Column54                   { get; set; }
			[Column("PointType")                 ] public int       Column55                   { get; set; }
			[Column("InstallationFee")           ] public decimal   Column56                   { get; set; }
			[Column("OtherFee")                  ] public decimal   Column57                   { get; set; }
			[Column("MonthlyCost")               ] public decimal   Column58                   { get; set; }
			[Column("EquipmentAmount")           ] public decimal   Column59                   { get; set; }
			[Column("InstallationAddressSpliter")] public string    Column60                   { get; set; }
			[Column("Building")                  ] public string    Column61                   { get; set; }
			[Column("Floor")                     ] public string    Column62                   { get; set; }
			[Column("RoomNumber")                ] public string    Column63                   { get; set; }
			[Column("Street")                    ] public string    Column64                   { get; set; }
			[Column("District")                  ] public string    Column65                   { get; set; }
			[Column("DistrictId")                ] public string    Column66                   { get; set; }
			[Column("City")                      ] public string    Column67                   { get; set; }
			[Column("CityId")                    ] public string    Column68                   { get; set; }
			[Column("Id")                        ] public int       Column69                   { get; set; }
			[Column("CurrencyUnitId")            ] public int       Column70                   { get; set; }
			[Column("CurrencyUnitCode")          ] public string    Column71                   { get; set; }
			                                       public int?      OutContractId              { get; set; }
			                                       public int?      InContractId               { get; set; }
			                                       public decimal   PromotionTotalAmount       { get; set; }
			                                       public decimal   ServicePackageAmount       { get; set; }
			                                       public decimal   TotalTaxAmount             { get; set; }
			[Column("InstallationFee")           ] public decimal   Column77                   { get; set; }
			[Column("OtherFee")                  ] public decimal   Column78                   { get; set; }
			[Column("EquipmentAmount")           ] public decimal   Column79                   { get; set; }
			[Column("SubTotalBeforeTax")         ] public decimal   Column80                   { get; set; }
			[Column("SubTotal")                  ] public decimal   Column81                   { get; set; }
			[Column("GrandTotalBeforeTax")       ] public decimal   Column82                   { get; set; }
			[Column("GrandTotal")                ] public decimal   Column83                   { get; set; }
			[Column("Id")                        ] public int?      Column84                   { get; set; }
			[Column("CurrencyUnitId")            ] public int?      Column85                   { get; set; }
		}

		#endregion

		#region GetOutContractTotalQuantityEveryMonth

		public static IEnumerable<GetOutContractTotalQuantityEveryMonthResult> GetOutContractTotalQuantityEveryMonth(this FbmContractDataConnection dataConnection)
		{
			return dataConnection.QueryProc<GetOutContractTotalQuantityEveryMonthResult>("`GetOutContractTotalQuantityEveryMonth`");
		}

		public partial class GetOutContractTotalQuantityEveryMonthResult
		{
			public decimal? ValueMonth1  { get; set; }
			public decimal? ValueMonth2  { get; set; }
			public decimal? ValueMonth3  { get; set; }
			public decimal? ValueMonth4  { get; set; }
			public decimal? ValueMonth5  { get; set; }
			public decimal? ValueMonth6  { get; set; }
			public decimal? ValueMonth7  { get; set; }
			public decimal? ValueMonth8  { get; set; }
			public decimal? ValueMonth9  { get; set; }
			public decimal? ValueMonth10 { get; set; }
			public decimal? ValueMonth11 { get; set; }
			public decimal? ValueMonth12 { get; set; }
			public long     Total        { get; set; }
		}

		#endregion

		#region ReclaimEquipments

		public static int ReclaimEquipments(this FbmContractDataConnection dataConnection, string transactionIds, int? transactionType, string acceptanceStaff, ref bool? IsSuccess)
		{
			var ret = dataConnection.ExecuteProc("`ReclaimEquipments`",
				new DataParameter("transactionIds", transactionIds, LinqToDB.DataType.VarChar),
				new DataParameter("transactionType", transactionType, LinqToDB.DataType.Int32),
				new DataParameter("acceptanceStaff", acceptanceStaff, LinqToDB.DataType.VarChar),
				new DataParameter("IsSuccess", IsSuccess, LinqToDB.DataType.SByte) { Direction = ParameterDirection.InputOutput });

			IsSuccess = Converter.ChangeTypeTo<bool?>(((IDbDataParameter)dataConnection.Command.Parameters["IsSuccess"]).Value);

			return ret;
		}

		#endregion

		#region RestoreOrSuspendServices

		public static int RestoreOrSuspendServices(this FbmContractDataConnection dataConnection, string transactionIds, int? transactionType, string acceptanceStaff, ref bool? isSuccess)
		{
			var ret = dataConnection.ExecuteProc("`RestoreOrSuspendServices`",
				new DataParameter("transactionIds", transactionIds, LinqToDB.DataType.VarChar),
				new DataParameter("transactionType", transactionType, LinqToDB.DataType.Int32),
				new DataParameter("acceptanceStaff", acceptanceStaff, LinqToDB.DataType.VarChar),
				new DataParameter("isSuccess", isSuccess, LinqToDB.DataType.SByte) { Direction = ParameterDirection.InputOutput });

			isSuccess = Converter.ChangeTypeTo<bool?>(((IDbDataParameter)dataConnection.Command.Parameters["isSuccess"]).Value);

			return ret;
		}

		#endregion

		#region sp_GetDataTotalRevenue

		public static IEnumerable<sp_GetDataTotalRevenueResult> sp_GetDataTotalRevenue(this FbmContractDataConnection dataConnection)
		{
			return dataConnection.QueryProc<sp_GetDataTotalRevenueResult>("`sp_GetDataTotalRevenue`");
		}

		public partial class sp_GetDataTotalRevenueResult
		{
			public string ContractorName     { get; set; }
			public string ContractCode       { get; set; }
			public string TimeLineSigned     { get; set; }
			public string TimeLineExpiration { get; set; }
			public long   GrandTotal         { get; set; }
		}

		#endregion

		#region sp_UpdatePromotionProduct

		public static int sp_UpdatePromotionProduct(this FbmContractDataConnection dataConnection, int? OldId, int? NewId)
		{
			return dataConnection.ExecuteProc("`sp_UpdatePromotionProduct`",
				new DataParameter("OldId", OldId, LinqToDB.DataType.Int32),
				new DataParameter("NewId", NewId, LinqToDB.DataType.Int32));
		}

		#endregion

		#region TerminateContracts

		public static int TerminateContracts(this FbmContractDataConnection dataConnection, string transactionIds, int? transactionType, string acceptanceStaff, DateTime? effectiveDate, ref bool? isSuccess)
		{
			var ret = dataConnection.ExecuteProc("`TerminateContracts`",
				new DataParameter("transactionIds", transactionIds, LinqToDB.DataType.VarChar),
				new DataParameter("transactionType", transactionType, LinqToDB.DataType.Int32),
				new DataParameter("acceptanceStaff", acceptanceStaff, LinqToDB.DataType.VarChar),
				new DataParameter("effectiveDate", effectiveDate, LinqToDB.DataType.DateTime),
				new DataParameter("isSuccess", isSuccess, LinqToDB.DataType.SByte) { Direction = ParameterDirection.InputOutput });

			isSuccess = Converter.ChangeTypeTo<bool?>(((IDbDataParameter)dataConnection.Command.Parameters["isSuccess"]).Value);

			return ret;
		}

		#endregion

		#region TerminateServices

		public static int TerminateServices(this FbmContractDataConnection dataConnection, string transactionIds, int? transactionType, string acceptanceStaff, ref bool? isSuccess)
		{
			var ret = dataConnection.ExecuteProc("`TerminateServices`",
				new DataParameter("transactionIds", transactionIds, LinqToDB.DataType.VarChar),
				new DataParameter("transactionType", transactionType, LinqToDB.DataType.Int32),
				new DataParameter("acceptanceStaff", acceptanceStaff, LinqToDB.DataType.VarChar),
				new DataParameter("isSuccess", isSuccess, LinqToDB.DataType.SByte) { Direction = ParameterDirection.InputOutput });

			isSuccess = Converter.ChangeTypeTo<bool?>(((IDbDataParameter)dataConnection.Command.Parameters["isSuccess"]).Value);

			return ret;
		}

		#endregion

		#region UpdateNextBillingDateOfPayingContracts

		public static int UpdateNextBillingDateOfPayingContracts(this FbmContractDataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("`UpdateNextBillingDateOfPayingContracts`");
		}

		#endregion

		#region UpgradeEquipments

		public static int UpgradeEquipments(this FbmContractDataConnection dataConnection, string transactionIds, int? transactionType, string acceptanceStaff, ref bool? IsSuccess)
		{
			var ret = dataConnection.ExecuteProc("`UpgradeEquipments`",
				new DataParameter("transactionIds", transactionIds, LinqToDB.DataType.VarChar),
				new DataParameter("transactionType", transactionType, LinqToDB.DataType.Int32),
				new DataParameter("acceptanceStaff", acceptanceStaff, LinqToDB.DataType.VarChar),
				new DataParameter("IsSuccess", IsSuccess, LinqToDB.DataType.SByte) { Direction = ParameterDirection.InputOutput });

			IsSuccess = Converter.ChangeTypeTo<bool?>(((IDbDataParameter)dataConnection.Command.Parameters["IsSuccess"]).Value);

			return ret;
		}

		#endregion
	}

	public static partial class SqlFunctions
	{
		#region CalculateSubspendServiceTotal

		[Sql.Function(Name="CalculateSubspendServiceTotal", ServerSideOnly=true)]
		public static decimal? CalculateSubspendServiceTotal(DateTime? suspensionStartDate, DateTime? suspensionEndDate, decimal? packagePrice)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ExchangeMoney

		[Sql.Function(Name="ExchangeMoney", ServerSideOnly=true)]
		public static decimal? ExchangeMoney(decimal? money, string pCurrencyCode)
		{
			throw new InvalidOperationException();
		}

		#endregion
	}

	public static partial class TableExtensions
	{
		public static __EFMigrationsHistory Find(this ITable<__EFMigrationsHistory> table, string MigrationId)
		{
			return table.FirstOrDefault(t =>
				t.MigrationId == MigrationId);
		}

		public static AttachmentFile Find(this ITable<AttachmentFile> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BrasInformation Find(this ITable<BrasInformation> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CardType Find(this ITable<CardType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ChannelGroup Find(this ITable<ChannelGroup> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ChannelPriceBusTable Find(this ITable<ChannelPriceBusTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ContactInfo Find(this ITable<ContactInfo> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ContractContent Find(this ITable<ContractContent> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ContractEquipment Find(this ITable<ContractEquipment> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ContractForm Find(this ITable<ContractForm> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Contractor Find(this ITable<Contractor> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ContractorProperty Find(this ITable<ContractorProperty> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ContractSharingRevenue Find(this ITable<ContractSharingRevenue> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ContractSharingRevenueLine Find(this ITable<ContractSharingRevenueLine> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ContractStatus Find(this ITable<ContractStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ContractTotalByCurrency Find(this ITable<ContractTotalByCurrency> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CurrencyUnit Find(this ITable<CurrencyUnit> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static EquipmentPicture Find(this ITable<EquipmentPicture> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static EquipmentStatus Find(this ITable<EquipmentStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static EquipmentType Find(this ITable<EquipmentType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ExchangeRate Find(this ITable<ExchangeRate> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static FlexiblePricingType Find(this ITable<FlexiblePricingType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static InContract Find(this ITable<InContract> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static InContractService Find(this ITable<InContractService> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static InContractStatus Find(this ITable<InContractStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static InContractTax Find(this ITable<InContractTax> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static InContractType Find(this ITable<InContractType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static IntegrationEventLog Find(this ITable<IntegrationEventLog> table, string EventId)
		{
			return table.FirstOrDefault(t =>
				t.EventId == EventId);
		}

		public static ManagementBusinessBlock Find(this ITable<ManagementBusinessBlock> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static MarketArea Find(this ITable<MarketArea> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static OutContract Find(this ITable<OutContract> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static OutContractServicePackage Find(this ITable<OutContractServicePackage> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static OutContractServicePackageClearing Find(this ITable<OutContractServicePackageClearing> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static OutContractServicePackageStatus Find(this ITable<OutContractServicePackageStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static OutContractServicePackageTax Find(this ITable<OutContractServicePackageTax> table, int TaxCategoryId, int OutContractServicePackageId)
		{
			return table.FirstOrDefault(t =>
				t.TaxCategoryId               == TaxCategoryId &&
				t.OutContractServicePackageId == OutContractServicePackageId);
		}

		public static OutContractStatus Find(this ITable<OutContractStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static OutContractType Find(this ITable<OutContractType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static OutputChannelPoint Find(this ITable<OutputChannelPoint> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Picture Find(this ITable<Picture> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PointType Find(this ITable<PointType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Project Find(this ITable<Project> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ProjectTechnician Find(this ITable<ProjectTechnician> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Promotion Find(this ITable<Promotion> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PromotionDetail Find(this ITable<PromotionDetail> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PromotionForContract Find(this ITable<PromotionForContract> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PromotionProduct Find(this ITable<PromotionProduct> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PromotionType Find(this ITable<PromotionType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PromotionValueType Find(this ITable<PromotionValueType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static RadiusServerInformation Find(this ITable<RadiusServerInformation> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ReasonTypeContractTermination Find(this ITable<ReasonTypeContractTermination> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Salesman Find(this ITable<Salesman> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Service Find(this ITable<Service> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ServiceGroup Find(this ITable<ServiceGroup> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ServiceLevelAgreement Find(this ITable<ServiceLevelAgreement> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ServicePackage Find(this ITable<ServicePackage> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ServicePackagePrice Find(this ITable<ServicePackagePrice> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ServicePackageRadiusService Find(this ITable<ServicePackageRadiusService> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ServicePackageSuspensionTime Find(this ITable<ServicePackageSuspensionTime> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TaxCategory Find(this ITable<TaxCategory> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TemporaryPayingContract Find(this ITable<TemporaryPayingContract> table, int OutContractId, int ServicePackageId)
		{
			return table.FirstOrDefault(t =>
				t.OutContractId    == OutContractId &&
				t.ServicePackageId == ServicePackageId);
		}

		public static Transaction Find(this ITable<Transaction> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TransactionChannelPoint Find(this ITable<TransactionChannelPoint> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TransactionChannelTax Find(this ITable<TransactionChannelTax> table, int TaxCategoryId, int TransactionServicePackageId)
		{
			return table.FirstOrDefault(t =>
				t.TaxCategoryId               == TaxCategoryId &&
				t.TransactionServicePackageId == TransactionServicePackageId);
		}

		public static TransactionEquipment Find(this ITable<TransactionEquipment> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TransactionPriceBusTable Find(this ITable<TransactionPriceBusTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TransactionPromotionForContract Find(this ITable<TransactionPromotionForContract> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TransactionReason Find(this ITable<TransactionReason> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TransactionServicePackage Find(this ITable<TransactionServicePackage> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TransactionSLA Find(this ITable<TransactionSLA> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TransactionStatus Find(this ITable<TransactionStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TransactionType Find(this ITable<TransactionType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UnitOfMeasurement Find(this ITable<UnitOfMeasurement> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}

#pragma warning restore 1591
