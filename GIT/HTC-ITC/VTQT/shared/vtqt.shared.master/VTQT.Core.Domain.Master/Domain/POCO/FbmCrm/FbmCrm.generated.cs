//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Configuration;
using LinqToDB.Mapping;

using VTQT.Core.Domain.Apps;
using VTQT.Core.Domain.Localization;

namespace VTQT.Core.Domain.FbmCrm
{
	/// <summary>
	/// Database       : ITC_FBM_CRM
	/// Data Source    : 192.168.100.32
	/// Server Version : 5.7.33-36-57-log
	/// </summary>
	public partial class FbmCrmDataConnection : LinqToDB.Data.DataConnection
	{
		public ITable<__EFMigrationsHistory>    __EFMigrationsHistories   { get { return this.GetTable<__EFMigrationsHistory>(); } }
		public ITable<ApplicationUser>          ApplicationUsers          { get { return this.GetTable<ApplicationUser>(); } }
		public ITable<ApplicationUserClass>     ApplicationUserClasses    { get { return this.GetTable<ApplicationUserClass>(); } }
		public ITable<ApplicationUserGroup>     ApplicationUserGroups     { get { return this.GetTable<ApplicationUserGroup>(); } }
		public ITable<ApplicationUserIndustry>  ApplicationUserIndustries { get { return this.GetTable<ApplicationUserIndustry>(); } }
		public ITable<ApplicationUserUserGroup> ApplicationUserUserGroups { get { return this.GetTable<ApplicationUserUserGroup>(); } }
		public ITable<CustomerCategory>         CustomerCategories        { get { return this.GetTable<CustomerCategory>(); } }
		public ITable<CustomerStructure>        CustomerStructures        { get { return this.GetTable<CustomerStructure>(); } }
		public ITable<CustomerType>             CustomerTypes             { get { return this.GetTable<CustomerType>(); } }
		public ITable<FCMToken>                 FCMTokens                 { get { return this.GetTable<FCMToken>(); } }
		public ITable<Industry>                 Industries                { get { return this.GetTable<Industry>(); } }
		public ITable<IntegrationEventLog>      IntegrationEventLogs      { get { return this.GetTable<IntegrationEventLog>(); } }
		public ITable<Otp>                      Otps                      { get { return this.GetTable<Otp>(); } }
		public ITable<Picture>                  Pictures                  { get { return this.GetTable<Picture>(); } }

		public FbmCrmDataConnection()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public FbmCrmDataConnection(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public FbmCrmDataConnection(LinqToDbConnectionOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public FbmCrmDataConnection(LinqToDbConnectionOptions<FbmCrmDataConnection> options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Serializable]
	[Table("__EFMigrationsHistory")]
	public partial class __EFMigrationsHistory : BaseIntEntity
	{
		[PrimaryKey, NotNull] public string MigrationId    { get; set; } // varchar(95)
		[Column,     NotNull] public string ProductVersion { get; set; } // varchar(32)
	}

	[Serializable]
	[Table("ApplicationUsers")]
	public partial class ApplicationUser : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture                  { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate              { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate              { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy                { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy                { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive                 { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted                { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder             { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath         { get; set; } // longtext
		[Column,    Nullable] public int?      ClassId                  { get; set; } // int(11)
		[Column,    Nullable] public string    IdentityGuid             { get; set; } // varchar(128)
		[Column,    Nullable] public string    AccountingCustomerCode   { get; set; } // varchar(256)
		[Column,    Nullable] public int?      AvatarId                 { get; set; } // int(11)
		[Column,    Nullable] public string    CustomerCode             { get; set; } // varchar(256)
		[Column,    Nullable] public string    UserName                 { get; set; } // varchar(256)
		[Column,    Nullable] public string    FirstName                { get; set; } // varchar(256)
		[Column,    Nullable] public string    LastName                 { get; set; } // varchar(256)
		[Column,    Nullable] public string    FullName                 { get; set; } // longtext
		[Column,    Nullable] public int?      Gender                   { get; set; } // int(11)
		[Column,    Nullable] public string    MobilePhoneNo            { get; set; } // varchar(1000)
		[Column,    Nullable] public string    FaxNo                    { get; set; } // varchar(1000)
		[Column,    Nullable] public string    Password                 { get; set; } // longtext
		[Column,    Nullable] public string    PasswordSalt             { get; set; } // varchar(128)
		[Column,    Nullable] public string    SecurityStamp            { get; set; } // varchar(68)
		[Column,    Nullable] public DateTime? DateOfBirth              { get; set; } // datetime
		[Column,    Nullable] public string    Email                    { get; set; } // varchar(256)
		[Column,    Nullable] public string    IdNo                     { get; set; } // varchar(256)
		[Column,    Nullable] public DateTime? IdDateOfIssue            { get; set; } // datetime(6)
		[Column,    Nullable] public string    IdIssuedBy               { get; set; } // varchar(1000)
		[Column,    Nullable] public string    TaxIdNo                  { get; set; } // longtext
		[Column,    Nullable] public string    RepresentativePersonName { get; set; } // varchar(256)
		[Column,    Nullable] public string    RpPhoneNo                { get; set; } // varchar(256)
		[Column,    Nullable] public DateTime? RpDateOfBirth            { get; set; } // datetime(6)
		[Column,    Nullable] public string    RpJobPosition            { get; set; } // varchar(256)
		[Column,    Nullable] public string    BusinessRegCertificate   { get; set; } // varchar(256)
		[Column,    Nullable] public DateTime? BrcDateOfIssue           { get; set; } // datetime(6)
		[Column,    Nullable] public string    BrcIssuedBy              { get; set; } // varchar(1000)
		[Column,    Nullable] public string    Address                  { get; set; } // varchar(1000)
		[Column,    Nullable] public string    Ward                     { get; set; } // varchar(256)
		[Column,    Nullable] public string    WardIdentityGuid         { get; set; } // varchar(68)
		[Column,    Nullable] public string    District                 { get; set; } // varchar(256)
		[Column,    Nullable] public string    DistrictIdentityGuid     { get; set; } // varchar(68)
		[Column,    Nullable] public string    Province                 { get; set; } // varchar(256)
		[Column,    Nullable] public string    ProvinceIdentityGuid     { get; set; } // varchar(68)
		[Column,    Nullable] public int?      CustomerCategoryId       { get; set; } // int(11)
		[Column,    Nullable] public int?      CustomerTypeId           { get; set; } // int(11)
		[Column,    Nullable] public int?      CustomerStructureId      { get; set; } // int(11)
		[Column,    Nullable] public string    BankName                 { get; set; } // varchar(256)
		[Column,    Nullable] public string    BankAccountNumber        { get; set; } // varchar(256)
		[Column,    Nullable] public string    BankBranch               { get; set; } // varchar(256)
		[Column, NotNull    ] public bool      IsEnterprise             { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsEmailCertificated      { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsPhoneNoCertificated    { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsLocked                 { get; set; } // tinyint(1)
		[Column,    Nullable] public string    CustomerReviews          { get; set; } // longtext
		[Column, NotNull    ] public bool      IsPartner                { get; set; } // tinyint(1)
		[Column,    Nullable] public string    UserIdentityGuid         { get; set; } // varchar(128)
		[Column,    Nullable] public string    ShortName                { get; set; } // varchar(256)
		[Column,    Nullable] public string    TradingAddress           { get; set; } // varchar(1000)
		[Column,    Nullable] public string    SwiftCode                { get; set; } // varchar(512)
		[Column,    Nullable] public string    ProjectIdentityGuid      { get; set; } // varchar(128)
		[Column, NotNull    ] public bool      IsPromotion              { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       PromotionTypeId          { get; set; } // int(11)
		[Column,    Nullable] public string    ParentId                 { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_ApplicationUsers_CustomerCategories_CustomerCategoryId
		/// </summary>
		[Association(ThisKey="CustomerCategoryId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ApplicationUsers_CustomerCategories_CustomerCategoryId", BackReferenceName="FK_ApplicationUsers_CustomerCategories_CustomerCategoryId_BackReferences")]
		public CustomerCategory ApplicationUsers_CustomerCategories_CustomerCategoryId { get; set; }

		/// <summary>
		/// FK_ApplicationUsers_CustomerStructure_CustomerStructureId
		/// </summary>
		[Association(ThisKey="CustomerStructureId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ApplicationUsers_CustomerStructure_CustomerStructureId", BackReferenceName="FK_ApplicationUsers_CustomerStructure_CustomerStructureId_BackReferences")]
		public CustomerStructure ApplicationUsers_CustomerStructure_CustomerStructureId { get; set; }

		/// <summary>
		/// FK_ApplicationUsers_CustomerTypes_CustomerTypeId
		/// </summary>
		[Association(ThisKey="CustomerTypeId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ApplicationUsers_CustomerTypes_CustomerTypeId", BackReferenceName="FK_ApplicationUsers_CustomerTypes_CustomerTypeId_BackReferences")]
		public CustomerType ApplicationUsers_CustomerTypes_CustomerTypeId { get; set; }

		/// <summary>
		/// FK_ApplicationUsers_Pictures_AvatarId
		/// </summary>
		[Association(ThisKey="AvatarId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ApplicationUsers_Pictures_AvatarId", BackReferenceName="FK_ApplicationUsers_Pictures_AvatarId_BackReferences")]
		public Picture ApplicationUsers_Pictures_AvatarId { get; set; }

		/// <summary>
		/// FK_ApplicationUserIndustries_ApplicationUsers_UserId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="UserId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ApplicationUserIndustry> FK_ApplicationUserIndustries_ApplicationUsers_UserId_BackReferences { get; set; }

		/// <summary>
		/// FK_ApplicationUserUserGroups_ApplicationUsers_UserId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="UserId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ApplicationUserUserGroup> FK_ApplicationUserUserGroups_ApplicationUsers_UserId_BackReferences { get; set; }

		/// <summary>
		/// FK_Industries_ApplicationUsers_ApplicationUserId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ApplicationUserId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Industry> FK_Industries_ApplicationUsers_ApplicationUserId_BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ApplicationUserClasses")]
	public partial class ApplicationUserClass : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture             { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate         { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate         { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy           { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy           { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive            { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted           { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder        { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath    { get; set; } // longtext
		[Column,    Nullable] public string    ClassName           { get; set; } // longtext
		[Column,    Nullable] public string    ClassCode           { get; set; } // longtext
		[Column, NotNull    ] public decimal   ConditionStartPoint { get; set; } // decimal(65,30)
		[Column, NotNull    ] public decimal   ConditionEndPoint   { get; set; } // decimal(65,30)
	}

	[Serializable]
	[Table("ApplicationUserGroups")]
	public partial class ApplicationUserGroup : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    GroupName        { get; set; } // longtext
		[Column,    Nullable] public string    GroupCode        { get; set; } // longtext
		[Column,    Nullable] public string    Description      { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_ApplicationUserUserGroups_ApplicationUserGroups_GroupId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="GroupId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ApplicationUserUserGroup> FK_ApplicationUserUserGroups_ApplicationUserGroups_GroupId_BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ApplicationUserIndustries")]
	public partial class ApplicationUserIndustry : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column, NotNull    ] public int       UserId           { get; set; } // int(11)
		[Column, NotNull    ] public int       IndustryId       { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_ApplicationUserIndustries_ApplicationUsers_UserId
		/// </summary>
		[Association(ThisKey="UserId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ApplicationUserIndustries_ApplicationUsers_UserId", BackReferenceName="FK_ApplicationUserIndustries_ApplicationUsers_UserId_BackReferences")]
		public ApplicationUser ApplicationUserIndustries_ApplicationUsers_UserId { get; set; }

		/// <summary>
		/// FK_ApplicationUserIndustries_Industries_IndustryId
		/// </summary>
		[Association(ThisKey="IndustryId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ApplicationUserIndustries_Industries_IndustryId", BackReferenceName="FK_ApplicationUserIndustries_Industries_IndustryId_BackReferences")]
		public Industry ApplicationUserIndustries_Industries_IndustryId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("ApplicationUserUserGroups")]
	public partial class ApplicationUserUserGroup : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column, NotNull    ] public int       UserId           { get; set; } // int(11)
		[Column, NotNull    ] public int       GroupId          { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_ApplicationUserUserGroups_ApplicationUserGroups_GroupId
		/// </summary>
		[Association(ThisKey="GroupId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ApplicationUserUserGroups_ApplicationUserGroups_GroupId", BackReferenceName="FK_ApplicationUserUserGroups_ApplicationUserGroups_GroupId_BackReferences")]
		public ApplicationUserGroup ApplicationUserUserGroups_ApplicationUserGroups_GroupId { get; set; }

		/// <summary>
		/// FK_ApplicationUserUserGroups_ApplicationUsers_UserId
		/// </summary>
		[Association(ThisKey="UserId", OtherKey="Id", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_ApplicationUserUserGroups_ApplicationUsers_UserId", BackReferenceName="FK_ApplicationUserUserGroups_ApplicationUsers_UserId_BackReferences")]
		public ApplicationUser ApplicationUserUserGroups_ApplicationUsers_UserId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("CustomerCategories")]
	public partial class CustomerCategory : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    Code             { get; set; } // longtext
		[Column,    Nullable] public string    Name             { get; set; } // longtext
		[Column,    Nullable] public string    Description      { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_ApplicationUsers_CustomerCategories_CustomerCategoryId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CustomerCategoryId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ApplicationUser> FK_ApplicationUsers_CustomerCategories_CustomerCategoryId_BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("CustomerStructure")]
	public partial class CustomerStructure : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    Code             { get; set; } // longtext
		[Column,    Nullable] public string    Name             { get; set; } // longtext
		[Column,    Nullable] public string    Description      { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_ApplicationUsers_CustomerStructure_CustomerStructureId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CustomerStructureId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ApplicationUser> FK_ApplicationUsers_CustomerStructure_CustomerStructureId_BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("CustomerTypes")]
	public partial class CustomerType : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    Code             { get; set; } // longtext
		[Column,    Nullable] public string    Name             { get; set; } // longtext
		[Column,    Nullable] public string    Description      { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_ApplicationUsers_CustomerTypes_CustomerTypeId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CustomerTypeId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ApplicationUser> FK_ApplicationUsers_CustomerTypes_CustomerTypeId_BackReferences { get; set; }

		#endregion
	}

	[Serializable]
	[Table("FCMTokens")]
	public partial class FCMToken : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    ReceiverId       { get; set; } // longtext
		[Column,    Nullable] public string    Token            { get; set; } // longtext
		[Column,    Nullable] public string    Platform         { get; set; } // longtext
	}

	[Serializable]
	[Table("Industries")]
	public partial class Industry : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture           { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate       { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate       { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy         { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy         { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive          { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted         { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder      { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath  { get; set; } // longtext
		[Column,    Nullable] public string    Name              { get; set; } // varchar(512)
		[Column,    Nullable] public string    Code              { get; set; } // varchar(256)
		[Column,    Nullable] public string    Description       { get; set; } // varchar(1000)
		[Column,    Nullable] public int?      ApplicationUserId { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_ApplicationUserIndustries_Industries_IndustryId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IndustryId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ApplicationUserIndustry> FK_ApplicationUserIndustries_Industries_IndustryId_BackReferences { get; set; }

		/// <summary>
		/// FK_Industries_ApplicationUsers_ApplicationUserId
		/// </summary>
		[Association(ThisKey="ApplicationUserId", OtherKey="Id", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK_Industries_ApplicationUsers_ApplicationUserId", BackReferenceName="FK_Industries_ApplicationUsers_ApplicationUserId_BackReferences")]
		public ApplicationUser Industries_ApplicationUsers_ApplicationUserId { get; set; }

		#endregion
	}

	[Serializable]
	[Table("IntegrationEventLogs")]
	public partial class IntegrationEventLog : BaseIntEntity
	{
		[PrimaryKey, NotNull    ] public string   EventId       { get; set; } // char(36)
		[Column,     NotNull    ] public string   EventTypeName { get; set; } // longtext
		[Column,     NotNull    ] public int      State         { get; set; } // int(11)
		[Column,     NotNull    ] public int      TimesSent     { get; set; } // int(11)
		[Column,     NotNull    ] public DateTime CreationTime  { get; set; } // datetime(6)
		[Column,     NotNull    ] public string   Content       { get; set; } // longtext
		[Column,        Nullable] public string   TransactionId { get; set; } // longtext
	}

	[Serializable]
	[Table("Otps")]
	public partial class Otp : BaseIntEntity
	{
		[Column(),         Nullable] public string    Culture          { get; set; } // longtext
		[Column(),      NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column(),         Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column(),         Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column(),         Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column(),      NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column(),      NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column(),      NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column(),         Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column(),         Nullable] public string    Phone            { get; set; } // longtext
		[Column("Otp"),    Nullable] public string    OtpColumn        { get; set; } // longtext
		[Column(),         Nullable] public DateTime? ExpiredDate      { get; set; } // datetime(6)
		[Column(),         Nullable] public bool?     IsUse            { get; set; } // tinyint(1)
	}

	[Serializable]
	[Table("Pictures")]
	public partial class Picture : BaseIntEntity
	{
		[Column,    Nullable] public string    Culture          { get; set; } // longtext
		[Column, NotNull    ] public DateTime  CreatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public DateTime? UpdatedDate      { get; set; } // datetime(6)
		[Column,    Nullable] public string    CreatedBy        { get; set; } // longtext
		[Column,    Nullable] public string    UpdatedBy        { get; set; } // longtext
		[Column, NotNull    ] public bool      IsActive         { get; set; } // tinyint(1)
		[Column, NotNull    ] public bool      IsDeleted        { get; set; } // tinyint(1)
		[Column, NotNull    ] public int       DisplayOrder     { get; set; } // int(11)
		[Column,    Nullable] public string    OrganizationPath { get; set; } // longtext
		[Column,    Nullable] public string    Name             { get; set; } // varchar(256)
		[Column, NotNull    ] public string    FileName         { get; set; } // varchar(256)
		[Column,    Nullable] public string    FilePath         { get; set; } // longtext
		[Column, NotNull    ] public long      Size             { get; set; } // bigint(20)
		[Column,    Nullable] public int?      Order            { get; set; } // int(11)
		[Column, NotNull    ] public int       PictureType      { get; set; } // int(11)
		[Column,    Nullable] public string    Extension        { get; set; } // longtext
		[Column,    Nullable] public string    RedirectLink     { get; set; } // longtext

		#region Associations

		/// <summary>
		/// FK_ApplicationUsers_Pictures_AvatarId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="AvatarId", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ApplicationUser> FK_ApplicationUsers_Pictures_AvatarId_BackReferences { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static __EFMigrationsHistory Find(this ITable<__EFMigrationsHistory> table, string MigrationId)
		{
			return table.FirstOrDefault(t =>
				t.MigrationId == MigrationId);
		}

		public static ApplicationUser Find(this ITable<ApplicationUser> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApplicationUserClass Find(this ITable<ApplicationUserClass> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApplicationUserGroup Find(this ITable<ApplicationUserGroup> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApplicationUserIndustry Find(this ITable<ApplicationUserIndustry> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApplicationUserUserGroup Find(this ITable<ApplicationUserUserGroup> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CustomerCategory Find(this ITable<CustomerCategory> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CustomerStructure Find(this ITable<CustomerStructure> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CustomerType Find(this ITable<CustomerType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static FCMToken Find(this ITable<FCMToken> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Industry Find(this ITable<Industry> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static IntegrationEventLog Find(this ITable<IntegrationEventLog> table, string EventId)
		{
			return table.FirstOrDefault(t =>
				t.EventId == EventId);
		}

		public static Otp Find(this ITable<Otp> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Picture Find(this ITable<Picture> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}

#pragma warning restore 1591
